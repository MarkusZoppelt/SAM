<?xml version="1.0" encoding="UTF-8"?>
<gxl dbName="EAST-ADL" dbPath="c:\EAST-ADL_ME" timeStamp="2019-11-14T13:31:34.053Z" version="5.5" xmlns="http://www.metacase.com/gxlGOPRRType" xmlns:ns="http://www.w3.org/1999/xlink" xmlns:sym="http://www.metacase.com/symbol">
	<graph id="Graph_Allocation_Matrix_user_3492975668" type="Graph_Allocation_Matrix_user_3492975668" typeName="AllocationMatrix">
		<description>EAST-ADL version M2.1.12
AllocationMatrix specifies how design functions are been allocated to hardware components.</description>
		<superType>
			<graph id="Graph__EAST_ADL_sysadmin_3576828277" type="Graph__EAST_ADL_sysadmin_3576828277" typeName="_EAST-ADL">
				<description>Abstract supertype of all EAST-ADL graph types</description>
				<slot id="c6cao0" name="__UUID" unique="false">
					<property id="Property___UUID_sysadmin_3604668056" type="Property___UUID_sysadmin_3604668056" typeName="__UUID">
						<description>Globally unique identifier.</description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<widget>UUID Base64</widget>
					</property>
				</slot>
				<identProp slotID="c6cao0"></identProp>
				<report>
					Report '!Doc'
subreport 'Export graph hierarchy to Word' run 
endreport
					<icon offset="0,0" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="20" version="1.2" width="20" xmlns="http://www.w3.org/2000/svg">
							<image height="20" ns:href="Graph__EAST_ADL_sysadmin_3576828277-!Doc-Icon-1.png" sym:scale="1,1" width="20" x="0" y="0"></image>
							<textArea display-align="center" fill="rgb(0,0,224)" font-family="constantia" font-size="12" font-style="italic" font-weight="bold" height="11" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="14" x="6" y="7">W</textArea>
						</svg>
					</icon>
				</report>
				<report>Report 'All elements in other project'
$proj = projectid
'The following objects belong to another project than this graph type:' newline
do graphs where projectid = $proj {
	foreach .() where projectid &lt;&gt; $proj {
		id ' in ' id;1 ' exists in project ' project
		newline;
	}	
}
endreport</report>
				<report>Report 'Documentation in HTML'
_translators()
$Graphs=' '
variable 'starting_graph' write subreport '_id and oid' run close
subreport '_EAST-ADL graphs in HTML' run 
external '"' subreport '_default directory' run $starting_graph '.html"' execute 
endreport</report>
				<report>
					Realization\ relationships()
/* reports all realizations links among the elements */
$project = project
'Realization relationships in ' $project ' project:' newline;
do graphs where projectid = projectid;1 {
	foreach &gt;Realization {
		do ~Realized.() { id ' &lt;' Type '&gt; is realized by ' }
		do ~RealizedBy.() {id ' &lt;' Type '&gt;' newline}
	}
}

					<icon offset="0,0" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="70" version="1.2" width="60" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(255,255,255)" points="40,0 60,20 40,20 40,0 0,0 0,70 60,70 60,20" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="20" x2="10" y1="20" y2="20"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="40" y1="40" y2="40"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="30" y1="50" y2="50"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="20" y1="60" y2="60"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="10" x2="30" y1="10" y2="10"></line>
							<polygon fill="rgb(255,255,255)" points="40,0 40,20 60,20" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<polygon fill="rgb(0,0,0)" points="42,26 22,32.3333 35.333,45" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="3" x1="25" x2="18.3333" y1="43" y2="49.6667"></line>
							<line stroke="rgb(0,0,0)" stroke-width="3" x1="11.6667" x2="5" y1="56.3333" y2="63"></line>
						</svg>
					</icon>
				</report>
				<report>
					Satisfy\ relationships()
/* reports all satisfy links among the elements */
$project = project
'Satisfy relationships in ' $project ' project:' newline;
do graphs where projectid = projectid;1 {
	foreach &gt;(Satisfy*) {
		do ~SatisfiedBy.() { id ' &lt;' Type '&gt; satisfies ' }
		do ~(^SatisfiedBy).() {id ' &lt;' Type '&gt;' newline}
	}
}

					<icon offset="0,0" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="70" version="1.2" width="60" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(255,255,255)" points="40,0 60,20 40,20 40,0 0,0 0,70 60,70 60,20" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="20" x2="10" y1="20" y2="20"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="40" y1="40" y2="40"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="30" y1="50" y2="50"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="20" y1="60" y2="60"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="10" x2="30" y1="10" y2="10"></line>
							<polygon fill="rgb(255,255,255)" points="40,0 40,20 60,20" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<polygon fill="rgb(170,170,170)" points="42,26 22,32.3333 35.333,45" stroke="rgb(170,170,170)" stroke-width="1"></polygon>
							<line stroke="rgb(170,170,170)" stroke-width="3" x1="25" x2="18.3333" y1="43" y2="49.6667"></line>
							<line stroke="rgb(170,170,170)" stroke-width="3" x1="11.6667" x2="5" y1="56.3333" y2="63"></line>
						</svg>
					</icon>
				</report>
				<report>_ARPortDetails()
do #();2 {
	id 
	if :Type; then 
		' (' 
		do :Type {:Short name; ':' type }
		')'
	endif 
	' connects with ' 
	if type;1 = 'DesignFunctionPrototype' then /* assembly */
		do #();2 {:Short name;}' port of ' :Short name;1  
		do graphs where oid; = oid;9 {
			foreach .DesignFunctionPrototype; where oid  = oid;3 {
				do ~InstanceRef;~Target.() {' allocated to ComponentType ' :Short name; }
			}
		}
	else
		:Short name;1 /* delegation port */
	endif
	
	newline
}	
</report>
				<report>_ArrayDatatype()
/* Reporting the ArrayDatatype properties */
if :MaxLength; then '&lt;MAX-LENGTH&gt;' :MaxLength '&lt;/MAX-LENGTH&gt;' newline endif
if :MinLength; then '&lt;MIN-LENGTH&gt;' :MinLength '&lt;/MIN-LENGTH&gt;' newline endif
'&lt;ELEMENT-TYPE-REF TYPE="' do :Type { type%minus%upper '"&gt;' variable oid '_path' read } '&lt;/ELEMENT-TYPE-REF&gt;' newline</report>
				<report>_baseRangeable()
/* Reporting the baseRangeable details */
if $EAXMLoids =~oid%wildsp AND not ($reported_elements =~ oid%wildsp) then
	variable 'reported_elements' append oid ' ' close
	variable 'type_name' write type%minus%upper close
	local 'BRName' write :Short name; close
	local 'BRShortName' write @BRName%toShortName close
	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' @ShortName ')'
	else
		@BRShortName 
	endif
	' --&gt;' newline 
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' @BRShortName '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' 
	endif
	subreport '_description' run
	_EANumerical()
	'&lt;/' $type_name '&gt;'
	do :Unit { _unit() }
endif
</report>
				<report>_baseRangeable_details()
/* Reports the BaseRangeables details */
if $EAXMLoids =~oid%wildsp then
	newline
	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' $type_name ' name: '
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	if :AmountOfSubstanceExp; then '&lt;AMOUNT-OF-SUBSTANCE-EXP&gt;' :AmountOfSubstanceExp;%xml '&lt;/AMOUNT-OF-SUBSTANCE-EXP&gt;' newline endif
	if :ElectricCurrentExp; then '&lt;ELECTRIC-CURRENT-EXP&gt;' :ElectricCurrentExp;%xml '&lt;/ELECTRIC-CURRENT-EXP&gt;' newline endif
	if :LengthExp; then '&lt;LENGTH-EXP&gt;' :LengthExp;%xml '&lt;/LENGTH-EXP&gt;' newline endif
	if :LuminousIntensityExp; then '&lt;LUMINOUS-INTENSITY-EXP&gt;' :LuminousIntensityExp;%xml '&lt;/LUMINOUS-INTENSITY-EXP&gt;' newline endif
	if :MassExp; then '&lt;MASS-EXP&gt;' :MassExp;%xml '&lt;/MASS-EXP&gt;' newline endif
	if :ThermodynamicTemperatureExp; then '&lt;THERMODYNAMIC-TEMPERATURE-EXP&gt;' :ThermodynamicTemperatureExp;%xml '&lt;/THERMODYNAMIC-TEMPERATURE-EXP&gt;' newline endif
	if :TimeExp; then '&lt;TIME-EXP&gt;' :TimeExp;%xml '&lt;/TIME-EXP&gt;' newline endif
	if type = 'EANumerical' then
		_EANumerical()
	endif
	'&lt;/' $type_name '&gt;'
	do :Unit { 
		if not $reported_elements =~ oid%wildsp then
			variable 'reported_elements' append oid ' ' close
			variable 'type_name' write type%minus%upper close
			_unit_details()
			do :Quantity {
				if not $reported_elements =~ oid%wildsp then
					variable 'reported_elements' append oid ' ' close
					variable 'type_name' write type%minus%upper close
					_quantity_details()
				endif
			}
			do :UnitReference {
				if not $reported_elements =~ oid%wildsp then
					variable 'reported_elements' append oid ' ' close
					variable 'type_name' write type%minus%upper close
					_unit_details()
					do :Quantity {
						if not $reported_elements =~ oid%wildsp then
							variable 'reported_elements' append oid ' ' close
							variable 'type_name' write type%minus%upper close
							_quantity_details()
						endif
					}
				endif
			}
		endif
	}
endif
</report>
				<report>_bindingsWithDeletedPorts()
/* Reports all bindings with ports in which target port object is deleted */
$ports = ' '
foreach .(*Prototype) 
{	do decompositions 
	{	foreach .(*Port | *Pin* ) { variable 'ports' append oid ' ' close	}}
	do ~(*Port* | *Pin* | FailureOut | FaultIn); 
	{	do #() 
		{	if not $ports =~ oid%wildsp then
				_reportWarnings()
				'Warning: ' id;2 ' in role ' type;1 ' does not have target port defined'
				if $extendedCheck = 'T' then
					' in the model ' id;3 ' &lt;' type;3 '&gt;'
				else
					'. Reconnect or remove the role ' if id;1 then id;1 ' ' else '&lt;' type;1 '&gt;.' endif
				endif
				newline
			endif
		}
	}
}
</report>
				<report>_build_typesAccessedFromLevels()
if type =~ '*Prototype' then
	do decompositions {
		if not $typesAccessedFromLevels =~ oid%wildsp then
			variable 'typesAccessedFromLevels' append oid ' ' close
			foreach .(*Prototype) {
				if not $typesAccessedFromLevels =~ oid%wildsp then
					/* Add oid to typesAccessedFromLevels variable */
					variable 'typesAccessedFromLevels' append oid ' ' close
					/* Goes through the submodels */
					do decompositions {
						foreach .(*) {	_build_typesAccessedFromLevels() }
					}
				endif
			}
			endif

		/* Ports and Pins */
		foreach .(*Port | *Pin*) {
			if not $typesAccessedFromLevels =~ oid%wildsp then
				/* Add oid to typesAccessedFromLevels variable */
				variable 'typesAccessedFromLevels' append oid ' ' close
				subreport '_data-type type' run
				if (type =~ 'Client*') OR (type =~ 'Server*') then
					do :Type {			
						if not $typesAccessedFromLevels =~ oid%wildsp then
							variable 'typesAccessedFromLevels' append oid ' ' close
							subreport '_data-type type' run
						endif
					}
				endif
			endif
		}
	}
endif
	
/* Add oid to typesAccessedFromLevels variable */
if (type =~'*Port') OR (type =~ '*Pin*') then 
	if not $typesAccessedFromLevels =~ oid%wildsp then
		variable 'typesAccessedFromLevels' append oid ' ' close
		subreport '_data-type type' run
		if (type =~ 'Client*') OR (type =~ 'Server*') then
			do :Type {
				if not $typesAccessedFromLevels =~ oid%wildsp then
					variable 'typesAccessedFromLevels' append oid ' ' close
					subreport '_data-type type' run
				endif
			}
		endif
	endif
endif

if type = 'SystemModel' then
	do decompositions { 
		foreach .(*Prototype | Allocations) {
			subreport '_build_typesAccessedFromLevels' run
		}
	}
endif

/* Package */
if type = 'Package'; then
	do decompositions { subreport '_find packaged types' run }
endif</report>
				<report>_checkEATypesInEAXML()
if type = 'AnalysisFunctionType' or type = 'DesignFunctionType' or type = 'HardwareComponentType' then
	foreach .(*Prototype) {
		do decompositions {
			if not $TypesInEAXML =~ oid%wildsp and not $ReportedTypeDefsErrors =~ oid%wildsp then
				variable 'ReportedTypeDefsErrors' append oid ' ' close
				_reportWarnings()
				'Warning: ' id ' &lt;' type '&gt; is not defined in any package' newline
				_checkPrototypesInEAXML()
			endif 
		}
	}
	
endif

if type = 'AnalysisFunctionType' or type = 'DesignFunctionType' then
	variable 'typesChecked' append oid ' ' close
	_EAXML_CheckDataTypesInFunctionTypes()				
endif
</report>
				<report>_checkEAXMLPathSystemModel()
@shortnames = ' '
foreach .(*Prototype) 
{	subreport '_name checks' run
	@prototypeName = :Short name;
	if @shortnames =~ @prototypeName%wildsp; then
		_reportWarnings()
		'Warning: ' id;1 ' contains several prototypes with the same short name ' :Short name; newline
	else
		local 'shortnames' append :Short name; ' ' close
	endif
}</report>
				<report>_CheckIfDuplicatesInFunctionTypeDefinition()
/* checks that not duplicate F*A elements in the hierarchy */
foreach .(*Prototype | *Port ) {
	if not $prototypes =~ oid%wildsp then
		variable 'prototypes' append oid ' ' close
	else
		$error = 'T'
		'Warning: ' type ' ' id ' exists in several types. Open Info... for it' newline
	endif
	do decompositions {
		if not $visitedGraphs =~ oid%wildsp then
			variable 'visitedGraphs' append oid ' ' close
			_CheckIfDuplicatesInFunctionTypeDefinition()
		endif
	}
}</report>
				<report>_checkingForShortNameUniqueness()
@portsAndPrototypes = ' '
foreach .( *Prototype | *Port | *Pin* ) 
{	@name = :Short name;
	if @portsAndPrototypes =~ @name%wildsp; then
		_reportWarnings()
		'Warning: ' id;1 ' contains several elements (prototypes, pins, ports) having same identifier ' :Short name; '. Please rename them as unique in the model!'  newline
	else
		local 'portsAndPrototypes' append @name%var ' ' close
	endif
}</report>
				<report>_checkingPortDatatypes()
/* Checkings for the Port datatypes */
to '%typeName
$EABoolean $Boolean
'
endto

/* Next is executed only by running the explicit Check report button from toolbar, not by real time LiveCheck */
if $LiveCheck &lt;&gt; 'T' then 
	foreach &gt;(Flow | Power | ClientServerInterface)
	{	@port1Type = @port2Type = ''
		@element1Type = @element2Type = ''
		
		/* Port1 */
		do ~(OutFlowPort | OutPowerPort | ClientPort | InFlow | InPower | Server) 
		{	do .() { @element1Type = type }
			local 'port1Type' write
				if @element1Type =~ '*Prototype' then
					do #() {	do :Type { type }}
				else
					do .() {	do :Type { type }}
				endif
			close
		}

		/* Port2 */
		do ~(InFlowPort | InPowerPort | ServerPort | OutFlow | OutPower | Client) 
		{	do .() { @element2Type = type }
			local 'port2Type' write
				if @element2Type =~ '*Prototype' then
					do #() {	do :Type { type }}
				else
					do .() {	do :Type { type }}
				endif
			close
		}

		/* Reporting */
		if @port1Type &lt;&gt; @port2Type; then 
			/* Data-types are different */
			_reportWarnings()
			'Warning: Relationship ' id ' &lt;' type '&gt; has ports with different types: ' 
			if @port1Type then '&lt;' @port1Type%typeName '&gt;' else '&lt;undefined&gt;' endif 
				' and ' 
			if @port2Type then '&lt;' @port2Type%typeName '&gt; ' else '&lt;undefined&gt; ' endif 
			_extendedCheckOutput_level1()
			newline 	
		endif
	}
endif</report>
				<report>Report '_checkings for the graph'
/*******************/
/* Model checkings */
/*******************/
if not id then
	_reportWarnings()
	'Warning: There is no identifier for model: (' type ')' newline
endif
if type &lt;&gt; 'HardwareComponentType' then
	if not id =/ '[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?' then
		_reportWarnings()
		'Warning: There are illegal character(s) in the graph''s FunctionName/Short name property ' id; newline
	endif
else
	do :Type 
	{	if not :Short name; =/ '[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?' then
			_reportWarnings()
			'Warning: There are illegal character(s) in graph''s name ' :Short name; ' &lt;' type '&gt;' newline
		endif
	}
endif

/* Checking for IsElementary property */
if :IsElementary; then
	@hasElements = 'F'
	foreach .(*Prototype) {	@hasElements = 'T' }
	if @hasElements; = 'T' then
		_reportWarnings()
		'Warning: ' type ' is marked elementary but it has prototypes defined as parts' newline
	endif
endif

/* Checking for the DesignFunctionType which Type is defined as HardwarefunctionType */
@HardwareFunctionTypeFound = ''
$prototype_list = ''
@delimeter = ''
if type = 'DesignFunctionType' And :Type = 'HardwareFunctionType' then
	foreach .DesignFunctionPrototype 
	{ 	do decompositions 
		{	if :Type &lt;&gt; 'HardwareFunctionType' then
				@HardwareFunctionTypeFound = 'F'
				variable 'prototype_list' append @delimeter id ' &lt;' :Type '&gt;' close
				@delimeter = ', '
			endif
		}
	}
endif
@delimeter = ''

if @HardwareFunctionTypeFound; &lt;&gt; '' then
	_reportWarnings()
	'Warning: Model ' id ' &lt;' :Type '&gt; should contain only prototypes typed as HardwareFunctionType, now it contains following prototypes: ' $prototype_list newline
endif

endreport</report>
				<report>Report '_checkings for the objects'
/*****************************/
/* Checkings for the objects */
/*****************************/
$emptyIdFound = 'F'

foreach .(^Comment | ^Operator) 
{	/* Identifier checks */
	subreport '_name checks' run

	/* Finding the objects where Type undefined */
	if (type =~ '*Prototype') and not (type =~ '*FaultPrototype') then
		if not decompositions then
			_reportWarnings()
			'Warning: Type undefined for ' 
			if type &lt;&gt; 'HardwareComponentType' then
				:Short name; ' &lt;' type '&gt; '
			else
				id ' &lt;' type '&gt; ' 
			endif
			_extendedCheckOutput_level1()
			if $LiveCheck = 'T' then
				'Define a suitable subgraph for it (Ctrl + double click the object).' 
			endif
			newline
		endif
	endif

	/* HardwareComponentPrototypes */
	if type = 'HardwareComponentPrototype' then
		/* Finding the sensors and actuators connected in series */
		_sensorsAndActuatorsInSeries()
	endif
	
	/* HardwarePortConnectors */
	if type = 'HardwarePortConnector' then
		/* HardwarePortConnector checkings */
		_hardwarePortConnectorCheck()
	endif
	
	/* Finding QualityRequirement Kind undefined */
	if type =~ 'QualityRequirement' And :Kind = '' then
		_reportWarnings()
		'Warning: Undefined Kind property for ' id 
		_extendedCheckOutput_level1()
		newline
	endif
}

/* Finding the duplicate object short names */
@duplicateObjects = _duplicatedObjects()
if @duplicateObjects; then
	_reportWarnings()
	'Warning: Same short name identifier ' 
	dowhile @duplicateObjects; where id orderby id unique id
	{	@temp = id
		'"' @temp '" used for:'
		@prefix = ' '
		foreach .(^Comment) where :Short name; = :Short name;1 orderby x NUM, y NUM
		{	@prefix
			@prefix = ', '
			'&lt;' type '&gt;'
		}
		', '
	}
	if $extendedCheck = 'T' then
		' in the model ' id ' &lt;' type '&gt;. '
	else
		'. Give a unique short name identifier for every object.'
	endif
	newline
endif


/* Reporting the Port Type checks */
@undefinedTypeFound = 'F'
foreach .(*Port) 
{	/* Undefined type values */
	if :Type = '' then
		@undefinedTypeFound = 'T'
	endif
	/* Reporting the undefined values */
	do :Type {	_validateDataTypes() }
}

/* Reporting the undefined Port datatypes */
if @undefinedTypeFound = 'T' then
	@delimeter = ''
	_reportWarnings()
	'Warning: Undefined Type(s) for Ports: '
	foreach .(*Port) 
	{	if :Type = '' then
			@delimeter id ' &lt;' type '&gt;'
			@delimeter = ', '
		endif
	}
	if $extendedCheck = 'T' then
		' in the model ' id ' &lt;' type '&gt;'
	endif
	@delimeter = ''
	if $LiveCheck = 'T' then
		'. Run ''Check'' report to see detailed analysis for the whole architecture.'
	endif
	newline
endif

endreport</report>
				<report>Report '_checkings for the relationships'
/***********************************/
/* Checkings for the relationships */
/***********************************/
$emptyIdFound = 'F'
foreach &gt;(Flow | ClientServerInterface | Power | HardwareConnector | FaultFailurePropagationLink )
{	/* Relationship Name checkings */
	subreport '_name checks' run
	
	if type = 'HardwareConnector' then
	/* Finding the incorrect pin types */
	@checkIO = 'F'
	do ~() 
	{ 	if type =~ 'IO*' then 			
			@checkIO = 'T'
		endif
	}
	if @checkIO; = 'T' then
		subreport '_inCorrectPinTypes' run 
		if $fromtype &lt;&gt; $totype then 
			_reportWarnings()
			'Warning: Incompatible pin types in relationship ' id ' &lt;' type '&gt;: ' $fromtype ' &lt;&gt; ' $totype; newline 
		endif
	endif
	endif
}

/* Reporting the empty relationship ids */
@delimeter = ''
if $emptyIdFound; = 'T' then
	_reportWarnings()
	'Warning: Short name missing for relationship: '
	foreach &gt;() where :Short name; = '' 
	{ 	@delimeter 
		subreport '_id or type' run 
		@delimeter = ', '
	}
	if $extendedCheck = 'T' then
		' in the model ' id ' &lt;' type '&gt;. '
	else
		'. Give a unique short name to every relationship.'
	endif
	newline
endif
$emptyIdFound = 'F'
@delimeter = ''

/* Finding the duplicate relationship short names */
@duplicatedRelationships = _duplicatedRelationships()
if @duplicatedRelationships; then
	_reportWarnings()
	'Warning: Same relationship short name used for ' 
	dowhile @duplicatedRelationships; where id orderby id unique id
	{	@temp = id
		'"' @temp '":'
		@prefix = ' '
		foreach &gt;(^Comment) where :Short name; = :Short name;1 orderby x NUM, y NUM
		{	@prefix
			@prefix = ', '
			'&lt;' type '&gt;'
		}
	}
	if $extendedCheck = 'T' then
		' in the model ' id ' &lt;' type '&gt;. '
	else
		'. Give a unique short name for every relationship.'
	endif
	newline
endif

_checkingPortDatatypes()

endreport</report>
				<report>Report '_checkings for the roles'
/***************************/
/* Checkings for the roles */
/***************************/
/* Reporting the ports which have been connected but port information later deleted, ie. binding still exists without the port */
_bindingsWithDeletedPorts()

/* More extensive check is launched, when Check report is explicitely launched from the toolbar */ 
if $LiveCheck &lt;&gt; 'T' then
	/* Reporting the undefined Port Types */
	$undefinedTypeFound = 'F'
	_undefinedType()
endif
endreport</report>
				<report>_checkingsForFunctionAndHardwarePrototypes()
/* Checkings for the Model */
subreport '_checkings for the graph' run

/* Checkings for FAA, FDA and HDA prototypes */
subreport '_checkings for the objects' run

/* Checkings for Roles */
subreport '_checkings for the roles' run

/* Undefined subgraph */
foreach .(*Prototype)
{	/* Follow the subgraph hiearchy */
	do decompositions 
	{	if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			_checkingsForFunctionAndHardwarePrototypes()	
		endif
	}
}

/* Reporting the Requirements which are not defined in any Package, but still used in the model (path information may be missing in EAXML output) */
foreach .(*Requirement)
{	if not $requirementsInThisPackageHiearchy =~ oid%wildsp then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; has been used in model ' id;1 ' &lt;' type; 1 '&gt;, but it is not defined in any Package, so reference path may be missing in EAXML output.' newline
	endif
}</report>
				<report>_checkingsForFunctionPrototypes()
/* Checkings for FAA and FDA */
/* Empty Type properties */
foreach .(*Port)
{
	if :Type = '' then
		_reportWarnings()
		'Warning: ' id; ' &lt;' type '&gt; does not have Type property defined in model ' id;1 ' &lt;' type;1 '&gt;' newline
	endif
}

/* Undefined subgraph */
foreach .(*FunctionPrototype)
{	
	/* Subgraph undefined */
	if not decompositions then
		_reportWarnings()
		'Warning: Type undefined for ' :Short name; ' &lt;' type '&gt; in model ' id;1 newline
	endif
	/* Follow the subgraph hiearhcy */
	do decompositions 
	{ 
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			_checkingsForFunctionPrototypes()	
		endif
	}
}</report>
				<report>_checkingsForTimingModels()

if type = 'TimingModel' then
	/* Checking for the events */
	_EventChecks()
	/* Checking for the constraints */
	_ConstraintChecks()
else 
	foreach .() 
	{
		if $LiveCheck &lt;&gt; 'T' then
			if type = 'Package'; then
				do decompositions { _checkingsForTimingModels()	}
			endif
		endif
	}
endif 
</report>
				<report>_checkingShortNameUniqueness()
@shortNames = ' '
@reported = ' '
foreach .( * | ^Comment | ^Generic* | ^User* ) 
{	@this = ''
	if type = 'EAType' then
		do decompositions 
		{	if type =~ '*FunctionType' then
				local 'this' write :FunctionName; close
			else
				if type = 'HardwareComponentType' then
					do :Type { local 'this' write :Short name; close }
				else
					local 'this' write :Short name; close
				endif
			endif
		}
	else
		if type = 'Package' or type = 'SystemModel' then
			do decompositions 
			{	local 'this' write :Short name; close }
		else
			local 'this' write :Short name; close
		endif
	endif
	
	if @shortNames =~ @this%wildsp; and not @reported =~ @this%wildsp then
		local 'reported' append @this ' ' close
		_reportWarnings()
		'Warning: ' :Short name;1 ' contains several elements with' 
		if @this then 
			' the same name ' @this 
		else 
			' empty identifier e.g. ' type 
		endif 
		newline
	else
		local 'shortNames' append @this ' ' close
	endif
}</report>
				<report>_checkPrototypesInEAXML()
foreach .(*Prototype) 
{	do decompositions 
	{	if not $TypesInEAXML =~ oid%wildsp and not $ReportedTypeDefsErrors =~ oid%wildsp then
			variable 'ReportedTypeDefsErrors' append oid ' ' close
			_reportWarnings()
			'Warning: ' id ' &lt;' type '&gt; is not defined in any package' newline
			_checkPrototypesInEAXML()
		endif 
		
		if not $EATypeGraphs =~ oid%wildsp then
			variable 'ReportedTypeDefsErrors' append oid ' ' close
			_reportWarnings()
			'Warning: ' id ' &lt;' type '&gt; referred via '
			do stack 
			{	if type = 'SystemModel' and metatype = 'Graph' then 
					id ' &lt;' type '&gt; is not defined in any package' newline
				endif
			}
		endif
		
		if type = 'AnalysisFunctionType' or type = 'DesignFunctionType' then
			variable 'typesChecked' append oid ' ' close
			_EAXML_CheckDataTypesInFunctionTypes()				
		endif
	}
}</report>
				<report>_checkTimingAndBehaviorModelsForEAXML()
if type = 'TimingModel' or type = 'BehaviorGraph' or type = 'Dependability' then
	_EAXML_CheckIfFunctionsDefined()
	_EAXML_CheckIfFunctionTypesDefined()
	_EAXML_CheckIfEventChainsDefined()
	_EAXML_CheckIfModesDefined()
	_EAXML_CheckIfEventsDefined()
	_EAXML_CheckIfDatatypesDefined()
	_EAXML_CheckIfPortsDefined()
	_EAXML_CheckIfFeatureFlawsDefined()
	_EAXML_CheckIfFaultFailuresDefined()
	_EAXML_CheckIfFeaturesDefined()
	_EAXML_CheckIfSafetyGoalsDefined()
	_EAXML_CheckIfHazardousEventDefined()
endif

foreach .Package 
{	do decompositions 
	{	if not $visited =~ oid%wildsp; then
			_checkTimingAndBehaviorModelsForEAXML() 
		endif
	}
}
</report>
				<report>_checkUsedTypesInEAXML()

_EAXML_CheckIfArrayDataTypeDefined()
_EAXML_CheckIfEANumericalDataTypeDefined()
_EAXML_CheckIfCompositeDataTypesTypeDefined()
_EAXML_CheckIfRangeableValueTypesDataTypeDefined()
_EAXML_CheckClientServerInterfaceTypesDefined()

foreach .EAType {
	do decompositions {
		_checkEATypesInEAXML()
	}
}

foreach .SystemModel {
	do decompositions {
		_checkPrototypesInEAXML()
	}
}

foreach .Package {
	do decompositions {
		_checkUsedTypesInEAXML()	
	}
}</report>
				<report>Report '_client-server properties'
/* Generating the client-server type property */
'&lt;KIND&gt;' 
if type = 'ClientPort' then
	'Client'%upper
else
	'Server'%upper
endif
'&lt;/KIND&gt;' newline
'&lt;TYPE-TREF TYPE="FUNCTION-CLIENT-SERVER-INTERFACE"&gt;' 
do :Type { variable oid '_path' read }
'&lt;/TYPE-TREF&gt;' newline

endreport</report>
				<report>Report '_ClientServerInterface'
/* Generating the Function-Client-Server-Interface definitions */
if not $reported_elements =~ oid%wildsp then
	variable 'reported_elements' append oid ' ' close
	do :Type {
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		subreport '_ClientServerInterfaceDetails' run 
	endif
	}
endif
endreport</report>
				<report>Report '_ClientServerInterfaceDetails'
if $EAXMLoids =~oid%wildsp then
	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- FUNCTION-CLIENT-SERVER-INTERFACE name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;FUNCTION-CLIENT-SERVER-INTERFACE UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	_FunctionClientServerInterface()
	'&lt;/FUNCTION-CLIENT-SERVER-INTERFACE&gt;'
endif
endreport</report>
				<report>_ClientServerInterfaces()
/* Creates the ClientServerInterfaces */
foreach &gt;ClientServerInterface
{	do ~(^Comment) 
	{	variable 'port' write do #(){ oid } close 
		do .() 
		{ 	do decompositions 
			{	foreach .(*Port) 
				{	if oid = $port then
						subreport '_ClientServerInterface' run
					endif
				}
			}
		}
	}
}</report>
				<report>_collectAllPackagedRequirements()
/* Creates a variable listing all the packaged Requirements */
foreach .(*Requirement | Package)
{	if type =~ '*Requirement' then
		if not $requirementsInThisPackageHiearchy =~ oid%wildsp then
			variable 'requirementsInThisPackageHiearchy' append oid ' ' close
		endif
	else
		if type = 'Package' then
			do decompositions { _collectAllPackagedRequirements() }
		endif
	endif
}</report>
				<report>_collectAllTypesInThisEAXML()
$EAXMLoids = ' '
	
foreach .Package 
{	do decompositions {	_createThisEAXMLTypeCollection()	}}</report>
				<report>_collectEATypes()
if not $packages_in_cycle =~ oid%wildsp then
	variable 'packages_in_cycle' append oid ' ' close
	/* Collecting all the types accessed via the EAType objects */
	foreach .() 
	{	if type ='EAType' then
			do decompositions 
			{	if not $EATypeGraphs =~ oid%wildsp then
					variable 'EATypeGraphs' append oid ' ' close
				endif
			}
		endif
	
		if type ='Package' then
			do decompositions { _collectEATypes() }
		endif
	
		if type = 'CompositeDatatype' then
			@duplicateEADataTypePrototypes = ' '
			do :DatatypePrototypes; 
			{	@short = :Short name;
				if not @duplicateEADataTypePrototypes =~ @short%wildsp; then
					local 'duplicateEADataTypePrototypes' append :Short name; ' ' close
				else
					_reportWarnings()
					'Warning: ' id; ' &lt;' type '&gt; in ' id;1 ' defined several times in DatatypePrototypes with the same Short name ' newline
				endif
			}
		endif
	}
endif</report>
				<report>_collectGraphsInThisHierarchy()

/* collects the hierarchy of graphs based on the model hierarchy via packages and system models */
if not $myGraphs =~ oid%wildsp then
	variable 'myGraphs' append oid ' ' close /* add to the list of graphs */
	foreach .() {
		do decompositions {
			_collectGraphsInThisHierarchy()
		}
		do explosions {
			_collectGraphsInThisHierarchy()
		}
	}
endif</report>
				<report>_CompositeDatatype()
/* Reporting the CompositeDatatype information */
'&lt;DATATYPE-PROTOTYPES&gt;'
do :DatatypePrototypes { 
	newline
	'&lt;EA-DATATYPE-PROTOTYPE UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then
		'&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline
	endif
	do :Type { 
		'&lt;TYPE-TREF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
	} 
	'&lt;/EA-DATATYPE-PROTOTYPE&gt;' newline
} 
'&lt;/DATATYPE-PROTOTYPES&gt;' newline</report>
				<report>_createFunctionTypePath()

if not $pathsVisited =~oid%wildsp then
	variable 'pathsVisited' append oid ' ' close
	
	_StackforEAXMLPath()
		
	foreach .(*Prototype | HardwarePortConnector) 
	{
		 _StackforEAXMLPath()	
	} 

	foreach .(*Pin* | *Port) 
	{
		_StackforEAXMLPath()
	}
	
	/* Relationships */
	foreach &gt;(^Comment)
	{
		 _StackforEAXMLPath()	
	} 

endif
</report>
				<report>_createGraphTypePath()
/* Create the path information for this graph type */
_StackforEAXMLPath()

/* All other objects */
foreach .(^EAType) 
{	do decompositions {	_createGraphTypePath() }}
</report>
				<report>_createThisEAXMLTypeCollection()

if not $EAXMLoids =~oid%wildsp then
	variable 'EAXMLoids' append oid ' ' close
	foreach .(ArrayDatatype | CompositeDatatype  | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType | Unit | Quantity | FunctionClientServerInterface ) {
		if not $EAXMLoids =~oid%wildsp then
			variable 'EAXMLoids' append oid ' ' close
		endif
	}

	foreach .EAType {
		do decompositions where type ='AnalysisFunctionType' or type = 'DesignFunctionType' or type = 'HardwareComponentType' {
			if not $EAXMLoids =~oid%wildsp then
				variable 'EAXMLoids' append oid ' ' close
				foreach .(*Pin* | *Port | *Prototype) {
					if not $EAXMLoids =~oid%wildsp then
						variable 'EAXMLoids' append oid ' ' close
					endif
				}
			endif
		}
	}
	
	foreach .(*Requirement) {
		if not $EAXMLoids =~oid%wildsp then
			variable 'EAXMLoids' append oid ' ' close
		endif
	}
	
	foreach .Package {
		do decompositions {
			_createThisEAXMLTypeCollection()
		}
	}
endif</report>
				<report>_createTypePath()
if not $pathsVisited =~oid%wildsp then
	variable 'pathsVisited' append oid ' ' close
	foreach .(ArrayDatatype | CompositeDatatype  | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType | Unit | Quantity | FunctionClientServerInterface ) 
	{	_StackforEAXMLPath()	}

	/* Creating the path information for elements accessd via the EAType */
	foreach .EAType 
	{	do decompositions where type =~ '*Type' or type = 'ErrorModel' or type = 'EnvironmentModel' or type =~ 'BehaviorGraph'  
		{	_createFunctionTypePath() }
	} 
	
	/* RequirementModel objects */
	foreach .(*Requirement | UseCase | OperationalSituation) 
	{	if type;1 = 'RequirementsModel' then
		/* Path information generated only when the Requirement objects are in the RequirementsModel, otherwise the path information would not be correct (like Requirements can exist in Dependability, FAA, FDA, Hardware */
			_StackforEAXMLPath()
		endif
	}

	/* BehaviorGraph objects */
	foreach .(ModeGroup | FunctionBehavior | FunctionTrigger) 
	{	_StackforEAXMLPath()
		if type = 'ModeGroup' then
			do :Mode 
			{	_StackforEAXMLPath()	}
		endif
	}

	/* TimingModel objects */
	foreach .(*Event* | *Constraint) 
	{	_StackforEAXMLPath()	}
	
	/* Dependabilty objects */
	foreach .(FeatureFlaw | FaultFailure | Item | SafetyGoal | HazardousEvent | Hazard) 
	{	_StackforEAXMLPath()	}
	
	/* VehicleFeature and Feature objects */
	foreach .(VehicleFeature | Feature) 
	{	if not ~Child; then 
			_StackforEAXMLPath()
			if ~Parent; then
				/* Goes through the subfeatures to get the correct path for each feature */
				_subfeatures()
			endif
		endif 
	}	
	
	/* SystemModel object */
	foreach .(SystemModel) 
	{	_StackforEAXMLPath()	
	}	
	
	foreach .Package 
	{	do decompositions 
		{	
			/* Creating the path information for graph types accessed via the package sturcture */
			_createGraphTypePath()
			_createTypePath()	
		}
	}
endif</report>
				<report>_createTypePaths()
$pathsVisisted = ' '

do graphs where type = 'EAXML' 
{	foreach .Package 
	{	do decompositions 
		{	_createTypePath()	}
	}
}

do graphs where type = 'Package' 
{	@rootPackage = 'T'

	do graphs where type = 'Package' 
	{	foreach .Package 
		{	do decompositions where type = 'Package' 
			{	if oid = oid;3 then
					@rootPackage = 'F'
				endif
			}
		}
	}
	if @rootPackage = 'T' then
		_createTypePath()
	endif
}
</report>
				<report>_createTypePathsInThisHierarchy()
foreach .Package
{	do decompositions 
	{	if $visited =~ oid%wildsp then
			_createTypePath()
		endif
		_createTypePathsInThisHierarchy()
	}
}
</report>
				<report>_create_data-types()
/* Generation of data-types found in own package */
/* Every data-type/unit/unit-reference/quantity/base-rangeable, is created as an own variable, syntax: oid_path */
variable 'modelOid' write oid '_data-types_content' close
foreach .(^Comment) { 
	if type = 'ArrayDatatype' OR type = 'CompositeDatatype' OR type = 'EABoolean' OR type = 'EANumerical' OR type = 'EAString' OR type = 'Enumeration' OR type = 'RangeableValueType' or type = 'FunctionClientServerInterface' then 
		if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
			variable 'data-types_modeled' append oid ' ' close 
			variable 'reported_elements' append oid ' ' close 
			variable 'type_name' write type%minus%upper close
			variable $modelOid append
				_data-type_content();
			close
		endif
	endif
	do :Unit {
		if not ($data-types_modeled =~ oid%wildsp) And not ($reported_elements =~ oid%wildsp) then
			variable 'data-types_modeled' append oid ' '	close
			variable 'reported_elements' append oid ' ' close 
			variable 'type_name' write type%minus%upper close
			variable $modelOid append
				_unit_details()
			close
			do :Quantity {	_quantity_element() }
			do :UnitReference {
				if not ($data-types_modeled =~ oid%wildsp) then
					variable 'data-types_modeled' append oid ' '	close 
					if not $reported_elements =~ oid%wildsp then
						variable 'reported_elements' append oid ' ' close 
						variable 'type_name' write type%minus%upper close
						variable $modelOid append
							_unit_details()
						close
						do :Quantity {	_quantity_element() }
					endif
				endif
			}
		endif 
	}
	do :BaseRangeable {
		if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
			variable 'data-types_modeled' append oid ' '	close 
			variable 'reported_elements' append oid ' ' close 
			variable 'type_name' write type%minus%upper close
			variable $modelOid append
				_baseRangeable_details()
			close
		endif
	}
	
	/* Navigate to the next package level */
	if type = 'Package' then
		if decompositions then
			do decompositions { _create_data-types() }
		endif
	endif
}</report>
				<report>_Cycle()
do ~(Realized | Start | Parent ) {
	do .(*) { $this = oid }
	do ~(RealizedBy | End | Child ).() {
		if oid = $this; then
			'Error: cycle '
		endif
	}
}</report>
				<report>Report '_data-type type'
if :Type &lt;&gt; '' then
	do :Type {
		if not $typesAccessedFromLevels =~ oid%wildsp then
			variable 'typesAccessedFromLevels' append oid ' ' close
			subreport '_data-type type' run	
			if type = 'CompositeDatatype' then
				do :DatatypePrototypes { subreport '_data-type type' run	}
			endif
		endif
	}
endif
endreport</report>
				<report>_data-types()
/* Reporting the data-types */
foreach .(ArrayDatatype | CompositeDatatype | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType | FunctionClientServerInterface) 
{	_data-type_details() }</report>
				<report>_data-type_content()
/* Reports the data-type content */
if $EAXMLoids =~oid%wildsp then
	local 'DTName' write :Short name; close
	local 'DTShortName' write @DTName%toShortName close
	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue; then
		@nameValue ' (' @DTShortName ')'
	else
		@DTShortName
	endif
	' --&gt;' newline 
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' @DTShortName '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	subreport '_' type run 
	'&lt;/' $type_name '&gt;' newline
endif

if :Type; then
	do :Type 
	{	if not $reported_elements =~ oid%wildsp then
			variable 'reported_elements' append oid ' ' close
			variable 'type_name' write type%minus%upper close
			_data-type_content();
		endif
	}
endif

if type = 'CompositeDatatype' then
	do :DatatypePrototypes 
	{ 	if :Type; then
			do :Type { _data-type_details()	}
		endif
	}
endif
</report>
				<report>_data-type_details()
/* Reporting the data-type details */
if not $reported_elements =~ oid%wildsp then
	variable 'reported_elements' append oid ' ' close
	variable 'type_name' write type%minus%upper close
	if $type_name = 'FUNCTION-CLIENT-SERVER-INTERFACE' then
		subreport '_ClientServerInterfaceDetails' run
	else
		_data-type_content();
	endif

	/* Report the Unit definition */
	do :Unit { _unit() }

	/* Report the BaseRangeable definition */
	do :BaseRangeable { _baseRangeable() }
endif
</report>
				<report>_dataTypeDetails()
newline; newline;
do :() where id &lt;&gt; id;1 and type &lt;&gt; '__UUID' and type &lt;&gt; 'Description' 
{
	containers ': ' id newline
}</report>
				<report>Report '_dataTypeReference'
/* Generates the typeReference for the data-types */
do :Type 
{	'&lt;TYPE-TREF TYPE="' type;%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline }
endreport</report>
				<report>Report '_decomposed type information'
if (type = 'AnalysisFunctionType') or (type = 'DesignFunctionType') or (type = 'HardwareComponentType') then
	/* Reported only if type is among the typesAccessedFromLevels and it is not among the packaged_types, ie. reported earlier */
	if ($typesAccessedFromLevels =~ oid%wildsp) AND not ($packaged_types =~ oid%wildsp) then 
		subreport '_' type run
	endif
endif
endreport</report>
				<report>Report '_description'
/* Generating the OWNED-COMMENTS section */
if :Description; then 
	'&lt;OWNED-COMMENTS&gt;' newline
	'&lt;COMMENT&gt;' newline
	'&lt;BODY&gt;' :Description;%xml '&lt;/BODY&gt;' newline
	'&lt;/COMMENT&gt;' newline
	'&lt;/OWNED-COMMENTS&gt;' newline
endif 
endreport</report>
				<report>_DiagramBehaviorRepr()
'		&lt;diagram displayGrid="false" grid="10,10" timeStamp="" useGrid="true" xmlns="http://www.metacase.com/gxlGOPRRRepr"&gt;
			&lt;graph href="#_'oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/graph&gt;' newline
			foreach .(InFlowPort | ServerPort | OutFlowPort | ClientPort ) {
			'			&lt;objectRepr id="_r' oid '" place="' x ',' y '"&gt;
				&lt;object href="#_' oid'" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/object&gt;
			&lt;/objectRepr&gt;' newline
			}
			/* add operators */
			foreach .(OutFlowPort | ClientPort ) {
				if x &lt; '170' num then 
					@place = '200' /* to keep added operator in diagram */
				else
					local 'place' write x '-150' close /* left from outport */
				endif	
				'			&lt;objectRepr id="_rOper' oid '" place="' math @place evaluate ',' y '"&gt;
					&lt;object href="#_Oper_' oid'" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/object&gt;
				&lt;/objectRepr&gt;' newline
			}

/* operators to outports */
foreach .(OutFlowPort | ClientPort) {
	'			&lt;bindingRepr isStraight="true" oid="_br' oid '" place="300,200"&gt;
			&lt;binding href="#_b' oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/binding&gt;
				&lt;connectionRepr id="1"&gt;
					&lt;objectRepr href="#_rOper' oid '"&gt;&lt;/objectRepr&gt;&lt;/connectionRepr&gt;
				&lt;connectionRepr id="2"&gt;
					&lt;objectRepr href="#_r' oid '"&gt;&lt;/objectRepr&gt;
				&lt;/connectionRepr&gt;
			&lt;/bindingRepr&gt;' newline 
}

/* inport to operators */
foreach .(OutFlowPort | ClientPort) {
	foreach .(InFlowPort | ServerPort) {
		'			&lt;bindingRepr isStraight="true" oid="_br' oid '_' oid;1 '" place="300,200"&gt;
				&lt;binding href="#_ob' oid '_' oid;1 '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/binding&gt;
				&lt;connectionRepr id="1"&gt;
					&lt;objectRepr href="#_r' oid '"&gt;&lt;/objectRepr&gt;&lt;/connectionRepr&gt;
				&lt;connectionRepr id="2"&gt;
					&lt;objectRepr href="#_rOper' oid;1 '"&gt;&lt;/objectRepr&gt;
				&lt;/connectionRepr&gt;
			&lt;/bindingRepr&gt;' newline 
	}
}
'		&lt;/diagram&gt;
' </report>
				<report>_DiagramRepr()
'		&lt;diagram displayGrid="false" grid="10,10" timeStamp="" useGrid="true" xmlns="http://www.metacase.com/gxlGOPRRRepr"&gt;
			&lt;graph href="#_'oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/graph&gt;' newline
			foreach .(InFlowPort | ServerPort | OutFlowPort | ClientPort | *FunctionPrototype) {
			'			&lt;objectRepr id="_r' oid '" place="' x ',' y '"'
				if type =~ '*FunctionPrototype'; then _error_function_scale() endif
			'&gt;
				&lt;object href="#_' oid'" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/object&gt;
			&lt;/objectRepr&gt;' newline
			}
			foreach  &gt;(Flow | ClientServerInterface ) {
				_FlowDirected()
				if $directed = 'T' then /* reports only directed flows as error model expects direction */
					'			&lt;bindingRepr isStraight="true" oid="_br' oid '" place="' x ',' y '"&gt;
					&lt;binding href="#_b' oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/binding&gt;
					&lt;connectionRepr id="1"&gt;' newline
					do ~(ClientPort | Server | InFlow | OutFlowPort ).() {
							'					&lt;objectRepr href="#_r' oid '"&gt;&lt;/objectRepr&gt;' newline
					}
					'				&lt;/connectionRepr&gt;
					&lt;connectionRepr id="2"&gt;' newline
					do ~(Client | ServerPort | InFlowPort | OutFlow ).() {				
						'					&lt;objectRepr href="#_r' oid '"&gt;&lt;/objectRepr&gt;' newline
					}
					'				&lt;/connectionRepr&gt;
					&lt;/bindingRepr&gt;' newline 
				endif
			}
'		&lt;/diagram&gt;
' </report>
				<report>_duplicatedObjects()
/* Finding the duplicated objects, where the short names are identical */
@prev = ' '
foreach .(^Comment | ^Operator) orderby :Short name;
{	if :Short name; = @prev then 
		:Short name; newline
	else
		@prev = :Short name;
	endif
}</report>
				<report>_duplicatedRelationships()
/* Finding the duplicated relationships, where the short names are identical */
@prev = ' '
foreach &gt;(^Comment) where :Short name; &lt;&gt; '' orderby :Short name;
{	if :Short name; = @prev then 
		:Short name; newline
	else
		@prev = :Short name;
	endif
}</report>
				<report>_EANumerical()
/* Reporting the EANumerical information */
'&lt;MAX&gt;' :Max '&lt;/MAX&gt;' newline 
'&lt;MIN&gt;' :Min '&lt;/MIN&gt;' newline
do :Unit; { '&lt;UNIT-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/UNIT-REF&gt;' newline } 
</report>
				<report>Report '_EAST-ADL Dictionary in HTML'
'&lt;a name="' oid '"&gt;&lt;/a&gt;' newline
'&lt;h2&gt;Graph documentation: ' id%xml '&lt;/h2&gt;' newline
do :() {
	'&lt;b&gt;' to '%xml' translate containers endto ': &lt;/b&gt;'
	id%xml '&lt;br /&gt;' newline
}
@matrix = 'F'
foreach .() {
	if x = '0' or y = '0' then @matrix = 'T' endif
}
if @matrix = 'F' then
	filename subreport '_default directory' run subreport '_id and oid' run '.png' print
	'&lt;img src="' subreport '_id and oid' run '.png" border="0" usemap="#' subreport '_default directory' run subreport '_id and oid' run '.png"&gt;&lt;br /&gt;' newline
else
	_MatrixToHTMLTable()
endif
foreach .() 
{ 
	'&lt;a name="' oid '"&gt;&lt;/a&gt;'
	'&lt;h3&gt;' subreport '__id and type' run '&lt;/h3&gt;'
	'Properties:'
	subreport '__Table HTML' run
	_propsDeeplyInHTML()
	do decompositions 
	{	'&lt;tr&gt;&lt;th align="left" bgcolor="#F2F2F2"&gt;' type%xml '&lt;/th&gt;&lt;td&gt;'
		'&lt;a href="' subreport '_id and oid' run '.html"&gt;' id '&lt;/a&gt;' 
		'&lt;/td&gt;&lt;/tr&gt;' newline		
		subreport '_EAST-ADL graphs in HTML' run		 
	}
	do explosions 
	{	'&lt;tr&gt;&lt;th align="left" bgcolor="#F2F2F2"&gt;' type '&lt;/th&gt;&lt;td&gt;'
		'&lt;a href="' subreport '_id and oid' run '.html"&gt;' id '&lt;/a&gt;'
		'&lt;/td&gt;&lt;/tr&gt;' newline				
		subreport '_EAST-ADL graphs in HTML' run		 		
	}
	'&lt;/table&gt;&lt;br /&gt;' newline
	'&lt;hr /&gt;' newline
}
endreport</report>
				<report>Report '_EAST-ADL graphs in HTML'
if not $Graphs =~ oid%wildsp then
	variable 'Graphs' append oid ' ' close
	filename subreport '_default directory' run subreport '_id and oid' run '.html' write
		'&lt;html&gt;'
		subreport '__stylesheet in HTML' run
		'&lt;body&gt;'
		'&lt;a href="' $starting_graph '.html"&gt;Root package&lt;/a&gt;&lt;br /&gt;'		
		subreport '_EAST-ADL Dictionary in HTML' run
		'&lt;a href="' $starting_graph '.html"&gt;Root package&lt;/a&gt;&lt;br /&gt;'				
		'&lt;/body&gt;&lt;/html&gt;'
	close
endif
endreport</report>
				<report>Report '_EAST-ADL specific translators'
/* EAST-ADL specific translators */
to '%port_to_role
$_To $In
$_From $Out
'
endto 

/* Removing the extra underscores (used to create the valid shortnames) */
to '%toShortName
/__+/ $_'
endto

/* $HardwareArchitecture $Hardware\-Design\-Architecture is not needed anymore since name has changed*/
to '%minus
$ActuatorType $Actuator
$AllocationMatrix $Allocation
$AnalysisFunctionPrototype $Analysis\-Function\-Prototype
$AnalysisFunctionType $Analysis\-Function\-Type
$ArrayDatatype $Array\-Datatype
$BasicSoftwareFunctionType $Basic\-Software\-Function\-Type
$BehaviorConstraintType $Behavior\-Constraint\-Type
$ClientPort $Function\-Client\-Server\-Port
$ServerPort $Function\-Client\-Server\-Port
$CommunicationHardwarePin_From $Communication\-Hardware\-Pin
$CommunicationHardwarePin_To $Communication\-Hardware\-Pin
$CommunicationHardwarePinInOut $Communication\-Hardware\-Pin
$CommunicationHardwarePinIn $Communication\-Hardware\-Pin
$CommunicationHardwarePinOut $Communication\-Hardware\-Pin
$CompositeDatatype $Composite\-Datatype
$DerivedFrom $Derived\-From
$DeriveRequirement $Derive\-Requirement
$DesignFunctionPrototype $Design\-Function\-Prototype
$DesignFunctionType $Design\-Function\-Type
$EABoolean $EA\-Boolean
$EADatatypePrototype $EA\-Datatype\-Prototype
$EANumerical $EA\-Numerical
$EAString $EA\-String
$ElectricalComponentType $Electrical\-Component
$ErrorModel $Error\-Model\-Type
$FaultFailure $Fault\-Failure
$FeatureFlaw $Feature\-Flaw
$FunctionalAnalysisArchitecture $Functional\-Analysis\-Architecture
$FunctionBehavior $Function\-Behavior
$FunctionTrigger $Function\-Trigger
$FunctionConnector $Function\-Connector
$FunctionalDesignArchitecture $Functional\-Design\-Architecture
$FunctionalDevice $Functional\-Device
$FunctionClientServerInterface $Function\-Client\-Server\-Interface
$HardwareComponentPrototype $Hardware\-Component\-Prototype
$HardwareComponentType $Hardware\-Component\-Type
$HardwareConnector $Hardware\-Connector
$HardwareFunctionType $Hardware\-Function\-Type
$HardwarePortConnector $Hardware\-Port\-Connector
$HazardousEvent $Hazardous\-Event
$InFlowPort $Function\-Flow\-Port
$InOutFlowPort $Function\-Flow\-Port
$IOHardwarePinInOut $IO\-Hardware\-Pin
$IOHardwarePinIn $IO\-Hardware\-Pin
$IOHardwarePinOut $IO\-Hardware\-Pin
$IOHardwarePin_From $IO\-Hardware\-Pin
$IOHardwarePin_To $IO\-Hardware\-Pin
$LocalDeviceManager $Local\-Device\-Manager
$ModeGroup $Mode\-Group
$NodeType $Node
$OutFlowPort $Function\-Flow\-Port
$OperationalSituation $Operational\-Situation
$PowerHardwarePinInOut $Power\-Hardware\-Pin
$PowerHardwarePinIn $Power\-Hardware\-Pin
$PowerHardwarePinOut $Power\-Hardware\-Pin
$PowerHardwarePin_From $Power\-Hardware\-Pin
$PowerHardwarePin_To $Power\-Hardware\-Pin
$PowerPort $Function\-Power\-Port
$QualityRequirement $Quality\-Requirement
$RangeableValueType $Rangeable\-Value\-Type
$RealizedBy $Realized\-By
$RefinedBy $Refined\-By
$RefinedRequirement $Refined\-Requirement
$RequirementsLink $Requirements\-Link
$SafetyGoal $Safety\-Goal
$SatisfiedBy $Satisfied\-By
$SatisfiedRequirement $Satisfied\-Requirement
$SensorType $Sensor
$UseCase $Use\-Case
$VehicleFeatureModel $Feature\-Model
$VehicleFeature $Vehicle\-Feature

'
endto

to '%legal
$ActuatorType $Actuator
$Boolean $EA\-BOOLEAN
$CommunicationHardwarePinIn $CommunicationHWPinIn
$CommunicationHardwarePinOut $CommunicationHWPinOut
$EAString $EA\-STRING
$ElectricalComponentType $ElectricalComponent
$Float $EA\-FLOAT
$Flow $FUNCTION\-CONNECTOR
$Integer $EA\-INTEGER
$RangeableValueType $RANGEABLE\-VALUE\-TYPE
$NodeType $Node
$SensorType $Sensor
'
endto

to '%relationships
$Flow $Function\-Connector
$Power $Function\-Connector
$ClientServerInterface $Function\-Connector
$HardwareConnector $Hardware\-Connector
'
endto

endreport</report>
				<report>_EAST-ADL_nameTranslator()
to '%NoType
$Type $
'
endto 
</report>
				<report>_EAXML_CheckClientServerInterfaceTypesDefined()
foreach .FunctionClientServerInterface {
	do :Operations {
		do :Arguments {
			if :Type = '' then
				_reportWarnings()
				'Warning: Argument ' id ' has undefined type in operation ' id;1 ' for ' id;3 newline					
			else	
				do :Type {
					if not $dataTypesDefined =~ oid%wildsp then
						_reportWarnings()
						'Warning: Datatype ' id ' is not defined in a package, but used in port ' id;4 '''s type ' id;3 ' as argument for operation ' id;2 newline					
					endif
				}
			endif
		}
		do :Return {
			if :Type = '' then
				_reportWarnings()
				'Warning: Return ' id ' has undefined type in operation ' id;1 ' for ' id;3 newline						
			else	
				do :Type {
					if not $dataTypesDefined =~ oid%wildsp then
						_reportWarnings()
						'Warning: Datatype ' id ' is not defined in a package, but used in port ' id;4 '''s type ' id;3 ' as return for operation ' id;2 newline					
					endif
				}
			endif
		}
	}
}</report>
				<report>_EAXML_CheckDataTypesInFunctionTypes()
/* Checks if datetypes are defined for function types, both analysis and design functions */
/* Types for FlowPorts and PowerPorts */
/* Types for arguments and returns in operations of ClientServerInterface for Client and Server ports */

foreach .(*FlowPort | PowerPort) 
{	do :Type 
	{	if not $dataTypesDefined =~ oid%wildsp then
			_reportWarnings()
			'Warning: &lt;' type '&gt; ' id ' for port ' id;1 ' is not defined in a package' newline
		endif
	}
}

foreach .(ClientPort | ServerPort) 
{	do :Type 
	{	if not $dataTypesDefined =~ oid%wildsp then
			_reportWarnings()
			'Warning: Interface ' id ' is not defined in a package, but used in port ' id;1 newline					
		endif
	}
}

foreach .(*Prototype) 
{	do decompositions 
	{	if not $typesChecked =~ oid%wildsp then
			variable 'typesChecked' append oid ' ' close
			_EAXML_CheckDataTypesInFunctionTypes()
		endif
	}
}</report>
				<report>_EAXML_CheckIfArrayDataTypeDefined()
foreach .ArrayDatatype {
	if not :Type; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; has undefined type in ' id;1 ' &lt;' type;1 '&gt;' newline					
	else	
		do :Type {
			if not $visited =~ oid%wildsp then
				variable 'visited' append oid ' ' close
				if not $dataTypesDefined =~ oid%wildsp then
					_reportWarnings()
					'Warning: Type ' id ' is not defined in a package for ArrayDatatype ' id;1  newline			
				endif
			endif
		}
	endif
}
</report>
				<report>_EAXML_CheckIfCompositeDataTypesTypeDefined()
foreach .CompositeDatatype {
	do :DatatypePrototypes {
		if :Type = '' then
			_reportWarnings()
			'Warning: ' id ' &lt;' type '&gt; has undefined type in CompositeDatatype ' id;1 ' &lt;' type;1 '&gt;' newline					
		else	
			do :Type {
				if not $visited =~ oid%wildsp then
					variable 'visited' append oid ' ' close
					if not $dataTypesDefined =~ oid%wildsp then
						_reportWarnings()
						'Warning: ' id;2 ' &lt;' type;2 '&gt; has a prototype ' id;1 ' with type ' id ' that is not defined in a package' newline
					endif
				endif
			}
		endif
	}
}
</report>
				<report>_EAXML_CheckIfDatatypesDefined()
foreach .(*Constraint) 
{
	/* Minimum property field */
	do :Minimum 
	{
		@myPropertyType = 'Minimum'
		_testAndReport(@myPropertyType)
	}

	/* Maximum property field */
	do :Maximum 
	{
		@myPropertyType = 'Maximum'
		_testAndReport(@myPropertyType)
	}

	/* Tolerance property field */	
	do :Tolerance 
	{
		@myPropertyType = 'Tolerance'
		_testAndReport(@myPropertyType)
	}

	/* Length property field */
	do :Length 
	{
		@myPropertyType = 'Length'
		_testAndReport(@myPropertyType)
	}

	/* Lower property field */
	do :Lower 
	{
		@myPropertyType = 'Lower'
		_testAndReport(@myPropertyType)
	}

	/* Upper property field */
	do :Upper 
	{
		@myPropertyType = 'Upper'
		_testAndReport(@myPropertyType)
	}

	/* Period property field */
	do :Period 
	{
		@myPropertyType = 'Period'
		_testAndReport(@myPropertyType)
	}

	/* Jitter property field */
	do :Jitter 
	{
		@myPropertyType = 'Jitter'
		_testAndReport(@myPropertyType)
	}

	/* Offset property field */
	do :Offset 
	{
		@myPropertyType = 'Offset'
		_testAndReport(@myPropertyType)
	}
}

/* Type property field */
foreach .(EventFunctionFlowPort | EventFunctionClientServerPort) 
{
	do :Type
	{
		@myPropertyType = 'Type'
		_testAndReport(@myPropertyType)
	}
}</report>
				<report>_EAXML_CheckIfEANumericalDataTypeDefined()
foreach .EANumerical {
	do :Unit {
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if not $dataTypesDefined =~ oid%wildsp then
				_reportWarnings()
				'Warning: Unit ' id ' is not defined in a package for EANumerical ' id;1  newline			
			endif
			_EAXML_CheckUnitDefined()
		endif
	}
}
</report>
				<report>_EAXML_CheckIfEventChainsDefined()
foreach .(EventChain) 
{
	do :Segment 
	{
		if not $eventChains =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Segment property defined as ' id ', which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}

foreach .(*Constraint) 
{
	do :Scope 
	{
		if not $eventChains =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Scope property defined as ' id ', which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfEventsDefined()
/* Checking if all the events were defined */
foreach .(*Constraint) 
{
	do :Event 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Event property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
	
	do :Source 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Source property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}

	do :Target 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Target property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
	
	do :Start 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Start property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}

	do :Stop 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Stop property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
	
	do :Preemption 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Preemption property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}

	do :Resume 
	{
		if not $events =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Resume property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfFaultFailuresDefined()
/* Checking if all the FaultFailures were defined */
foreach .(EventFaultFailure) 
{
	do :FaultFailure
	{
		if not $faultfailures =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has FaultFailure property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfFeatureFlawsDefined()
/* Checking if all the FeatureFlaws were defined */
foreach .(EventFeatureFlaw) 
{
	do :FeatureFlaw
	{
		if not $featureflaws =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has FeatureFlaw property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfFeaturesDefined()
/* Checking if all the Features were defined */
foreach .(Item) 
{
	do :Vehicle features
	{
		if not $features =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has VehicleFeatures property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfFunctionsDefined()
foreach .(EventFunction) 
{
	do :Function 
	{
		if not $functionPrototypesDefinedInThisHierarchy =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Function property defined as ' id ', but is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfFunctionTypesDefined()
/* TimingModel object types */
foreach .(EventFunction) 
{
	do :FunctionType 
	{
		if not decompositions then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Function property defined as ' id '.' newline			
		else
			do decompositions
			{
				if not $functionTypesDefinedInThisHierarchy =~ oid%wildsp then
					_reportWarnings()
					'Warning: ' id;1 ' &lt;' type;1 '&gt; has FunctionType property defined as ' id ', but is not defined in anywhere in this hierarchy.' newline			
				endif
			}
		endif
	}
}

/* BehaviorGraph object types */
foreach .(FunctionTrigger | FunctionBehavior) 
{
	do :Function 
	{
		if not decompositions then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Function property defined as ' id '.' newline			
		else
			do decompositions
			{
				if not $functionTypesDefinedInThisHierarchy =~ oid%wildsp then
					_reportWarnings()
					'Warning: ' id;1 ' &lt;' type;1 '&gt; has Function property defined as ' id ', but this Function is not defined in anywhere in this hierarchy.' newline
				endif
			}
		endif
	}

}</report>
				<report>_EAXML_CheckIfHazardousEventDefined()
_HazardEvent()</report>
				<report>_EAXML_CheckIfModesDefined()
foreach .(ModeEvent) 
{
	do :Start 
	{
		if not $modes =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Start property defined as ' id ', which is not defined in any ModeGroup in this hierarchy.' newline			
		endif
	}
	do :End
	{
		if not $modes =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has End property defined as ' id ', which is not defined in any ModeGroup in this hierarchy.' newline	
		endif
	}
}

foreach .(*Constraint) 
{
	do :Mode 
	{
		if not $modes =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Mode property defined as ' id ', which is not defined in any ModeGroup in this hierarchy.' newline			
		endif
	}
}

/* BehaviorGraph obejct types */
foreach .(FunctionTrigger | FunctionBehavior) 
{
	do :Mode 
	{
		if not $modes =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Mode property defined as ' id ', but this ' id ' is not defined in any ModeGroup.' newline	
		endif
	}

}</report>
				<report>_EAXML_CheckIfPortsDefined()
/* Checking if all the ports (flow and client&amp;server) were defined */
foreach .(EventFunctionFlowPort) 
{
	do :Port 
	{
		if not $flowports =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Port property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}

foreach .(EventFunctionClientServerPort) 
{
	do :Port 
	{
		if not $cs_ports =~ oid%wildsp then
			_reportWarnings()
			'Warning: ' id;1 ' &lt;' type;1 '&gt; has Port property defined as ' id ' &lt;' type '&gt;, which is not defined in anywhere in this hierarchy.' newline			
		endif
	}
}</report>
				<report>_EAXML_CheckIfRangeableValueTypesDataTypeDefined()
foreach .RangeableValueType {
	do :BaseRangeable; {
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if not $dataTypesDefined =~ oid%wildsp then
				_reportWarnings()
				'Warning: EANumerical ' id ' is not defined in a package for RangeableValueType ' id;1  newline
			endif
		endif
	}
}
</report>
				<report>_EAXML_CheckIfSafetyGoalsDefined()
_SafetyReq()
</report>
				<report>_EAXML_CheckUnitDefined()

	do :Quantity {
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if not $dataTypesDefined =~ oid%wildsp then
				_reportWarnings()
				'Warning: Quantity ' id ' is not defined in a package for Unit ' id;1  newline			
			endif
		endif
	}
	do :UnitReference {
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if not $dataTypesDefined =~ oid%wildsp then
				_reportWarnings()
				'Warning: UnitReference ' id ' is not defined in a package for Unit ' id;1  newline			
			endif
			_EAXML_CheckUnitDefined()
		endif
	}
</report>
				<report>_Enumeration()
/* Reporting the Enumeration information */
'&lt;IS-MULTI-VALUED&gt;' if :IsMultiValued; then  'true' else 'false' endif '&lt;/IS-MULTI-VALUED&gt;' newline 
'&lt;LITERALS&gt;'
	do :Literals { 
		newline 
		'&lt;ENUMERATION-LITERAL&gt;' newline 
		'&lt;SHORT-NAME&gt;' id;%xml '&lt;/SHORT-NAME&gt;' newline 
		'&lt;/ENUMERATION-LITERAL&gt;' 
	} 
	newline
'&lt;/LITERALS&gt;' newline </report>
				<report>_ErrorBehaviorInternal()
/* no incoming ports, have just internal error */
'		&lt;object id="_IFP' oid '" type="Object_InternalFaultPrototype_user_3548398352"&gt;
			&lt;slot name="Short name"&gt;
				&lt;value&gt;
					&lt;string&gt;':FunctionName '_VariableCorrupted&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
		&lt;/object&gt;
'
foreach .(OutFlowPort | ClientPort) {
'		&lt;binding id="_b' oid '"&gt;
			&lt;relationship type="Relationship_reference_sysadmin_3524947284"&gt;&lt;/relationship&gt;
			&lt;connection id="1"&gt;
				&lt;role type="Role_FailureKind_sysadmin_3627561116"&gt;
					&lt;slot name="Short name"&gt;
						&lt;value&gt;
							&lt;string&gt;O&lt;/string&gt;
						&lt;/value&gt;
					&lt;/slot&gt;
					&lt;slot name="Name"&gt;
						&lt;value&gt;
							&lt;string&gt;' id '_OmissionFailure&lt;/string&gt;
						&lt;/value&gt;
					&lt;/slot&gt;
				&lt;/role&gt;
				&lt;object href="#_IFP' oid;1 '"&gt;&lt;/object&gt;
			&lt;/connection&gt;
			&lt;connection id="2"&gt;
				&lt;role type="Role_refer_to_sysadmin_3524947529"&gt;&lt;/role&gt;
				&lt;object href="#_' oid '"&gt;&lt;/object&gt;
			&lt;/connection&gt;
		&lt;/binding&gt;' newline
}

'		&lt;diagram displayGrid="false" grid="10,10" timeStamp="" useGrid="true" xmlns="http://www.metacase.com/gxlGOPRRRepr"&gt;
			&lt;graph href="#_'oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/graph&gt;' newline
foreach .(OutFlowPort | ClientPort ) {
'			&lt;objectRepr id="_r' oid '" place="' x ',' y '"&gt;
				&lt;object href="#_' oid'" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/object&gt;
			&lt;/objectRepr&gt;' newline
}

/* internal faults */
'			&lt;objectRepr id="_rIFP' oid '" place="150,50"&gt;
				&lt;object href="#_IFP' oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/object&gt;
			&lt;/objectRepr&gt;' newline			

foreach  .(OutFlowPort | ClientPort) {
'			&lt;bindingRepr isStraight="true" oid="_br' oid '" place="300,200"&gt;
				&lt;binding href="#_b' oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/binding&gt;
				&lt;connectionRepr id="1"&gt;
					&lt;objectRepr href="#_rIFP' oid;1 '"&gt;&lt;/objectRepr&gt;
				&lt;/connectionRepr&gt;
				&lt;connectionRepr id="2"&gt;
					&lt;objectRepr href="#_r' oid '"&gt;&lt;/objectRepr&gt;
				&lt;/connectionRepr&gt;
			&lt;/bindingRepr&gt;' newline 
}
'		&lt;/diagram&gt;
' 
</report>
				<report>_ErrorBehaviorSingle()
/* one incoming port creating the error */
local 'inPort' write
	foreach .(InFlowPort | ServerPort) { oid } 
close

foreach .(OutFlowPort | ClientPort) {
'		&lt;binding id="_b' oid '"&gt;
			&lt;relationship type="Relationship_reference_sysadmin_3524947284"&gt;&lt;/relationship&gt;
			&lt;connection id="1"&gt;
				&lt;role type="Role_FailureKind_sysadmin_3627561116"&gt;
					&lt;slot name="Short name"&gt;
						&lt;value&gt;
							&lt;string&gt;O&lt;/string&gt;
						&lt;/value&gt;
					&lt;/slot&gt;
					&lt;slot name="Name"&gt;
						&lt;value&gt;
							&lt;string&gt;' id '_OmissionFailure&lt;/string&gt;
						&lt;/value&gt;
					&lt;/slot&gt;
				&lt;/role&gt;
				&lt;object href="#_' @inPort '"&gt;&lt;/object&gt;
			&lt;/connection&gt;
			&lt;connection id="2"&gt;
				&lt;role type="Role_refer_to_sysadmin_3524947529"&gt;&lt;/role&gt;
				&lt;object href="#_' oid '"&gt;&lt;/object&gt;
			&lt;/connection&gt;
		&lt;/binding&gt;' newline
}

'		&lt;diagram displayGrid="false" grid="10,10" timeStamp="" useGrid="true" xmlns="http://www.metacase.com/gxlGOPRRRepr"&gt;
			&lt;graph href="#_'oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/graph&gt;' newline
foreach .(OutFlowPort | ClientPort | InFlowPort | ServerPort) {
'			&lt;objectRepr id="_r' oid '" place="' x ',' y '"&gt;
				&lt;object href="#_' oid'" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/object&gt;
			&lt;/objectRepr&gt;' newline
}
foreach  .(OutFlowPort | ClientPort) {
'			&lt;bindingRepr isStraight="true" oid="_br' oid '" place="300,200"&gt;
				&lt;binding href="#_b' oid '" xmlns="http://www.metacase.com/gxlGOPRR"&gt;&lt;/binding&gt;
				&lt;connectionRepr id="1"&gt;
					&lt;objectRepr href="#_r' @inPort '"&gt;&lt;/objectRepr&gt;
				&lt;/connectionRepr&gt;
				&lt;connectionRepr id="2"&gt;
					&lt;objectRepr href="#_r' oid '"&gt;&lt;/objectRepr&gt;
				&lt;/connectionRepr&gt;
			&lt;/bindingRepr&gt;' newline 
}
'		&lt;/diagram&gt;
' </report>
				<report>_ErrorBehaviourOperators()
/* generate default error logic for omission case now. Other defaults like comission, timing, value could be generated as well */

foreach .(OutFlowPort | ClientPort) {
'		&lt;object id="_Oper_'oid'" type="Object_Operator_sysadmin_3627560660"&gt;
			&lt;slot name="Operator"&gt;
				&lt;value&gt;
					&lt;string&gt;OR&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
		&lt;/object&gt;
'
}
_ErrorFailureKindBinding()
_DiagramBehaviorRepr()</report>
				<report>_ErrorBindings()
foreach &gt;(Flow | ClientServerInterface) {
	_FlowDirected()
	if $directed = 'T' then /* reports only directed flows as error model expects direction */
'		&lt;binding id="_b' oid '" &gt;
			&lt;relationship type="Relationship_FaultFailure_sysadmin_3509188221"&gt;
				&lt;slot name="Short name"&gt;
					&lt;value&gt;
						&lt;string&gt;' :Short name%xml '&lt;/string&gt;
					&lt;/value&gt;
				&lt;/slot&gt;
				&lt;slot name="Name"&gt;
					&lt;value&gt;
						&lt;string&gt;' :Name%xml '&lt;/string&gt;
					&lt;/value&gt;
				&lt;/slot&gt;				
				&lt;slot name="ImmediatePropagation"&gt;
					&lt;value&gt;
						&lt;string&gt;True&lt;/string&gt; 
					&lt;/value&gt;
				&lt;/slot&gt;
				&lt;slot name="Description"&gt;
					&lt;property type="Property_2Description_user_3310902697"&gt;&lt;/property&gt;
					&lt;value&gt;
						&lt;text&gt;' :Description%xml '&lt;/text&gt;
					&lt;/value&gt;
				&lt;/slot&gt;
			&lt;/relationship&gt;
			&lt;connection id="1"&gt;' newline
			do ~(ClientPort | Server | InFlow | OutFlowPort ) {
				'				&lt;role type="Role_FailureOut_sysadmin_3509188624"&gt;&lt;/role&gt;' newline
				do .() {'					&lt;object href="#_' oid '"&gt;&lt;/object&gt;' newline }
				do #() {'					&lt;port href="#_' oid '"&gt;&lt;/port&gt;' newline }
			}
			'			&lt;/connection&gt;
			&lt;connection id="2"&gt;' newline
			do ~(Client | ServerPort | InFlowPort | OutFlow ) {
				'				&lt;role type="Role_FaultIn_sysadmin_3509188513"&gt;&lt;/role&gt;' newline
				do .() {'				&lt;object href="#_' oid '"&gt;&lt;/object&gt;' newline }
				do #() {'				&lt;port href="#_' oid '"&gt;&lt;/port&gt;' newline }
			}
'			&lt;/connection&gt;
		&lt;/binding&gt;
'
	endif
}</report>
				<report>_ErrorFailureKindBinding()

foreach .(OutFlowPort | ClientPort) {
'		&lt;binding id="_b' oid '"&gt;
			&lt;relationship type="Relationship_reference_sysadmin_3524947284"&gt;&lt;/relationship&gt;
			&lt;connection id="1"&gt;
				&lt;role type="Role_FailureKind_sysadmin_3627561116"&gt;
					&lt;slot name="Short name"&gt;
						&lt;value&gt;
							&lt;string&gt;O&lt;/string&gt;
						&lt;/value&gt;
					&lt;/slot&gt;
					&lt;slot name="Name"&gt;
						&lt;value&gt;
							&lt;string&gt;' id '_OmissionFailure&lt;/string&gt;
						&lt;/value&gt;
					&lt;/slot&gt;
				&lt;/role&gt;
				&lt;object href="#_Oper_' oid '"&gt;&lt;/object&gt;
			&lt;/connection&gt;
			&lt;connection id="2"&gt;
				&lt;role type="Role_refer_to_sysadmin_3524947529"&gt;&lt;/role&gt;
				&lt;object href="#_' oid '"&gt;&lt;/object&gt;
			&lt;/connection&gt;
		&lt;/binding&gt;' newline
}
foreach .(OutFlowPort | ClientPort) {
	foreach .(InFlowPort | ServerPort) {
'		&lt;binding id="_ob' oid '_' oid;1 '"&gt;
		&lt;relationship type="Relationship_reference_sysadmin_3524947284"&gt;&lt;/relationship&gt;
		&lt;connection id="1"&gt;
			&lt;role type="Role_referred_from_sysadmin_3524947545"&gt;&lt;/role&gt;
			&lt;object href="#_' oid'"&gt;&lt;/object&gt;
		&lt;/connection&gt;
		&lt;connection id="2"&gt;
			&lt;role type="Role_ConditionTo_sysadmin_3627560810"&gt;&lt;/role&gt;
			&lt;object href="#_Oper_' oid;1 '"&gt;&lt;/object&gt;
		&lt;/connection&gt;
	&lt;/binding&gt;' newline
	}
}</report>
				<report>_ErrorFailureOutPorts()
foreach .(OutFlowPort | ClientPort) {
'		&lt;object id="_' oid '" type="Object_FailureOutPort_sysadmin_3509188783"&gt;
			&lt;slot name="Short name"&gt;
				&lt;value&gt;
					&lt;string&gt;' :Short name%xml '&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
			&lt;slot name="Name"&gt;
				&lt;value&gt;
					&lt;string&gt;' :Name%xml '&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;			
			&lt;slot name="Type"&gt;
				&lt;value&gt;' 
				if not type = 'ClientPort' then
					do :Type {
						if not $reportedDatatypes  =~ oid%wildsp then
							variable 'reportedDatatypes' append oid ' ' close
							subreport '_portdt' type run 
						else
							'&lt;object href="#_' oid '"&gt;&lt;/object&gt;' 
						endif
					}
				endif
'				&lt;/value&gt;
			&lt;/slot&gt;
		&lt;/object&gt;
'
}</report>
				<report>_ErrorFaultInPorts()
foreach .(InFlowPort | ServerPort) {
'		&lt;object id="_' oid '" type="Object_FaultInPort_sysadmin_3509188722"&gt;
			&lt;slot name="Short name"&gt;
				&lt;value&gt;
					&lt;string&gt;' :Short name%xml '&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
			&lt;slot name="Name"&gt;
				&lt;value&gt;
					&lt;string&gt;' :Name%xml '&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
			&lt;slot name="Type"&gt;
				&lt;value&gt;' newline
				if not type = 'ServerPort' then				
					do :Type {
						if not $reportedDatatypes  =~ oid%wildsp then
							variable 'reportedDatatypes' append oid ' ' close
							subreport '_portdt' type run 
						else
							'&lt;object href="#_' oid '"&gt;&lt;/object&gt;' newline
						endif
					}
				endif
'				&lt;/value&gt;
			&lt;/slot&gt;
		&lt;/object&gt;
'
}</report>
				<report>_ErrorModelPrototypes()

foreach .(*FunctionPrototype) {
	'		&lt;object id="_'oid'" type="Object_InternalFault_sysadmin_3509186672"&gt;
			&lt;slot name="Short name"&gt;
				&lt;value&gt;
					&lt;string&gt;' :Short name%xml '&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
			&lt;slot name="Name"&gt;
				&lt;value&gt;
					&lt;string&gt;' :Name%xml '&lt;/string&gt;
				&lt;/value&gt;
			&lt;/slot&gt;			
			&lt;slot name="Description"&gt;
				&lt;value&gt;
					&lt;text&gt;' :Description%xml '&lt;/text&gt;
				&lt;/value&gt;
			&lt;/slot&gt;
			'
		do decompositions { 
			if not $reportedGraphs =~ oid%wildsp then
				variable 'reportedGraphs' append oid ' ' close
				_ErrorGraph() 
			else
				'&lt;graph href="#_'oid'"&gt;&lt;/graph&gt;' newline
			endif
		}
	'		&lt;/object&gt;
	'
}
</report>
				<report>_error_function_scale()
/* Creates scaling from function prototypes */
if width &lt;&gt; '170' or height &lt;&gt; '120' then 
	' scale="'
	local 'xscale' write
		width '/170.0'
	close 
	math @xscale evaluate 
	','
	local 'yscale' write
		height '/120.0'
	close 
	math @yscale evaluate 
	'"'
endif</report>
				<report>_extendedCheckOutput_level1()
/* Report generating the graph name and type to the checking output */
if $extendedCheck = 'T' then
	'in the model ' id;1 ' &lt;' type;1 '&gt;'
endif</report>
				<report>_extendedCheckOutput_level2()
/* Report generating the graph name and type to the checking output */
if $extendedCheck = 'T' then
	if type &lt;&gt; 'Unit' then
		'in ' id;1 ' &lt;' type;1 '&gt; in the model ' id;2 ' &lt;' type;2 '&gt;'
	endif
	if type = 'Unit' then
		'in the model ' id;1 ' &lt;' type;1 '&gt;'
	endif
endif</report>
				<report>_extendedCheckOutput_level3()
/* Report generating the graph name and type to the checking output */
if $extendedCheck = 'T' then
	if type;3 &lt;&gt; '' then
		'in the model ' id;3 ' &lt;' type;3 '&gt;'
	else
		'in the model ' id;1 ' &lt;' type;1 '&gt;'
	endif	
endif</report>
				<report>_extendedCheckOutput_level4()
/* Report generating the graph name and type to the checking output */
if $extendedCheck = 'T' then
	if type;1 &lt;&gt; 'Package' then
		'in the model ' id;4 ' &lt;' type;4 '&gt;'
	else
		'in the model ' id;1 ' &lt;' type;1 '&gt;'
	endif
endif</report>
				<report>_faultFailures()
/* Generating the Fault-Failures */
'&lt;FAULT-FAILURES&gt;'
foreach .FaultFailure 
{	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	if :Text; then '&lt;TEXT&gt;' :Text%xml '&lt;/TEXT&gt;' newline endif
	do :FaultFailureValue 
	{	'&lt;FAULT-FAILURE-VALUE&gt;' 
		do :Type 
		{	newline
			'&lt;' type%minus%upper '-VALUE&gt;' newline
			'&lt;TYPE-TREF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
			'&lt;VALUE&gt;' :Value;1 '&lt;/VALUE&gt;' newline
			'&lt;/' type%minus%upper '-VALUE&gt;' newline
		} 
		'&lt;/FAULT-FAILURE-VALUE&gt;' newline
	}
	'&lt;/' $type_name '&gt;'
}
'&lt;/FAULT-FAILURES&gt;' newline
</report>
				<report>_featureFlaws()
/* Generating the Feature-Flaws */
'&lt;FEATURE-FLAWS&gt;'
foreach .FeatureFlaw 
{	newline
	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	if :Text; then '&lt;TEXT&gt;' :Text '&lt;/TEXT&gt;' newline endif
	'&lt;ITEM-REFS&gt;' newline
	do ~DepFrom~ItemTo.Item 
	{	
		'&lt;ITEM-REF TYPE="ITEM"&gt;' variable oid '_path' read '&lt;/ITEM-REF&gt;' newline 
	}
	'&lt;/ITEM-REFS&gt;' newline
	if :nonFullfilledRequirement; then
		'&lt;NON-FULFILLED-REQUIREMENT-REFS&gt;'
		do :nonFullfilledRequirement;
		{	
			'&lt;NON-FULFILLED-REQUIREMENT-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/NON-FULFILLED-REQUIREMENT-REF&gt;' newline	
		}
		'&lt;/NON-FULFILLED-REQUIREMENT-REFS&gt;'
	endif
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/FEATURE-FLAWS&gt;' newline
</report>
				<report>_find\ packaged\ types()
foreach .() 
{	if type = 'Package'; then
		do decompositions 
		{	subreport '_find packaged types' run }
	endif
	if type = 'EAType' then
		do decompositions 
		{	subreport '_find types from EATypes' run }
	endif
}</report>
				<report>_find\ types\ from\ EATypes()
/* Collects variable packaged_types containing all accessed type, prototypes via the EAType */
if not $packaged_types =~ oid%wildsp then
	variable 'packaged_types' append oid ' ' close
	foreach .() {
		if type =~ '*Prototype' then
			variable 'packaged_types' append oid ' ' close
			do decompositions { subreport '_find types from EATypes' run }
		endif
		if (type =~'*Port') OR (type =~ '*Pin*') then 
			variable 'packaged_types' append oid ' ' close
		endif
	}
endif</report>
				<report>_find\ types\ from\ levels()
/* Collects variable typesAccessedFromLevels containing all accessed type, prototypes via the Levels */
if (type = 'SystemModel') or (type='Package') or (type = 'AnalysisFunctionType') or (type = 'DesignFunctionType') or (type = 'HardwareComponentType') or (type = 'AllocationMatrix') or (type = 'VehicleFeatureModel') then
	foreach .() { _build_typesAccessedFromLevels() }
endif</report>
				<report>_FlowDirected()
$directed = 'T' 
do ~() {
	do #() { /* port in prototype undirected */
		if type = 'InOutFlowPort' then 
			$directed = 'F' 
		endif 
	}
	do .() { /* Port type undirected */
		if type = 'InOutFlowPort' then 
			$directed = 'F' 
		endif 
	}
}</report>
				<report>_FunctionClientServerInterface()
'&lt;OPERATIONS&gt;'
do :Operations {
	'&lt;OPERATION UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then 
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
	endif
	'&lt;ARGUMENTS&gt;'
	do :Arguments {
		local 'type_name' write type%minus%upper close
		local 'nameValue' write :Name;%xml close 
		newline
		'&lt;!-- ' @type_name ' name: '
		if @nameValue &lt;&gt; '' then
			@nameValue ' (' :Short name; ')'
		else
			:Short name;
		endif
		' --&gt;' newline
		'&lt;' @type_name ' UUID="' :__UUID '"&gt;' newline 
		'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		if @nameValue &lt;&gt; '' then
			'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
		endif
		subreport '_dataTypeReference' run
		'&lt;/' @type_name '&gt;'
	}
	newline
	'&lt;/ARGUMENTS&gt;' newline
	if :Return; then
		'&lt;RETURN&gt;'
		do :Return {
			local 'return_type_name' write type%minus%upper close
			local 'return_nameValue' write :Name;%xml close 
			newline
			'&lt;!-- ' @return_type_name ' name: '
			if @return_nameValue &lt;&gt; '' then
				@return_nameValue ' (' :Short name; ')'
			else
				:Short name;
			endif
			' --&gt;' newline
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
			if :Name; then
				'&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline
			endif
			subreport '_dataTypeReference' run
		}
		'&lt;/RETURN&gt;' newline
	endif
	'&lt;/OPERATION&gt;' newline
}
'&lt;/OPERATIONS&gt;' newline</report>
				<report>_genericConstraints()
foreach .GenericConstraint {
	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- GENERIC-CONSTRAINT name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;GENERIC-CONSTRAINT UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	'&lt;KIND&gt;' :Kind%upper '&lt;/KIND&gt;' newline

	/* Generating the information for TARGET-REFS */
	if :TargetTypes; or :TargetObjects; or :TargetRelationships; then
		'&lt;TARGET-REFS&gt;' newline
		do :TargetTypes 
		{	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
			'&lt;TARGET-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TARGET-REF&gt;' newline	
		}
		do :TargetObjects 
		{	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
			'&lt;TARGET-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TARGET-REF&gt;' newline	
		}
		do :TargetRelationships 
		{	'&lt;!-- ' type%relationships%upper ' name: ' :Short name; ' --&gt;' newline
			'&lt;TARGET-REF TYPE="' type%relationships%upper '"&gt;' variable oid '_path' read '&lt;/TARGET-REF&gt;' newline	
		}
		'&lt;/TARGET-REFS&gt;' newline
	endif

	/* Generating the information for MODE-REFS */
	if :Modes; then
		'&lt;MODE-REFS&gt;' newline
		do :Modes 
		{	'&lt;MODE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/MODE-REF&gt;' newline
		}
		'&lt;/MODE-REFS&gt;' newline
	endif
	'&lt;/GENERIC-CONSTRAINT&gt;' newline
}
</report>
				<report>_hazardousEvents()
/* Reporting the HazardousEvents */
'&lt;HAZARDOUS-EVENTS&gt;' 
foreach .HazardousEvent 
{	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	'&lt;CLASSIFICATION-ASSUMPTIONS&gt;' :ClassificationAssumptions '&lt;/CLASSIFICATION-ASSUMPTIONS&gt;' newline
	'&lt;CONTROLLABILITY&gt;' :Controllability '&lt;/CONTROLLABILITY&gt;' newline
	'&lt;EXPOSURE&gt;' :Exposure '&lt;/EXPOSURE&gt;' newline
	'&lt;HAZARD-CLASSIFICATION&gt;ASIL_' :HazardClassification '&lt;/HAZARD-CLASSIFICATION&gt;' newline
	'&lt;SEVERITY&gt;' :Severity '&lt;/SEVERITY&gt;' newline
	if :OperatingMode; then
		'&lt;OPERATING-MODE-REFS&gt;' newline
		do :OperatingMode; 
		{	
			'&lt;OPERATING-MODE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/OPERATING-MODE-REF&gt;' newline	
		}
		'&lt;/OPERATING-MODE-REFS&gt;' newline
	endif

	'&lt;OPERATIONAL-SITUATION-USE-CASE-REFS&gt;' newline
	do ~HazardousEvent~UseCase.UseCase
	{	
		'&lt;OPERATIONAL-SITUATION-USE-CASE-REF TYPE="USE-CASE"&gt;' variable oid '_path' read '&lt;/OPERATIONAL-SITUATION-USE-CASE-REF&gt;' newline 
	}
	'&lt;/OPERATIONAL-SITUATION-USE-CASE-REFS&gt;' newline

	/* ENVIRONMENT-REFS */
	if :Environment; then
		'&lt;ENVIRONMENT-REFS&gt;' newline
		do :Environment 
		{	
			'&lt;ENVIRONMENT-REF TYPE="OPERATIONAL-SITUATION"&gt;' variable oid '_path' read '&lt;/ENVIRONMENT-REF&gt;' newline 
		}
		'&lt;/ENVIRONMENT-REFS&gt;' newline
	endif

	/* HAZARD-REFS */
	'&lt;HAZARD-REFS&gt;' newline
	do ~HazardousEvent~Hazard.Hazard
	{	
		'&lt;HAZARD-REF TYPE="HAZARD"&gt;' variable oid '_path' read '&lt;/HAZARD-REF&gt;' newline 
	}	
	'&lt;/HAZARD-REFS&gt;' newline

	/* TRAFFIC-REFS */
	if :Traffic; then
		'&lt;TRAFFIC-REFS&gt;' newline
		do :Traffic 
		{	
			'&lt;TRAFFIC-REF TYPE="OPERATIONAL-SITUATION"&gt;' variable oid '_path' read '&lt;/TRAFFIC-REF&gt;' newline 
		}
		'&lt;/TRAFFIC-REFS&gt;' newline
	endif
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/HAZARDOUS-EVENTS&gt;' newline
</report>
				<report>_hazards()
/* Reporting the Hazards */
'&lt;HAZARDS&gt;' 
foreach .Hazard 
{	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	if :Text; then 
		'&lt;TEXT&gt;':Text;%xml '&lt;/TEXT&gt;' newline
	endif 
	'&lt;MALFUNCTION-REFS&gt;' newline
	/* Feature-Flaws */
	do ~Malfunction from~FeatureFlaw.FeatureFlaw
	{	
		'&lt;MALFUNCTION-REF TYPE="FEATURE-FLAW"&gt;' variable oid '_path' read '&lt;/MALFUNCTION-REF&gt;' newline 
	}
	'&lt;/MALFUNCTION-REFS&gt;' newline
	'&lt;ITEM-REFS&gt;' newline

	/* Items */
	do ~DepFrom~ItemTo.Item
	{	
		'&lt;ITEM-REF TYPE="ITEM"&gt;' variable oid '_path' read '&lt;/ITEM-REF&gt;' newline 
	}
	'&lt;/ITEM-REFS&gt;' newline
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/HAZARDS&gt;' newline</report>
				<report>Report '_id or type'
/* Returns the id, if its not given returns the type */
if id then id else '&lt;' type '&gt;' endif
endreport</report>
				<report>Report '_id or type and oid'
/* Returns the id, if its not given returns the type and oid */
if id then id else type ' (' oid ')' endif
endreport</report>
				<report>Report '_id or type2'
if id;2 then id;2 else '&lt;' type;2 '&gt;' endif
endreport</report>
				<report>_importTranslators()

/* Removes parts from askFile result */
to '%path
/^(.*\\)(.*)\.(.*)$/ $$1'
endto

to '%file
/^(.*\\)(.*)\.(.*)$/ $$2'
endto

to '%ext
/^(.*\\)(.*)\.(.*)$/ $$3'
endto
</report>
				<report>_items()
'&lt;ITEMS&gt;'
foreach .Item 
{	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	if :Text; then 
		'&lt;TEXT&gt;':Text;%xml '&lt;/TEXT&gt;' newline
	endif 
	'&lt;DEVELOPMENT-CATEGORY&gt;' 
	if :DevelopmentCategory = 'New' then 
		'NEWITEMDEVELOPMENT'
	else 
		'MODIFICATIONOFEXISTINGITEM'
	endif 
	'&lt;/DEVELOPMENT-CATEGORY&gt;' newline
	'&lt;VEHICLE-FEATURE-REFS&gt;' 
	do :Vehicle features 
	{	newline
		'&lt;VEHICLE-FEATURE-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/VEHICLE-FEATURE-REF&gt;'
	}
	newline
	'&lt;/VEHICLE-FEATURE-REFS&gt;' newline
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/ITEMS&gt;' newline
</report>
				<report>_LegalTypePath()
/* Checks that type-prototype path within a package hierarchy is not cyclic */
local 'path' write ' ' oid ' ' close /* path variable contains all the accessed graph oids separated with whitespace */
$cycleReported = ''

foreach .(Package | SystemModel | *Prototype | EAType | RequirementsRelationshipGroup) 
{	do decompositions 
	{ 	_LegalTypePathNext(@path) /* navigates the hierarchy further */ }
}

</report>
				<report>_LegalTypePathNext(@path)
if not @path =~ oid%wildsp; then
	local 'path' append oid ' ' close /* In case graph is not accessed earlier, it will be added to path variable */
	foreach .(Package | SystemModel | *Prototype | EAType | RequirementsRelationshipGroup) 
	{ 	do decompositions 
		{	_LegalTypePathNext(@path) }
	}
else
	if $cycleReported = '' then
		@stackIx = '0'
		$revStack = @sep = ''

		/* Find the index for the stack */
		dowhile stack { 
			@stackIx = @++stackIx
			@lastThisGraphIx = @stackIx 
		}
		
		@stackIx2 = '1'
		@cycleStart_oid = oid
		$cycleEndReached = 'F'
		do stack {
			@current_oid = oid 
			if (@stackIx2 &lt;&gt; '1') and (@cycleStart_oid = @current_oid) then
				$cycleEndReached = 'T'
			endif
			
			if (@stackIx2 &lt; @lastThisGraphIx num) and ($cycleEndReached &lt;&gt; 'T') then
				local 'myId' write id
					if metatype = 'Object' then 
						if type =~ '*Prototype' then
							''
						else
							' &lt;' type '&gt;' 
						endif
					endif
					if metatype = 'Graph' then 
						' [' type ']' 
					endif
				close 
				$revStack = __(@myId @sep $revStack)
				local 'sep' write 
					if metatype = 'Graph' then 
						' ==&gt; '
					else
						' --&gt; '
					endif
				close
				@stackIx2 = @++stackIx2
			endif
		}
		/* Reporting the warning if cycle is found*/	
		_reportWarnings()
		'Warning: Cyclic ' 
		if type;1 = 'Package' then 
			'Package' 
		else 
			'Type-Prototype' 
		endif 
		' hierarchy found (syntax: id &lt;objectType&gt;, id [GraphType], --&gt; contains, ==&gt; has a subgraph link): ' newline 	
		id ' [' type '] --&gt; ' $revStack 
		if $LiveCheck &lt;&gt; 'F' then 
			newline
		endif
		$cycleReported = 'T'
		newline
	endif
endif
</report>
				<report>Report '_MatrixToHTMLTable'
$columns = ''
'&lt;table border="1"&gt;'
'&lt;tr&gt;&lt;th&gt;&amp;nbsp;&lt;/th&gt;'
foreach .() where y = '0' orderby x 
{	'&lt;th bgcolor="#F2F2F2"&gt;&lt;a href="#' oid '"&gt;' id%trunc80%xml '&lt;/a&gt;&lt;/th&gt;'
	variable 'columns' append oid newline close
}
'&lt;/tr&gt;'
newline
foreach .() where x = '0' orderby y 
{	'&lt;tr&gt;'
	'&lt;td bgcolor="#F2F2F2"&gt;&lt;strong&gt;&lt;a href="#' oid '"&gt;' id%trunc80%xml '&lt;strong&gt;&lt;/a&gt;&lt;/td&gt;' 
	do $columns where id {
		'&lt;td&gt;'
		do ~();1&gt;() 
		{
			do ~().() where oid &lt;&gt; oid;3 
			{
				if oid = id;2 then 
					if id;1 then id;1%xml else 'X' endif
				endif
			}
		}
		'&amp;nbsp;&lt;/td&gt;'
	}
	'&lt;/tr&gt;'
}
'&lt;/table&gt;'
endreport</report>
				<report>_name()
if :Name; then :Name; else :Short name; endif</report>
				<report>Report '_name checks'
/* Checking the name value */
if :Short name; = '' then
	$emptyIdFound = 'T'
else 
	if not :Short name; =/ '[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?' then
		_reportWarnings()
		'Warning: There are illegal character(s) in the ' type '''s identifier property ' :Short name; newline
	endif
endif
endreport</report>
				<report>_OneOwner()

@systemModels = ' '
@systemContent = ' '
@packages = ' '
@packageContent = ' '
@types = ' '
@typeContent = ' '
@prototypes = ' '
@datatypes = ' '

$myGraphs = ' ' /* stores all graphs in this hierarchy */
_collectGraphsInThisHierarchy() /* collects all graphs in this hierarchy */

do graphs where type =  'Package' {
	if $myGraphs =~ oid%wildsp then /* checks the graph is in the hierarchy */
		foreach .SystemModel {
			if not @systemModels =~ oid%wildsp then
				local 'systemModels' append oid ' ' close
			else
				_reportWarnings()
				'Warning: ' id ' &lt;' type '&gt; exists in several packages. Open Info... for it' newline
			endif
			do decompositions {
				if not @systemContent =~ oid%wildsp then
					local 'systemContent' append oid ' ' close
				else
					_reportWarnings()
					'Warning: ' id ' &lt;' type '&gt; is linked from several packages. Find all links with ' id ': * filter in Graph Browser' newline
				endif
			}		
		}
		foreach .Package {
			if not @packages =~ oid%wildsp then
				local 'packages' append oid ' ' close
			else
				_reportWarnings()
				'Warning: ' id ' &lt;' type '&gt; exists in several packages. Open Info... for it' newline
			endif
			do decompositions {
				if not @packageContent =~ oid%wildsp then
					local 'packageContent' append oid ' ' close
				else
					_reportWarnings()
					'Warning: ' id ' &lt;' type '&gt; is linked from several packages. Find all links with ' id ': * filter in Graph Browser' newline
				endif
			}
		}	
		foreach .EAType {
			if not @types =~ oid%wildsp then
				local 'types' append oid ' ' close
			else
				_reportWarnings()
				'Warning: EAType definition ' id ' exists in several packages. Open Info... for it' newline
			endif
			do decompositions {
				if not @typeContent =~ oid%wildsp then
					local 'typeContent' append oid ' ' close
				else
					_reportWarnings()
					'Warning: Type definition ' id ' &lt;' type '&gt; is linked from several EATypes. Select EAType in Type Browser and use ' id '* filter in Instances list' newline
				endif
			}
		}
		foreach .(ArrayDatatype | CompositeDatatype | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType | Quantity | Unit | FunctionClientServerInterface | UserAttributedElement | GenericConstraint)  
		{	if not @datatypes =~ oid%wildsp then
				local 'datatypes' append oid ' ' close
			else
				_reportWarnings()
				'Warning: Datatype ' id ' &lt;' type '&gt; exists in several packages. Open Info... for it' newline
			endif
		}
	endif
}

do graphs where type =~  '*Type' or type =  'ErrorModel' 
{	if $myGraphs =~ oid%wildsp then /* checks the graph is in the hierarchy */
		foreach .(*Prototype | *Port | *Pin*) 
		{	if not @prototypes =~ oid%wildsp then
				local 'prototypes' append oid ' ' close
			else
				_reportWarnings()
				'Warning: ' id ' &lt;' type '&gt; exists in several types. Open Info... for it' newline
			endif
		}
	endif
}</report>
				<report>_operationalSituations()
/* Reporting the OperationalSituations */
'&lt;OPERATIONAL-SITUATIONS&gt;' newline
foreach .OperationalSituation 
{
	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	'&lt;!-- ' type%time%minus%upper ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/OPERATIONAL-SITUATIONS&gt;'</report>
				<report>Report '_other datatypes'
/* Create the rest of the data-types */
foreach .Package {
	do decompositions { 
		foreach .EAType {
			do decompositions { 
				/* Translators */
				foreach .() {
					do decompositions {
						foreach .(*Flow*) { _data-types() }
					}
				}
			}
		}

		foreach .Vehicle Level; {	
			do explosions { 
				/* Translators */
				subreport '_translators' run 
				foreach .() {
					do decompositions {
						foreach .(*Flow*) { _data-types() }
					}
				}
			}
		}
	}
}
endreport</report>
				<report>_outputBindings(@tab)
/* Outputs bindings in the graph */
foreach &gt;() orderby type, objectid num
{
	'  Relationship: '
	_outputProperties(@tab)
	
	do explosions orderby type, objectid {
		'	Explode to: ' id ' &lt;' type '&gt;' newline
	}
	
	do ~() {
		'    Role: ' 
		_outputProperties(@tab)
		do #() {
			'	Port: ' id ' &lt;' type '&gt;' newline
		}

		do explosions orderby type, objectid {
			'	Explode to:  ' id ' &lt;' type '&gt;' newline
		}	
	}
}</report>
				<report>_outputObjects(@tab)
/* Outputs objects in the graph */
foreach .() orderby type, objectid num
{
	'  Object: '
	_outputProperties(@tab)
	
	do decompositions orderby type, objectid {
		'	Decomposed to: ' id ' &lt;' type '&gt;' newline
	}
	
	do explosions orderby type, objectid {
		'	Explode to: ' id ' &lt;' type '&gt;' newline
	}
	
}</report>
				<report>_outputProperties(@tab)
/* Outputs properties of the element */
@tab id ' &lt;' type '&gt;' newline
local 'tab' append '	' close
do :() {
	@tab containers ': ' id
	newline
	do contents where projectid = $thisProject and (metatype &lt;&gt; 'Text' and metatype &lt;&gt; 'String') {
		if not $reported =~ oid%wildsp then
			variable 'reported' append oid ' ' close
			_outputProperties(@tab)
		endif
	}
}</report>
				<report>Report '_owned relationship irefs'
/* Generating the iref information for the relationship */
'&lt;' type%minus%upper '-IREFS&gt;' newline
'&lt;' type%minus%upper '-IREF&gt;' newline
do.() 
{	local 'identifier_name' write :Short name;%var%toShortName close
	local 'mytype' write type%minus%upper close
	'&lt;!-- ' @mytype ' name: ' @identifier_name ' --&gt;' newline
	'&lt;IDENTIFIABLE-TARGET-REF TYPE="' @mytype '"&gt;' variable oid '_path' read '&lt;/IDENTIFIABLE-TARGET-REF&gt;' newline 	
}
'&lt;/' type%minus%upper '-IREF&gt;' newline
'&lt;/' type%minus%upper '-IREFS&gt;' newline
endreport</report>
				<report>Report '_owned relationship refs'
/* Generating the ref information for the relationship */
'&lt;' type%minus%upper '-REFS&gt;' newline
do.() 
{	local 'identifier_name' write :Short name;%var%toShortName close
	local 'mytype' write	type%minus%upper close
	'&lt;!-- ' @mytype ' name: ' @identifier_name ' --&gt;' newline
	'&lt;' type;1%minus%upper '-REF TYPE="' @mytype '"&gt;' variable oid '_path' read '&lt;/' type;1%minus%upper '-REF&gt;' newline 
}
'&lt;/' type%minus%upper '-REFS&gt;' newline
endreport</report>
				<report>Report '_owned-relationships'
/* Generating OWNED-RELATIONSHIPS section */
'&lt;OWNED-RELATIONSHIPS&gt;'
foreach &gt;() { 
	if ((type='Realization') or (type='DeriveRequirement') Or (type='Satisfy') Or (type='RequirementsLink') Or (type='Refine')) then
		if not $reported_relationships =~ oid%wildsp then
			variable 'reported_relationships' append oid ' ' close
			newline
			'&lt;' type%minus%upper ' UUID="' type '_' oid '"&gt;' newline
			'&lt;SHORT-NAME&gt;' type;%var '&lt;/SHORT-NAME&gt;' newline
			'&lt;NAME&gt;' 
			if type; &lt;&gt; 'RequirementsLink' then
				type;%xml '_' oid
			else
				id;%xml 
			endif
			'&lt;/NAME&gt;' newline 

			/* Realization */
			if type = 'Realization' then
				do ~(RealizedBy | Realized) {	subreport '_owned relationship irefs' run }
			endif

			/* Satisfy */
			if type = 'Satisfy' then
				do ~(SatisfiedRequirement) { subreport '_owned relationship refs' run }
				do ~(SatisfiedBy) { subreport '_owned relationship irefs' run }
			endif

			/* Derive */
			if type = 'DeriveRequirement' then
				do ~(Derived | DerivedFrom) {	subreport '_owned relationship refs' run }
			endif

			/* Requirements link */
			if type = 'RequirementsLink' then
				'&lt;IS-BIDIRECTIONAL&gt;' if :Bidirectional; then 'true' else 'false' endif '&lt;/IS-BIDIRECTIONAL&gt;' newline
				do ~(Source) { subreport '_owned relationship refs' run }
				do ~(Target) {	subreport '_owned relationship refs' run }
			endif

			/* Refine */
			if type = 'Refine' then
				do ~(RefinedRequirement) { subreport '_owned relationship refs' run }
				do ~(RefinedBy) { subreport '_owned relationship irefs' run }
			endif
			
			subreport '_type close' run
		endif
	endif
}
'&lt;/OWNED-RELATIONSHIPS&gt;' newline
endreport</report>
				<report>_port\ data()
/* Generating the port/pin information */
if $EAXMLoids =~oid%wildsp then
	 newline
	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' type ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name ')'
	else
		:Short name; 
	endif
	' --&gt;' newline
	'&lt;!--  path: ' variable oid '_path' read ' --&gt;' newline
	if type =~ '*Flow*' then
		'&lt;Function-Flow-Port'%upper ' UUID="' :__UUID '"&gt;' newline
		'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		subreport '_port properties' run 
		'&lt;/Function-Flow-Port'%upper '&gt;'
	else
		if type =~ '*Power*' then
			'&lt;Function-Power-Port'%upper ' UUID="' :__UUID '"&gt;' newline
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
			subreport '_port properties' run 
			'&lt;/Function-Power-Port'%upper '&gt;'
		else
			if (type = 'ClientPort') Or (type =~ 'ServerPort') then
				'&lt;Function-Client-Server-Port'%upper ' UUID="' :__UUID '"&gt;' newline
				'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
				subreport '_port properties' run 
				'&lt;/Function-Client-Server-Port'%upper '&gt;'
			endif
		endif
	endif
endif</report>
				<report>_portdtArrayDatatype()
'					&lt;object id="_'oid'" type="Object_ArrayDatatype_sysadmin_3536999064"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;						
						&lt;slot name="MinLength"&gt;
							&lt;value&gt;
								&lt;string&gt;' :MinLength%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="MaxLength"&gt;
							&lt;value&gt;
								&lt;string&gt;' :MaxLength%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Type"&gt;
							&lt;value&gt;'
								do :Type {
									if not $reportedDatatypes  =~ oid%wildsp then
										variable 'reportedDatatypes' append oid ' ' close
										subreport '_portdt' type run 
									else
										'&lt;object href="#_' oid '"&gt;&lt;/object&gt;' newline
									endif
								}	
								'&lt;/value&gt;
						&lt;/slot&gt;
					&lt;/object&gt;
'</report>
				<report>_portdtCompositeDatatype()
'					&lt;object id="_'oid'" type="Object_CompositeDatatype_sysadmin_3536998574"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;												
						&lt;slot name="DatatypePrototypes"&gt;
							&lt;value&gt;
								&lt;seq&gt;'
								do :DatatypePrototypes {
									'&lt;object oid="_'oid'" type="Object_EADatatypePrototype_sysadmin_3536998910"&gt;
										&lt;slot name="Short name"&gt;
											&lt;value&gt;
												&lt;string&gt;' :Short name%xml '&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;
										&lt;slot name="Name"&gt;
											&lt;value&gt;
												&lt;string&gt;' :Name%xml '&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;																
										&lt;slot name="Type"&gt;
											&lt;value&gt;'
											do :Type {
												if not $reportedDatatypes  =~ oid%wildsp then
													variable 'reportedDatatypes' append oid ' ' close
													subreport '_portdt' type run 
												else
													'&lt;object href="#_' oid '"&gt;&lt;/object&gt;' newline
												endif
											}	
											'&lt;/value&gt;
										&lt;/slot&gt;
									&lt;/object&gt;
									'
								}
'								&lt;/seq&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
					&lt;/object&gt;
'</report>
				<report>_portdtEABoolean()
'					&lt;object id="_' oid '" type="Object_EABoolean_sysadmin_3536996172"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;												
					&lt;/object&gt;
'</report>
				<report>_portdtEANumerical()
'					&lt;object id="_'oid'" type="Object_EANumerical_sysadmin_3536996437"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;												
						&lt;slot name="Min"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Min%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Max"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Max%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;'
						_portdtUnit()
'					&lt;/object&gt;
'</report>
				<report>_portdtEAString()
'					&lt;object id="_'oid'" type="Object_EAString_sysadmin_3536996221"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;												
					&lt;/object&gt;
'</report>
				<report>_portdtEnumeration()
'					&lt;object id="_'oid'" type="Object_Enumeration_sysadmin_3536996326"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;												
						&lt;slot name="IsMultiValued"&gt;
							&lt;value&gt;
								&lt;bool&gt;' if :IsMultiValued; then 'true' else 'false' endif '&lt;/bool&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Literals"&gt;
							&lt;value&gt;
								&lt;seq&gt;'
									do :Literals {
										'									&lt;string&gt;' id%xml '&lt;/string&gt;' newline
									}
'								&lt;/seq&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
					&lt;/object&gt;
'</report>
				<report>_portdtQuantity()
/* Quantities are currently not reused */
'						&lt;slot name="Quantity"&gt;
							&lt;value&gt;' newline
do :Quantity { 
		'								&lt;object oid="_'oid'" type="Object_Quantity_sysadmin_3536997304"&gt;
										&lt;slot name="Short name"&gt;
											&lt;value&gt;
												&lt;string&gt;Err':Short name'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;
										&lt;slot name="Name"&gt;
											&lt;value&gt;
												&lt;string&gt;' :Name%xml '&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;																
										&lt;slot name="AmountOfSubstanceExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':AmountOfSubstanceExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;										
										&lt;slot name="ElectricCurrentExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':ElectricCurrentExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;				
										&lt;slot name="LengthExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':LengthExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;	
										&lt;slot name="LuminousIntensityExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':LuminousIntensityExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;																											
										&lt;slot name="MassExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':MassExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;											
										&lt;slot name="ThermodynamicTemperatureExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':ThermodynamicTemperatureExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;	
										&lt;slot name="TimeExp"&gt;
											&lt;value&gt;
												&lt;string&gt;':TimeExp'&lt;/string&gt;
											&lt;/value&gt;
										&lt;/slot&gt;
									&lt;/object&gt;' newline
}								
'							&lt;/value&gt;
						&lt;/slot&gt; ' 
						newline
						</report>
				<report>_portdtRangeableValueType()
'					&lt;object id="_'oid'" type="Object_RangeableValueType_sysadmin_3536997383"&gt;
						&lt;slot name="Short name"&gt;
							&lt;value&gt;
								&lt;string&gt;Err' :Short name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Name"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Name%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;												
						&lt;slot name="Accuracy"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Accuracy%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="Resolution"&gt;
							&lt;value&gt;
								&lt;string&gt;' :Resolution%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="SignificantDigits"&gt;
							&lt;value&gt;
								&lt;string&gt;' :SignificantDigits%xml '&lt;/string&gt;
							&lt;/value&gt;
						&lt;/slot&gt;
						&lt;slot name="BaseRangeable"&gt;
							&lt;value&gt;'
								do :BaseRangeable {
									if not $reportedDatatypes  =~ oid%wildsp then
										variable 'reportedDatatypes' append oid ' ' close
										subreport '_portdt' type run 
									else
										'&lt;object href="#_' oid '"&gt;&lt;/object&gt;'
									endif
								}	
							'&lt;/value&gt;
						&lt;/slot&gt;
					&lt;/object&gt;
'</report>
				<report>_portdtUnit()
/* Units are currently not reused */
newline
'						&lt;slot name="Unit"&gt;
							&lt;value&gt;' newline
do :Unit { 
		_portdtUnitDetails()
}							
'							&lt;/value&gt;
						&lt;/slot&gt; ' 
newline
						</report>
				<report>_portdtUnitDetails()
variable 'reportedDatatypes' append oid ' ' close
'								&lt;object oid="_'oid'" type="Object_Unit_sysadmin_3536996865"&gt;
									&lt;slot name="Short name"&gt;
										&lt;value&gt;
											&lt;string&gt;Err':Short name'&lt;/string&gt;
										&lt;/value&gt;
									&lt;/slot&gt;
									&lt;slot name="Name"&gt;
										&lt;value&gt;
											&lt;string&gt;' :Name%xml '&lt;/string&gt;
										&lt;/value&gt;
									&lt;/slot&gt;															
									&lt;slot name="Factor"&gt;
										&lt;value&gt;
											&lt;string&gt;':Factor'&lt;/string&gt;
										&lt;/value&gt;
									&lt;/slot&gt;										
									&lt;slot name="Offset"&gt;
										&lt;value&gt;
											&lt;string&gt;':Offset'&lt;/string&gt;
										&lt;/value&gt;
									&lt;/slot&gt;										
									&lt;slot name="Symbol"&gt;
										&lt;value&gt;
											&lt;string&gt;':Symbol'&lt;/string&gt;
										&lt;/value&gt;
									&lt;/slot&gt;' newline
									_portdtQuantity()
									_portdtUnitReference()
'								&lt;/object&gt;' newline</report>
				<report>_portdtUnitReference()
/* Unit references are currently not reused */
'						&lt;slot name="UnitReference"&gt;
							&lt;value&gt;' newline
do :UnitReference { 
		_portdtUnitDetails()
}								
'							&lt;/value&gt;
						&lt;/slot&gt; ' 
						newline</report>
				<report>_ports()
/* Generating the ports information */
'&lt;PORTS&gt;' 
	foreach .( In* | Out* | ServerPort | ClientPort | PowerPort) { subreport '_port data' run}
'&lt;/PORTS&gt;'</report>
				<report>_propsDeeplyInHTML()
do :() 
{	'&lt;tr&gt;&lt;th align="left" valign="top" bgcolor="#F2F2F2"&gt;'
	to '%xml' translate containers endto 
	'&lt;/th&gt;&lt;td valign="top" style="white-space: pre-wrap;"&gt;'
	@skip = _skipPropRecursion()
	if contents then
		@sep = ''
		dowhile contents { 
			@sep
			if @skip or metatype = 'Text' or metatype = 'String' then
				id%xml
			else
				'&lt;a href="#' oid '"&gt;' id%trunc80%xml '&lt;/a&gt;' 
			endif
			@sep = __(if metatype = 'Text' then '&lt;br /&gt;' else ', ' endif)
		}
	else
		id%xml 
	endif
	'&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;'
	if not @skip then
		do contents where metatype &lt;&gt; 'Text' and metatype &lt;&gt; 'String' 
		{	_extraTypesInHTML() 
		}
	endif
}</report>
				<report>_quantity()
/* Reports the quantity */
if not $reported_elements =~ oid%wildsp then
	variable 'reported_elements' append oid ' ' close
	variable 'type_name' write type%minus%upper close
	_quantity_details()
endif	</report>
				<report>_quantity_details()
/* Reports the Quantity details */
if $EAXMLoids =~oid%wildsp then
	local 'QuantityName' write :Short name; close
	local 'QuantityShortName' write @QuantityName%toShortName close
	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' @QuantityShortName ')'
	else
		@QuantityShortName
	endif
	' --&gt;' newline 
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' @QuantityShortName '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' 
	endif
	subreport '_description' run
	if :AmountOfSubstanceExp; then '&lt;AMOUNT-OF-SUBSTANCE-EXP&gt;' :AmountOfSubstanceExp;%xml '&lt;/AMOUNT-OF-SUBSTANCE-EXP&gt;' newline endif
	if :ElectricCurrentExp; then '&lt;ELECTRIC-CURRENT-EXP&gt;' :ElectricCurrentExp;%xml '&lt;/ELECTRIC-CURRENT-EXP&gt;' newline endif
	if :LengthExp; then '&lt;LENGTH-EXP&gt;' :LengthExp;%xml '&lt;/LENGTH-EXP&gt;' newline endif
	if :LuminousIntensityExp; then '&lt;LUMINOUS-INTENSITY-EXP&gt;' :LuminousIntensityExp;%xml '&lt;/LUMINOUS-INTENSITY-EXP&gt;' newline endif
	if :MassExp; then '&lt;MASS-EXP&gt;' :MassExp;%xml '&lt;/MASS-EXP&gt;' newline endif
	if :ThermodynamicTemperatureExp; then '&lt;THERMODYNAMIC-TEMPERATURE-EXP&gt;' :ThermodynamicTemperatureExp;%xml '&lt;/THERMODYNAMIC-TEMPERATURE-EXP&gt;' newline endif
	if :TimeExp; then '&lt;TIME-EXP&gt;' :TimeExp;%xml '&lt;/TIME-EXP&gt;' newline endif
	'&lt;/' $type_name '&gt;' newline
endif</report>
				<report>_quantity_element()
if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
	variable 'data-types_modeled' append oid ' '	close 
	variable 'reported_elements' append oid ' ' close 
	variable 'type_name' write type%minus%upper close
	variable $modelOid append
		_quantity_details()
	close
endif</report>
				<report>_RangeableValueType()
/* Reporting the RangeableValueType information */
'&lt;ACCURACY&gt;' :Accuracy;%xml '&lt;/ACCURACY&gt;' newline
'&lt;RESOLUTION&gt;' :Resolution;%xml '&lt;/RESOLUTION&gt;' newline
if :SignificantDigits; then '&lt;SIGNIFICANT-DIGITS&gt;' :SignificantDigits;%xml '&lt;/SIGNIFICANT-DIGITS&gt;' newline endif
do :BaseRangeable; { '&lt;BASE-RANGEABLE-REF TYPE="' type%minus%upper'"&gt;' variable oid '_path' read '&lt;/BASE-RANGEABLE-REF&gt;' newline } 
</report>
				<report>_reportError_level0(@errorType)
/* Reporting the undefined value */
'Undefined ' @errorType' value for ' id ' &lt;' type '&gt; '</report>
				<report>_reportError_level1(@errorType)
/* Reporting the undefined value and hierarchy for it */
'Undefined ' @errorType' value for ' id ' &lt;' type '&gt; ' 
</report>
				<report>_reportError_level2(@errorType)
/* Reporting the undefined value and hierarchy for it */
'Undefined ' @errorType' value for ' id ' &lt;' type '&gt; '
if type;1 &lt;&gt; 'Package' then
	'in ' id;1 ' &lt;' type;1 '&gt; | ' id;2 ' &lt;' type;2 '&gt; '
endif</report>
				<report>_reportError_level3(@errorType)
/* Reporting the undefined value and hierarchy for it */
'Undefined ' @errorType' value for ' id ' &lt;' type '&gt; ' 
if type;1 &lt;&gt; 'Package' then
	'in ' id;1 ' &lt;' type;1 '&gt; | ' id;2 ' &lt;' type;2 '&gt; | ' id;3 ' &lt;' type;3 '&gt; '
endif</report>
				<report>_reportWarnings()
/* Reporting the index and sets the legal variable as F (=is not going to be EAXML exportable) */
/* warnings counter is added */
$warnings++%null

if $LiveCheck = 'F' then /* Index is generated only for full check not for LiveCheck pane */
	'(' $warnings ') '
endif

$legal = 'F'</report>
				<report>Report '_requirement'
/* Generating the Requirements */
if $EAXMLoids =~oid%wildsp then
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write type%minus%upper close
		local 'RequirementName' write :Short name; close
		local 'RequirementShortName' write @RequirementName%toShortName close
		local 'nameValue' write :Name;%xml close 
		newline
		'&lt;!-- ' $type_name ' name: ' 
		if @nameValue &lt;&gt; '' then
			@nameValue ' (' @RequirementShortName ')'
		else
			@RequirementShortName
		endif
		' --&gt;' newline
		'&lt;!--  path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline
		'&lt;SHORT-NAME&gt;' @RequirementShortName '&lt;/SHORT-NAME&gt;' newline
		if @nameValue &lt;&gt; '' then
			'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
		endif
		subreport '_description' run
		if :Formalism; then
			'&lt;FORMALISM&gt;' :Formalism;%xml '&lt;/FORMALISM&gt;' newline
		endif
		if :Url; then
			'&lt;URL&gt;' :Url;%xml '&lt;/URL&gt;' newline
		endif
		if :Modes; then
			do :Modes
			{	'&lt;MODE-REFS&gt;' newline
				'&lt;MODE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/MODE-REF&gt;' newline
				'&lt;/MODE-REFS&gt;' newline
			}

		endif

		if :Kind; then
			'&lt;KIND&gt;' :Kind%minus%upper '&lt;/KIND&gt;' newline
		endif
		'&lt;/' $type_name '&gt;'
	endif
endif
endreport</report>
				<report>_req_hierarchy(@tab)
local 'tab' append '	' close
do :Child hierarchy; {
	@tab '['
	id ']' newline
	_req_hierarchy(@tab)
}</report>
				<report>Report '_return type'
if decompositions then
	do decompositions {
		do :Type { type }
	}
else
	'HardwareComponentType'
endif
endreport</report>
				<report>_safetyGoals()
/* Reporting the SafetyGoals */
'&lt;SAFETY-GOALS&gt;'
foreach .SafetyGoal 
{	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	newline
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	'&lt;HAZARD-CLASSIFICATION&gt;ASIL_' :Safety level; '&lt;/HAZARD-CLASSIFICATION&gt;' newline

	if :Safe states; then
		'&lt;SAFE-STATE-REFS&gt;' newline
		do :Safe states; 
		{	'&lt;SAFE-STATE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/SAFE-STATE-REF&gt;' newline }
		'&lt;/SAFE-STATE-REFS&gt;' newline
	endif

	'&lt;DERIVED-FROM-REFS&gt;' newline
	do ~SafetyGoal~DerivedFrom.HazardousEvent 
	{	'&lt;DERIVED-FROM-REF TYPE="HAZARDOUS-EVENT"&gt;' variable oid '_path' read '&lt;/DERIVED-FROM-REF&gt;' newline }
	'&lt;/DERIVED-FROM-REFS&gt;' newline

	'&lt;REQUIREMENT-REFS&gt;' newline
	do ~SafetyGoal~Requirement.(*Requirement) 
	{	'&lt;REQUIREMENT-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/REQUIREMENT-REF&gt;' newline }
	'&lt;/REQUIREMENT-REFS&gt;' newline
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/SAFETY-GOALS&gt;' newline
</report>
				<report>_StackforEAXMLPath()
/* Producing the path for the element node */
@revStack = @sep = ''
local 'temp' write variable oid '_path' read close
/* Path is set only for the elements which don't have the path set already */
if @temp = '' then
	do stack 
	{ 
		if type = 'HardwareComponentType' then
			do :Type { local 'myName' write :Short name; close }
		else
			if type =~ '*FunctionType' then
				local 'myName' write :FunctionName; close
			else
				if metatype &lt;&gt; 'Relationship' then
					if type &lt;&gt; 'SystemModel' then
						local 'myName' write :Short name; close
					else
						local 'myName' write id close
					endif
				else
					local 'myName' write id close
				endif				
			endif
		endif

		if metatype = 'Graph' then 
			if type = 'Package' then 
				@revStack = __(@myName @sep @revStack)
   		   @sep = '/'
			endif
			if type = 'TimingModel' or type = 'BehaviorGraph' or type = 'Dependability' or type = 'VehicleFeatureModel' or type = 'EnvironmentModel' or type = 'RequirementsModel' then
				@revStack = __(@myName @sep @revStack)
				@sep = '/'
				@revStack = __(@myName @sep @revStack)
	   	   @sep = '/'
			endif
		endif
		
		/* Prototypes, Pins, Ports, AFT, DFT, HardwareComponentType, HardwarePortConenctor */
		/* Events, Constraints */
		/* Modes, FunctionBehaviors, FunctionTriggers, FaultFailures, Item, Feature, VehicleFeature, SafetyGoal, HazardousEvent, Hazard */
		if type =~ '*Prototype' Or type =~ '*Port' Or type =~ '*Pin*' Or type =~ '*FunctionType' Or type = 'HardwareComponentType' or type = 'HardwarePortConnector' or type =~ '*Event*' or type =~ '*Constraint' or type =~ 'Mode*' or type = 'FunctionBehavior' or type = 'FunctionTrigger' or type = 'FeatureFlaw' or type = 'FaultFailure' or type = 'Item' or type =~ '*Feature' or type = 'SafetyGoal' or type = 'HazardousEvent' or type = 'Hazard' then 
			@revStack = __(@myName @sep @revStack)
			@sep = '/'
		endif

		/* Requirements, RequirementsModel, UseCase, OperationalSituation */
/*		if type =~ '*Requirement' or type = 'RequirementsModel' or type = 'UseCase' or type = 'OperationalSituation' then */
		if type =~ '*Requirement' or type = 'UseCase' or type = 'OperationalSituation' then

/*			if type = 'RequirementsModel' then 
				@revStack = __(@myName @sep @revStack)
				@sep = '/'
			endif*/
			@revStack = __(@myName @sep @revStack)
			@sep = '/'
		endif
		
		/* Datatypes */
		if type = 'ArrayDatatype' Or type = 'CompositeDatatype' Or type = 'EABoolean' Or type = 'EANumerical' Or type = 'EAString' Or type = 'Enumeration' Or type = 'RangeableValueType' Or type = 'Unit' Or type = 'Quantity'  or type = 'FunctionClientServerInterface' then 
			@revStack = __(@myName @sep @revStack)
			@sep = '/'
		endif
		
		/* Relationships */
		if metatype = 'Relationship' then
			@revStack = __(@myName @sep @revStack)
			@sep = '/'
		endif
		
		if type = 'SystemModel' then 
			@revStack = __(@myName @sep @revStack)
			@sep = '/'
		endif

	}
	variable oid '_path' write '/' @revStack close
endif</report>
				<report>_subfeatures()
/* Goes through the subfeatures to get the correct path for each feature */
do ~Parent~Child.(){
	_StackforEAXMLPath()
	if ~Parent; then
		_subfeatures()
	endif
}
</report>
				<report>_symErrInPorts()
do ~FaultIn
{  variable 
      do #() { 'y' oid } 
   write 
      do &gt;() { y }
   close
}
do decompositions
{  foreach .FaultInPort
   orderby 
		local 'relY' write variable 'y' oid read close
			if @relY then @relY else '9999999' endif NUM ,
		y NUM 
   {  :Short name; newline  }
}</report>
				<report>_symErrOutPorts()
do ~FailureOut
{  variable 
      do #() { 'y' oid } 
   write 
      do &gt;() { y }
   close
}
do decompositions
{  foreach .FailureOutPort
   orderby 
		local 'relY' write variable 'y' oid read close
			if @relY then @relY else '9999999' endif NUM ,
		y NUM 
   {  :Short name; newline  }
}</report>
				<report>_symFAInOutPorts()
do decompositions
{  foreach .(InOutFlowPort | PowerPort)
   orderby 
		x NUM 
   {  :Short name; newline  }
}
</report>
				<report>_symFAInPorts()
do ~(InFlowPort | ServerPort)
{  variable 
      do #() { 'y' oid } 
   write 
      do &gt;() { y }
   close
}
do decompositions
{  foreach .(InFlowPort | ServerPort)
   orderby 
		local 'relY' write variable 'y' oid read close
			if @relY then @relY else '9999999' endif NUM ,
		y NUM 
   {  :Short name; newline  }
}
</report>
				<report>_symFAOutPorts()
do ~(OutFlowPort | ClientPort)
{  variable 
      do #() { 'y' oid } 
   write 
      do &gt;() { y }
   close
}
do decompositions
{  foreach .(OutFlowPort | ClientPort)
   orderby 
		local 'relY' write variable 'y' oid read close
			if @relY then @relY else '9999999' endif NUM ,
		y NUM 
   {  :Short name; newline  }
}</report>
				<report>_symHDAInOutPorts()
do decompositions
{  foreach .(*PinInOut)
   orderby 
		x NUM 
   {  :Short name; newline  }
}</report>
				<report>_symHDAInPorts()
do ~(*Pin_To)
{  variable 
      do #() { 'y' oid } 
   write 
      do &gt;() { y }
   close
}
do decompositions
{  foreach .(*PinIn)
   orderby 
		local 'relY' write variable 'y' oid read close
			if @relY then @relY else '9999999' endif NUM ,
		y NUM 
   {  :Short name; newline  }
}</report>
				<report>_symHDAOutPorts()
do ~(*Pin_From)
{  variable 
      do #() { 'y' oid } 
   write 
      do &gt;() { y }
   close
}
do decompositions
{  foreach .(*PinOut)
   orderby 
		local 'relY' write variable 'y' oid read close
			if @relY then @relY else '9999999' endif NUM ,
		y NUM 
   {  :Short name; newline  }
}</report>
				<report>_symInOutPinConnected()
@oid = oid
do ~();1#(*PinInOut) where oid = @oid unique '1' 
{	'T'
}</report>
				<report>_symInOutPortConnected()
@oid = oid
do ~();1#(InOutFlowPort) where oid = @oid unique '1' 
{	'T'
}</report>
				<report>_symLegalType()
$givenValues = ''
$givenTypes = ''
$definedValues = ''
$definedTypes = ''
do :Values {
	do :Type {
		variable 'givenValues' append :Short name; ' ' close
		variable 'givenTypes' append type ' ' close		
	}
}
do :Types {
	do :User Attribute Definitions {
		do :Type {
			variable 'definedValues' append :Short name; ' ' close
			variable 'definedTypes' append type ' ' close		
		}
	}
}
if $givenValues &lt;&gt; $definedValues; then 
	'Given values do not match with defined values' 
endif
if $givenTypes &lt;&gt; $definedTypes; then 
	newline
	'Given types of values do not match with defined types' 
endif</report>
				<report>_symShowInOutPinIcons()
do #(*PinInOut) {'T'}</report>
				<report>_symShowInOutPortIcons()
do #(InOut*) {'T'}</report>
				<report>_sym_hide_PinName()
/* hides pin name for library symbol from perimeter when connected to a role */
@oid = oid
do ~();1#(*PinInOut) where oid = @oid unique '1' 
{	'T'
}
</report>
				<report>_sym_hide_PortName()
/* hides port name for library symbol from perimeter when connected to a role */
@oid = oid
do ~();1#(PowerPort | InOutFlowPort) where oid = @oid unique '1' 
{	'T'
}
</report>
				<report>_testAndReport(@myPropertyType)
/* Testing and reporting the undefined property */
do :Type
{
	if not $datatypes =~ oid%wildsp then
		_reportWarnings()
		'Warning: ' id;2 ' &lt;' type;2 '&gt; has ' @myPropertyType' property defined as ' id;1 ' &lt;' type;1 '&gt;. This ' id ' &lt;' type '&gt; is not defined in anywhere in this hierarchy.' newline			
	endif
}
</report>
				<report>_timeStamp()
/* Generating the timestamp first to the myTime.txt and then read it to the myTime variable */
filename 'timeStamp.bat' write
'
for /f "skip=1" %%x in (''wmic os get localdatetime'') do if not defined mydate set mydate=%%x
set myDate=%mydate:~0,4%-%mydate:~4,2%-%mydate:~6,2%T%mydate:~8,2%:%mydate:~10,2%:%mydate:~12,2%
(echo.|set /p = "%myDate%")&gt;myTime.txt'
close 
external 'timeStamp.bat' executeblocking 
variable 'myTime' write
	filename 'myTime.txt' read 
close</report>
				<report>_timingTranslators()
to '%time
$EventChain $EVENT\-CHAIN
$EventFunctionClientServerPort $EVENT\-FUNCTION\-CLIENT\-SERVER\-PORT
$EventFunctionFlowPort $EVENT\-FUNCTION\-FLOW\-PORT
$EventFunction $EVENT\-FUNCTION
$ModeEvent $MODE\-EVENT
$EventFeatureFlaw $EVENT\-FEATURE\-FLAW
$EventFaultFailure $EVENT\-FAULT\-FAILURE
$ExternalEvent $EXTERNAL\-EVENT
$PrecedenceConstraint $PRECEDENCE\-CONSTRAINT
$ReactionConstraint $REACTION\-CONSTRAINT
$AgeConstraint $AGE\-CONSTRAINT
$InputSynchronizationConstraint $INPUT\-SYNCHRONIZATION\-CONSTRAINT
$OutputSynchronizationConstraint $OUTPUT\-SYNCHRONIZATION\-CONSTRAINT
$RepetitionConstraint $REPETITION\-CONSTRAINT
$DelayConstraint $DELAY\-CONSTRAINT
$SynchronizationConstraint $SYNCHRONIZATION\-CONSTRAINT
$ExecutionTimeConstraint $EXECUTION\-TIME\-CONSTRAINT
$SporadicConstraint $SPORADIC\-CONSTRAINT
$PatternConstraint $PATTERN\-CONSTRAINT
$PeriodicConstraint $PERIODIC\-CONSTRAINT
$ArbitraryConstraint $ARBITRARY\-CONSTRAINT
$BurstConstraint $BURST\-CONSTRAINT
$OrderConstraint $ORDER\-CONSTRAINT
$ComparisonConstraint $COMPARISON\-CONSTRAINT
$DesignFunctionPrototype $DESIGN\-FUNCTION\-PROTOTYPE
$AnalysisFunctionPrototype $ANALYSIS\-FUNCTION\-PROTOTYPE
$HardwareComponentPrototype $HARDWARE\-COMPONENT\-PROTOTYPE
$AnalysisFunctionType $ANALYSIS\-FUNCTION\-TYPE
$DesignFunctionType $DESIGN\-FUNCTION\-TYPE
$HardwareComponentType $HARDWARE\-COMPONENT\-TYPE
'
endto</report>
				<report>Report '_type close'
/* Generating the closing tag for the xml */
'&lt;/' type%minus%upper '&gt;'
endreport</report>
				<report>_TypeDeclaration()
/* Reports graphs in which type is declared: EAType referring to this graph type */
do graphs where type = 'Package' 
{	foreach .EAType 
	{	@found = ''
		do decompositions where oid = oid;3 
		{	id ' is declared in ' id;2 
			@found = 'T'
		}
		if @found then ' as EAType ' id newline endif
	}
}</report>
				<report>_ua-values()
/* Generating the ua-values */
if :UserAttributeValues; then 
	'&lt;UA-VALUES&gt;'
	do :UserAttributeValues 
	{	'&lt;USER-ATTRIBUTE-VALUE&gt;' newline
		if :Short name; then
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		endif
		subreport '_description' run
		if :Key; then
			'&lt;KEY&gt;' :Key;%xml '&lt;/KEY&gt;' newline
		endif
		if :Value; then
			'&lt;VALUE&gt;' :Value;%xml '&lt;/VALUE&gt;' newline
		endif
		'&lt;/USER-ATTRIBUTE-VALUE&gt;' newline
	}
	'&lt;/UA-VALUES&gt;' newline
endif</report>
				<report>_UnconnectedPorts()

_translators()
$report = 'F'

id ' &lt;' type '&gt; has following unconnected ports:' newline
foreach .(*Prototype)
{
	$found = 'F'
	$ports = ' '
	$unused_ports = ''
	do #() { variable 'ports' append oid ' ' close }
	do decompositions {
		foreach .(*Port) {
			if not $ports =~ oid%wildsp then
				variable 'unused_ports' append '- ' id ' &lt;' type '&gt;' newline close
				$found = 'T'
			endif
		}
	}
	if $found = 'T' then
		id ' &lt;' type '&gt;' newline
		$unused_ports newline
		$report = 'T'
	endif
}
if $report = 'F' then 'none' endif</report>
				<report>_undefinedType()
/* Reporting the undefined Type for Ports */
foreach .(*Prototype) 
{	$undefinedTypeFound = 'F'
	do decompositions 
	{	foreach .(*Port) where :Type = '' { $undefinedTypeFound = 'T' }}
	/* Reporting the results */
	if $undefinedTypeFound = 'T' then
		@delimeter = ''
		_reportWarnings()
		'Warning: Prototype: ' id 
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;'
		endif
		' has following port(s) with undefined Type: '
		do decompositions 
		{	foreach .(*Port) where :Type = ''
			{	@delimeter id ' &lt;' type '&gt; '
				@delimeter = ', '
			}
		}
		@delimeter = ''
		newline
	endif
	do decompositions 
	{	foreach .() {	subreport '_name checks' run }}	
}
$undefinedTypeFound = 'F'
</report>
				<report>_unit()
/* Reporting the Unit details */
if not $reported_elements =~ oid%wildsp then
	variable 'reported_elements' append oid ' ' close
	variable 'type_name' write type%minus%upper close
	_unit_details()
	
	/* Report the Quantity definition */
	do :Quantity; { _quantity() }
endif</report>
				<report>_unit_details()
if $EAXMLoids =~oid%wildsp then
	/* Reports the Unit details */
	local 'UnitName' write :Short name; close
	local 'UnitShortName' write @UnitName%toShortName close
	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' $type_name ' name: ' 
	if @nameValue; then
		@nameValue ' (' @UnitShortName ')'
	else
		@UnitShortName
	endif
	' --&gt;' newline 
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' @UnitShortName '&lt;/SHORT-NAME&gt;' newline
	if @nameValue; then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' 
	endif
	subreport '_description' run
	'&lt;FACTOR&gt;' :Factor;%xml '&lt;/FACTOR&gt;' newline
	'&lt;SYMBOL&gt;' :Symbol;%xml '&lt;/SYMBOL&gt;' newline
	'&lt;OFFSET&gt;' :Offset;%xml '&lt;/OFFSET&gt;' newline
	do :UnitReference; { '&lt;REFERENCE-REF TYPE="' type%minus%upper'"&gt;' variable oid '_path' read '&lt;/REFERENCE-REF&gt;' newline } 
	do :Quantity; { '&lt;QUANTITY-REF TYPE="' type%minus%upper'"&gt;' variable oid '_path' read '&lt;/QUANTITY-REF&gt;' newline } 
	'&lt;/' $type_name '&gt;'
endif

do :UnitReference 
{	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write type%minus%upper close
		_unit_details()
		do :Quantity { _quantity() }
	endif
}

do :Quantity { _quantity() }
</report>
				<report>_useCases()
/* Reporting the UseCases */
'&lt;USE-CASES&gt;' newline
foreach .UseCase 
{
	variable 'type_name' write type%minus%upper close
	local 'nameValue' write :Name;%xml close
	'&lt;!-- ' type%time%minus%upper ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	'&lt;EXTENSION-POINTS&gt;' newline
	do :Extension points 
	{
		'&lt;EXTENSION-POINT&gt;' newline
		'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		'&lt;NAME&gt;' :Name '&lt;/NAME&gt;' newline
		subreport '_description' run
		'&lt;/EXTENSION-POINT&gt;' newline
	}
	'&lt;/EXTENSION-POINTS&gt;' newline
	'&lt;/' $type_name '&gt;' newline
}
'&lt;/USE-CASES&gt;' newline</report>
				<report>_validateArrayDatatype()
/* Validation checks for ArrayDatatypes */
subreport '_name checks' run
if not :Type; then
	_reportWarnings()
	'Warning: '
	if type;1 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		'Undefined Type value for ' id ' &lt;' type '&gt; '
		_extendedCheckOutput_level2()
	else
		/* When the Type is defined in Package model */	
		 'Undefined Type value for ' id ' &lt;' type '&gt; ' 
		_extendedCheckOutput_level1()
	endif
	newline
endif</report>
				<report>_validateCompositeDatatype()
/* Validation checks for CompositeDatatypes */
subreport '_name checks' run
if not :DatatypePrototypes; then
	_reportWarnings()
	'Warning: ' 
	if type;1 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		 id ' &lt;' type '&gt; used in ' id;1 ' &lt;' type;1 '&gt; does not have any DatatypePrototypes defined '
		_extendedCheckOutput_level2()
	else
		/* When the Type is defined in Package model */	
		 id ' &lt;' type '&gt; does not have any DatatypePrototypes defined '
		_extendedCheckOutput_level1()
	endif
	newline
endif

@duplicateEADataTypePrototypes = ' '
do :DatatypePrototypes; 
{	
	@short = :Short name;
	if not @duplicateEADataTypePrototypes =~ @short%wildsp; then
		local 'duplicateEADataTypePrototypes' append :Short name; ' ' close
	else
		_reportWarnings()
		'Warning: '
		if type;2 &lt;&gt; 'Package' then
			/* When the Type is used in some FAA/FDA model */	
			 id ' &lt;' type '&gt; defined several times among DatatypePrototypes in ' id;1 ' &lt;' type;1 '&gt; | ' id;2 ' &lt;' type;2 '&gt; '
			_extendedCheckOutput_level3()
		else
			/* When the Type is defined in Package model */	
			 id ' &lt;' type '&gt; defined several times among DatatypePrototypes in ' id;1 ' &lt;' type;1 '&gt; ' 
			_extendedCheckOutput_level2()
		endif
		newline 
	endif

	subreport '_name checks' run

	if :Type = '' then
		_reportWarnings()
		'Warning: ' 
		if type;2 &lt;&gt; 'Package' then
			/* When the Type is used in some FAA/FDA model */	
			'Undefined Type value for ' id ' &lt;' type '&gt; in ' id;1 ' &lt;' type;1 '&gt; | ' id;2 ' &lt;' type;2 '&gt; '
			_extendedCheckOutput_level3()
		else
			/* When the Type is defined in Package model */	
			 'Undefined Type value for ' id ' &lt;' type '&gt; ' 
			_extendedCheckOutput_level2()
		endif
		newline
	endif

	foreach .CompositeDatatype; where oid &lt;&gt; oid;2 
	{	do :DatatypePrototypes 
		{	if oid = oid;2 then 
				if not $reported_objects =~ oid%wildsp; then
					_reportWarnings()
					'Warning: '
					if type;4 &lt;&gt; 'Package' then
						/* When the Type is used in some FAA/FDA model */	
						'DatatypePrototype ' id ' &lt;' type '&gt; is used among several composite datatypes, e.g. ' id;1 ' &lt;' type;1 '&gt; '
						_extendedCheckOutput_level3()
					else
						/* When the Type is defined in Package model */	
						'DatatypePrototype ' id ' &lt;' type '&gt; is used among several composite datatypes, e.g. ' id;1 ' &lt;' type;1 '&gt; '
						_extendedCheckOutput_level4()
					endif
					newline
					variable 'reported_objects' append oid ' ' close
				endif
			endif
		}
	}
}</report>
				<report>_validateDataTypes()
/* Validating all the datatypes */

/* EANumerical datatype */
if type = 'EANumerical' then 
	_validateEANumericals()
endif

/* EAString datatype */
if type = 'EAString' then 
	_validateEAStrings()
endif	

/* EABoolean datatype */
if type = 'EABoolean' then 
	_validateEABooleans()
endif	

/* RangeableValueType datatype */
if type = 'RangeableValueType' then 
	_validateRangeableValueType()
endif
	
/* Enumeration datatype */
if type = 'Enumeration' then 
	_validateLiterals()
endif

/* Array datatype */
if type = 'ArrayDatatype' then 
	_validateArrayDatatype()
endif

/* Composite datatype */
if type = 'CompositeDatatype' then
	_validateCompositeDatatype()	
endif

/* Quantity */
if type = 'Quantity' then
	_validateQuantity()
endif

/* Unit */
if type = 'Unit' then
	_validateUnit()
endif</report>
				<report>_validateEABooleans()
subreport '_name checks' run</report>
				<report>_validateEANumericals()
/* Validation checks for EANumerical */
subreport '_name checks' run
do :Unit 
{	_validateUnit()
	do :Quantity { _validateQuantity() }
	do :UnitReference { _validateUnit() }
}
</report>
				<report>_validateEAStrings()
subreport '_name checks' run</report>
				<report>_validateFunctionsAndHardwareComponents()
@path = ' '

/* All the prototypes */
foreach .(*Prototype) 
{	subreport '_name checks' run
	@prototypeName = :Short name;
	if @path =~ @prototypeName%wildsp; then
		_reportWarnings()
		'Warning: ' id;1 ' contains several prototypes with the same name ' :Short name; newline
	else
		local 'path' append @prototypeName%var ' ' close
	endif

	do decompositions 
	{	if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			_validateFunctionsAndHardwareComponents()
		endif
	}
}


</report>
				<report>_validateLiterals()
/* Validation checks for Enumeration literals */
subreport '_name checks' run
@litValue = '0'
do :Literals {	@litValue++%null }

if not :Literals; then
	_reportWarnings()
	'Warning: ' id; ' &lt;' type '&gt; does not have any Literals defined '
	if type;1 &lt;&gt; 'Package' then
		_extendedCheckOutput_level2()
	else 
		_extendedCheckOutput_level1()
	endif
	newline
else
	if @litValue = '1' then
		_reportWarnings()
		'Warning: '
		if type;1 &lt;&gt; 'Package' then
			/* When the Type is used in some FAA/FDA model */
			id; ' &lt;' type '&gt; in ' id;1 ' &lt;' type;1 '&gt; has only one literal defined'
			if $extendedCheck = 'T' then
				' in the model ' id;2 ' &lt;' type;2 '&gt;'
			endif
		else
			/* When the Type is defined in Package model */	
			id; ' &lt;' type '&gt; has only one literal defined'
			if $extendedCheck = 'T' then
				' in the model ' id;1 ' &lt;' type;1 '&gt;'
			endif
		endif
		if $extendedCheck &lt;&gt; 'T' then
			'. Two or more expected.'
		endif
		newline
	endif
	do :Literals 
	{	if not id =/ '[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?' then
			_reportWarnings()
			'Warning: '
			if type;2 &lt;&gt; 'Package' then
				/* When the Type is used in some FAA/FDA model */
				id;1 ' &lt;' type;1 '&gt; in ' id;2 ' &lt;' type;2 '&gt; has illegal character(s) in literal value ' id ' '
				_extendedCheckOutput_level3()
			else
				/* When the Type is defined in Package model */	
				id;1 ' &lt;' type;1 '&gt; has illegal character(s) in literal value ' id ' '
				_extendedCheckOutput_level2()
			endif
			newline
		endif
	}
endif</report>
				<report>_validateNamingForEAXML()
@path = ' '
foreach .( *Port | *Pin* ) 
{	subreport '_name checks' run }

/* All the prototypes */
foreach .(*Prototype) 
{	subreport '_name checks' run
	@prototypeName = :Short name;
	if @path =~ @prototypeName%wildsp; then
		_reportWarnings()
		'Warning: ' id;1 ' contains several prototypes with the same name ' :Short name; newline
	else
		local 'path' append @prototypeName%var ' ' close
	endif
	do decompositions 
	{	if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			_validateNamingForEAXML()
		endif
	}
}

_checkingForShortNameUniqueness()

/* Relationships */
subreport '_checkings for the relationships' run</report>
				<report>_validatePackageForEAXML()
variable 'packages_visited' append oid ' ' close
@path = ' '
foreach .( * | ^Comment | ^Generic* | ^User* ) {
	if @path =~ id%var%wildsp; then
		_reportWarnings()
		'Warning: ' :Short name;1 ' &lt;' type;1 '&gt; contains several elements with the same name/identifier ' id newline
	else
		local 'path' append id%var ' ' close
	endif
	do decompositions {
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if (type = 'AnalysisFunctionType') or (type = 'DesignFunctionType') or (type = 'HardwareComponentType') then
				_validateNamingForEAXML()
			else
				if type = 'Package' then 
					_validatePackageForEAXML()
				else
					subreport '_checkEAXMLPath' type run
				endif
			endif
		else
			if type = 'Package' then
				_reportWarnings()
				'Warning: Recursive package structure found for package ' id newline
			else 
				if type = 'SystemModel' then
					_reportWarnings()
					'Warning: Several packages, like ' id;2 ' refer to the same system model ' id newline
				endif
			endif
		endif
	}
}

foreach .EAType {
	do decompositions {
		if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if type = 'AnalysisFunctionType' or type = 'DesignFunctionType' then
				@fname = :FunctionName;
				if @path =~ @fname%wildsp; then
					_reportWarnings()
					'Warning: ' id;1 ' contains several elements with the same name ' :FunctionName; newline
				endif
				local 'path' append @fname ' ' close
			endif
			if type = 'HardwareComponentType' then
				do :Type { @hwname = :Short name; }
				if @path =~ @hwname%wildsp; then
					_reportWarnings()
					'Warning: ' id;1 ' contains several elements with the same name ' do :Type { :Short name; } newline
				endif
				local 'path' append @fname ' ' close
			endif
			_validateNamingForEAXML()
		endif
	}
}</report>
				<report>_validateQuantity()
/* Validation checks for Quantity */

/* AmountOfSubstanceExp is undefined */
if :AmountOfSubstanceExp = '' then
	_reportWarnings()
	@errorType = 'AmountOfSubstanceExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* ElectricCurrentExp is undefined */
if :ElectricCurrentExp = '' then
	_reportWarnings()
	@errorType = 'ElectricCurrentExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* LengthExp is undefined */
if :LengthExp = '' then
	_reportWarnings()
	@errorType = 'LengthExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* LuminousIntensityExp is undefined */
if :LuminousIntensityExp = '' then
	_reportWarnings()
	@errorType = 'LuminousIntensityExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* MassExp is undefined */
if :MassExp = '' then
	_reportWarnings()
	@errorType = 'MassExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* ThermodynamicTemperatureExp is undefined */
if :ThermodynamicTemperatureExp = '' then
	_reportWarnings()
	@errorType = 'ThermodynamicTemperatureExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* TimeExp is undefined */
if :TimeExp = '' then
	_reportWarnings()
	@errorType = 'TimeExp'
	'Warning: '
	if type;3 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level3(@errorType)
		_extendedCheckOutput_level4()
	else
		/* When the Type is defined in Package model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif
</report>
				<report>_validateRangeableValueType()
subreport '_name checks' run
/* Validation checks for RangeableValalueTypes */

/* Accuracy is undefined */
if :Accuracy = '' then
	_reportWarnings()
	@errorType = 'Accuracy'
	'Warning: '
	if type;1 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level1(@errorType)
		_extendedCheckOutput_level2()
	else
		/* When the Type is defined in Package model */	
		_reportError_level0(@errorType)
		_extendedCheckOutput_level1()
	endif
	newline
endif

/* Resolution is undefined */
if :Resolution = '' then
	_reportWarnings()
	@errorType = 'Resolution'
	'Warning: '
	if type;1 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level1(@errorType)
		_extendedCheckOutput_level2()
	else
		/* When the Type is defined in Package model */	
		_reportError_level0(@errorType)
		_extendedCheckOutput_level1()
	endif
	newline
endif

/* BaseRangeable is undefined */
if :BaseRangeable = '' then
	_reportWarnings()
	@errorType = 'BaseRangeable'
	'Warning: '
	if type;1 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level1(@errorType)
		_extendedCheckOutput_level2()
	else
		/* When the Type is defined in Package model */	
		_reportError_level0(@errorType)
		_extendedCheckOutput_level1()
	endif
	newline
endif
</report>
				<report>_validateTypePathsForEAXML()
/* Checks that each type in the selected EAXML is referred by EATYPE from some package, including also a package that is not part of EAXML */

$TypesInEAXML = ' '
$dataTypesDefined = ' ' /* all datatypes defined in open projects */
$typesChecked = ' ' /* all function types are checked only once */
$functionPrototypesDefinedInThisHierarchy = ' '

/* collect all type definitions */
do graphs where type = 'Package' 
{
	foreach .EAType 
	{
		do decompositions 
		{
			if not $TypesInEAXML =~ oid%wildsp then
				variable 'TypesInEAXML' append oid ' ' close
			endif
		}
	}
	foreach .(ArrayDatatype | CompositeDatatype  | EABoolean | EANumerical | EAString | Enumeration | RangeableValueType | Quantity | Unit | FunctionClientServerInterface) {
		if not $dataTypesDefined =~ oid%wildsp then
			variable 'dataTypesDefined' append oid ' ' close
		endif
	}
}

/* checks if all types are defined */
$ReportedTypeDefsErrors = ' ' 
foreach .Package 
{
	do decompositions 
	{
		_checkUsedTypesInEAXML()
	}
}
</report>
				<report>_validateUnit()
/* Validation checks for Unit */
subreport '_name checks' run

/* Factor is undefined */
if :Factor = '' then
	_reportWarnings()
	@errorType = 'Factor'
	'Warning: '
	if type;2 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level3()
	else
		/* When the Type is defined in Package model */	
		_reportError_level1(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* Offset is undefined */
if :Offset = '' then
	_reportWarnings()
	@errorType = 'Offset'
	'Warning: '
	if type;2 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level3()
	else
		/* When the Type is defined in Package model */	
		_reportError_level1(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif

/* Symbol is undefined */
if :Symbol = '' then
	_reportWarnings()
	@errorType = 'Symbol'
	'Warning: '
	if type;2 &lt;&gt; 'Package' then
		/* When the Type is used in some FAA/FDA model */	
		_reportError_level2(@errorType)
		_extendedCheckOutput_level3()
	else
		/* When the Type is defined in Package model */	
		_reportError_level1(@errorType)
		_extendedCheckOutput_level2()
	endif
	newline
endif
</report>
				<report>Report '_XML document definitions'
/* Generating the document definitions */
'&lt;?xml version="1.0" encoding="UTF-8"?&gt;' newline
'&lt;EAXML xmlns="http://east-adl.info/2.1.12" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://east-adl.info/2.1.12 eastadl_2-1-12.xsd"&gt;' newline 
endreport</report>
				<report>__Unique(@type, @id)
if not @type then @type = type endif
if not @id then @id = id endif
variable '__Unique_' @type append '' close
@coll = __(variable '__Unique_' @type read)
if not @coll then 
	variable '__Unique_' @type append newline close 
endif
if not @coll =~ __('*' newline @id newline '*') then
	variable '__Unique_' @type append @id newline close
	'T'
endif</report>
			</graph>
		</superType>
		<slot id="aw966v" name="Short name" unique="false">
			<property id="Property_Allocation_name_user_3492975434" type="Property_Allocation_name_user_3492975434" typeName="Allocation name">
				<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
				<dataType>
					<simpleType>String</simpleType>
				</dataType>
				<defaultValue>
					<string></string>
				</defaultValue>
				<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
				<widget>Input Field</widget>
			</property>
		</slot>
		<slot id="aycape" name="Name" unique="false">
			<property id="Property_Name_sysadmin_3536998876" type="Property_Name_sysadmin_3536998876" typeName="AttackName">
				<description></description>
				<dataType>
					<simpleType>String</simpleType>
				</dataType>
				<defaultValue>
					<string></string>
				</defaultValue>
				<widget>Input Field</widget>
			</property>
		</slot>
		<slot id="ax969l" name="Description" unique="false">
			<property id="Property_Model_description_user_3399887679" type="Property_Model_description_user_3399887679" typeName="Model description">
				<description></description>
				<dataType>
					<simpleType>Text</simpleType>
				</dataType>
				<defaultValue></defaultValue>
			</property>
		</slot>
		<identReport>_name()</identReport>
		<object id="Object_ADLFunctionPrototype_user_3401001387" type="Object_ADLFunctionPrototype_user_3401001387" typeName="DesignFunctionPrototype">
			<description>The DesignFunctionPrototype represents an occurrence of the DesignFunctionType that types it via the submodel structure.</description>
			<superType>
				<object id="Object_FunctionPrototype_sysadmin_3548175745" type="Object_FunctionPrototype_sysadmin_3548175745" typeName="_FunctionPrototype">
					<description></description>
					<slot id="h993s9" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<identProp slotID="h993s9"></identProp>
				</object>
			</superType>
			<slot id="chqisd" name="Short name" unique="false">
				<property type="Property_2FunctionName_user_3310972235" typeName="FunctionName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="cm944h" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="clju1l" name="Description" unique="false">
				<property id="Property_2Description_user_3310902697" type="Property_2Description_user_3310902697" typeName="Description">
					<description></description>
					<dataType>
						<simpleType>Text</simpleType>
					</dataType>
					<defaultValue></defaultValue>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif
if decompositions; then
	do decompositions {
		_EAST-ADL_nameTranslator()
		': ' :FunctionName
		' &lt;' :Type%NoType '&gt;'
	}
else
	': function type undefined'
endif</identReport>
			<objectSymbol offset="90,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="90,30 260,30 260,150 90,150 90,30" targetPointX="175" targetPointY="90" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="151" version="1.2" width="260" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient3" sym:correctGamma="true" x1="0.511765" x2="0.508758" y1="0.0556523" y2="1.26087">
							<stop offset="0" stop-color="rgb(224,239,255)"></stop>
							<stop offset="0.107851" stop-color="rgb(234,244,255)"></stop>
							<stop offset="0.246784" stop-color="rgb(251,253,255)"></stop>
							<stop offset="1" stop-color="rgb(255,255,255)"></stop>
						</linearGradient>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.505882" x2="0.508758" y1="0.0556523" y2="1.26087">
							<stop offset="0" stop-color="rgb(239,224,255)"></stop>
							<stop offset="0.0829943" stop-color="rgb(242,229,255)"></stop>
							<stop offset="0.296669" stop-color="rgb(253,251,255)"></stop>
							<stop offset="1" stop-color="rgb(255,255,255)"></stop>
						</linearGradient>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient2" sym:correctGamma="true" x1="0.505882" x2="0.508758" y1="0.0556523" y2="1.26087">
							<stop offset="0" stop-color="rgb(255,239,224)"></stop>
							<stop offset="0.165999" stop-color="rgb(255,248,240)"></stop>
							<stop offset="0.346519" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(255,255,255)"></stop>
						</linearGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="120" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="90" y="31">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="url(#gradient1)" height="120" rx="6" ry="6" stroke="none" stroke-width="1" width="170" x="90" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="HardwareFunctionType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions { :Type }</displayCondition>
						</metaInfo>
					</rect>
					<rect fill="url(#gradient2)" height="120" rx="6" ry="6" stroke="none" stroke-width="1" width="170" x="90" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="BasicSoftwareFunctionType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions { :Type }</displayCondition>
						</metaInfo>
					</rect>
					<rect fill="url(#gradient3)" height="120" rx="6" ry="6" stroke="none" stroke-width="1" width="170" x="90" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="LocalDeviceManager" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions { :Type }</displayCondition>
						</metaInfo>
					</rect>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="90,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="260,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAOutPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="90,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInPorts()</generatorNPSource>
						<librarySubsymbolSource>id_left_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="true" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="260,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="39"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAOutPorts()</generatorNPSource>
						<librarySubsymbolSource>id_right_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="after" fill="rgb(0,0,128)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="90" y="30">
						ReportTextSource:_PartOfArchitecture()
newline
newline
newline
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="EnvironmentModel" xmlns="http://www.w3.org/2000/svg">ReportTextSource:type;1</displayCondition>
						</metaInfo>
					</textArea>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="90,150" startDistance="0">
							<layoutPath allocation="start" layoutDistance="60" lineSegmentTable="true,true,true,true" points="0,0 170,0 170,-120 0,-120 0,0" startDistance="30"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInOutPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="60" subsymbolExtentY="40" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="90,150" startDistance="0">
							<layoutPath allocation="start" layoutDistance="60" lineSegmentTable="true,true,true,true" points="0,0 170,0 170,-120 0,-120 0,0" startDistance="30"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInOutPorts()</generatorNPSource>
						<librarySubsymbolSource>id_middle_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="8" sym:wordWrap="true" text-anchor="middle" width="170" x="90" y="30">
						ReportTextSource:if type;1 = 'SystemModel' then
	'Design Level' newline
endif
id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="70,30" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="130" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(64,160,255)" height="32" rx="0" ry="0" stroke="none" stroke-width="1" width="85" x="155" y="30"></rect>
					<rect fill="rgb(128,255,0)" height="32" rx="0" ry="0" stroke="none" stroke-width="1" width="86" x="70" y="30"></rect>
					<rect fill="none" height="100" rx="4" ry="6" stroke="rgb(0,0,0)" stroke-width="0" width="170" x="70" y="30"></rect>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="71" x2="240" y1="62" y2="62"></line>
				</svg>
			</icon>
		</object>
		<object id="Object_FunctionConnector_sysadmin_3616759841" type="Object_FunctionConnector_sysadmin_3616759841" typeName="FunctionConnector">
			<description>FunctionConnector allocates flow, power and client-server connections to hardware architecture.</description>
			<slot id="lvnfi4" name="Connector" unique="false">
				<property type="Property_Connector_sysadmin_3616759838" typeName="Connector">
					<description></description>
					<dataType>
						<relationship id="Relationship__FunctionConnector_sysadmin_3616758846" type="Relationship__FunctionConnector_sysadmin_3616758846" typeName="_FunctionConnector">
							<description>The FunctionConnector indicates that the connected FunctionPorts exchange signals or client-server requests/responses.</description>
						</relationship>
					</dataType>
					<dataTypeSubtype>
						<relationship id="Relationship_ADLConnectorPrototype_user_3400412933" type="Relationship_ADLConnectorPrototype_user_3400412933" typeName="ClientServerInterface">
							<description>The ClientServerInterface is used to specify the operations between client ports and server port. It indicates that the connected prototypes exchange client-server requests/responses via the ports.</description>
							<superType>
								<relationship href="#Relationship__FunctionConnector_sysadmin_3616758846"></relationship>
							</superType>
							<slot id="ab95iq" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="a51at9" name="Short name" unique="false">
								<property id="Property_ConnectorName_user_3400146143" type="Property_ConnectorName_user_3400146143" typeName="ConnectorName">
									<description></description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="ac95ii" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="aafi48" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<relationshipSymbol offset="100,55" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="140" targetPointY="70" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="85" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="140" cy="70" fill="rgb(0,0,0)" rx="0.194168" ry="0.050003" stroke="rgb(0,0,0)" stroke-width="6" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="100" y="55">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="55,44" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="74" version="1.2" width="85" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="70.5" cy="59.5" fill="rgb(255,255,255)" rx="10.5" ry="9.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
									<rect fill="none" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="55" y="44"></rect>
								</svg>
							</icon>
						</relationship>
					</dataTypeSubtype>
					<dataTypeSubtype>
						<relationship id="Relationship_Flow_user_3400497401" type="Relationship_Flow_user_3400497401" typeName="Flow">
							<description>Flow indicates that the connected FlowPorts exchange signals.</description>
							<superType>
								<relationship href="#Relationship__FunctionConnector_sysadmin_3616758846"></relationship>
							</superType>
							<slot id="af95fq" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="a94x33" name="Short name" unique="false">
								<property type="Property_FlowConnectorName_user_3400497343" typeName="FlowConnectorName">
									<description></description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="ag95gb" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="aefi3u" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<relationshipSymbol offset="70,45" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="110" targetPointY="60" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="75" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="110.05" cy="60.05" fill="rgb(0,0,0)" rx="0.050003" ry="0.0499992" stroke="rgb(0,0,0)" stroke-width="6" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="70" y="45">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="100,40" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="60" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="100" y="40"></rect>
									<polygon fill="rgb(0,0,0)" points="116,50 104,43 104,57" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								</svg>
							</icon>
						</relationship>
					</dataTypeSubtype>
					<dataTypeSubtype>
						<relationship id="Relationship_Power_user_3461401495" type="Relationship_Power_user_3461401495" typeName="Power">
							<description>Power indicates that the connected prototypes via their PowerPorts have physical interactions.</description>
							<superType>
								<relationship href="#Relationship__FunctionConnector_sysadmin_3616758846"></relationship>
							</superType>
							<slot id="ap95lp" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="annoyg" name="Short name" unique="false">
								<property href="#Property_ConnectorName_user_3400146143"></property>
							</slot>
							<slot id="aq95ld" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="aonoyx" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<relationshipSymbol offset="90,35" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="130" targetPointY="50" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="60" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="130" cy="50" fill="rgb(0,128,0)" rx="0.194168" ry="0.0499992" stroke="rgb(0,128,0)" stroke-width="6" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="25" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="90" y="35">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="140,70" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="160" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(224,255,224)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="140" y="70"></rect>
									<polygon fill="rgb(0,128,0)" points="143,73 143,87 157,80" stroke="rgb(0,128,0)" stroke-width="1"></polygon>
									<rect fill="rgb(224,255,224)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="140" y="70"></rect>
									<line stroke="rgb(0,128,0)" stroke-width="1" x1="156" x2="144" y1="74" y2="86"></line>
								</svg>
							</icon>
						</relationship>
					</dataTypeSubtype>
				</property>
			</slot>
			<identReport>do :Connector {
	id 
	' &lt;' type '&gt;'
}</identReport>
			<objectSymbol offset="40,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="40,60 125,60 125,90 40,90 40,60" targetPointX="82.5" targetPointY="75" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="90" version="1.2" width="125" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="rgb(128,128,128)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="85" x="40" y="60">
						ReportTextSource:do :Connector {
	id
	' &lt;' type '&gt;'
}
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0" aligmentPointY="0.8" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="35" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,60" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 35,0" startDistance="5"></layoutPath>
						</pathLayout>
						<noneNPSource></noneNPSource>
						<librarySubsymbolSource>FunctionConnector_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
				</svg>
			</objectSymbol>
			<icon offset="74,10" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="20" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="rgb(0,0,0)" sym:height="10" sym:width="16" sym:x="7.4e1" sym:y="1.0e1">
						<rect fill="rgb(255,255,255)" height="10" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="4.57143" x="74" y="10"></rect>
						<rect fill="rgb(255,255,255)" height="10" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="4.57143" x="85.4286" y="10"></rect>
						<line stroke="rgb(0,0,0)" stroke-width="1" x1="76.2857" x2="87.7143" y1="15" y2="15"></line>
					</g>
				</svg>
			</icon>
		</object>
		<object id="Object_FunctionConnectors_user_3617358799" type="Object_FunctionConnectors_user_3617358799" typeName="FunctionConnectors">
			<description>FunctionConnectors is used to combine several function connectors for a single allocation.</description>
			<slot id="lwd3hr" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="lxd3p1" name="Short name" unique="false">
				<property href="#Property_ConnectorName_user_3400146143"></property>
			</slot>
			<slot id="lyd3rg" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="m0d3xe" name="FunctionConnectors" unique="false">
				<property type="Property_FunctionConnectors_user_3617358865" typeName="FunctionConnectors">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<relationship href="#Relationship__FunctionConnector_sysadmin_3616758846"></relationship>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<relationship href="#Relationship_Power_user_3461401495"></relationship>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="lzd3s6" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="40,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="40,60 185,60 185,130 40,130 40,60" targetPointX="112.5" targetPointY="95" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="130" version="1.2" width="185" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="rgb(128,128,128)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="145" x="40" y="60">
						ReportTextSource:newline
id 
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="rgb(128,128,128)" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="145" x="40" y="60">
						ReportTextSource:newline newline
dowhile :FunctionConnectors {
	if id = '' then '?' else id endif
	' &lt;' type '&gt;' newline
}
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="35" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,60" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 85,0" startDistance="5"></layoutPath>
						</pathLayout>
						<noneNPSource></noneNPSource>
						<librarySubsymbolSource>FunctionConnectors_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
				</svg>
			</objectSymbol>
			<icon offset="35,16" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="36" version="1.2" width="70" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="10" x="35" y="16"></rect>
					<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="10" x="60" y="16"></rect>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="65" y1="26" y2="26"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="65" y1="20" y2="20"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="65" y1="32" y2="32"></line>
				</svg>
			</icon>
		</object>
		<object id="Object_HardwareComponentPrototype_sysadmin_3537086313" type="Object_HardwareComponentPrototype_sysadmin_3537086313" typeName="HardwareComponentPrototype">
			<description>HardwareComponentPrototype presents an element of the hardware architecture. Its type is set in the subgraph and can be one of the following:
The Actuator prototype is the element that represents electrical actuators, such as valves, motors, lamps, brake units, etc. It refers to the type definition via decomposed submodel.
The Node protototype represents an ECU, i.e. an Electronic Control Unit, and an allocation target of FunctionPrototypes. Node represents the computer nodes of the embedded electrical/electronic system. Nodes consist of processor(s) and may be connected to sensors, actuators and other ECUs via a BusConnector. It refers to the type definition via decomposed submodel.
ElectricalComponent prototype represents a hardware element that supplies power. It refers to the type definition via decomposed submodel.
Sensor prototype represents a hardware entity for digital or analog sensor elements. It refers to the type definition via decomposed submodel.</description>
			<slot id="jb99xd" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="j9s2gp" name="Short name" unique="false">
				<property id="Property_2ECUName_user_3310972947" type="Property_2ECUName_user_3310972947" typeName="ModelName">
					<description>Name is a mandatory property value.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>.+</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="jc99xn" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="jas2ht" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif
do decompositions {
	_EAST-ADL_nameTranslator()
	do :Type {': ' :Short name; ' &lt;' type;%NoType '&gt;'}
}</identReport>
			<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="220,30 220,150 40,150 40,30 220,30" targetPointX="130" targetPointY="90" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="151" version="1.2" width="220" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient3" sym:correctGamma="true" x1="0.0588242" x2="1" y1="0.0803579" y2="0.991072">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(192,192,255)"></stop>
						</linearGradient>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.0588242" x2="1" y1="0.0803579" y2="0.991072">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(224,255,224)"></stop>
						</linearGradient>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient2" sym:correctGamma="true" x1="0.164707" x2="0.964705" y1="-0.0624992" y2="0.991072">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="0.835547" stop-color="rgb(255,225,196)"></stop>
							<stop offset="1" stop-color="rgb(255,175,96)"></stop>
						</linearGradient>
					</defs>
					<g fill="none" stroke="none" stroke-width="1" sym:height="120" sym:width="180" sym:x="4.0e1" sym:y="3.1e1">
						<rect fill="rgb(240,240,240)" height="120" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="40" y="31">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="40" y="31">
							ReportTextSource:subreport '_sym_isactive' run
newline
newline
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</textArea>
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="ElectricalComponentType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_return type' run</displayCondition>
						</metaInfo>
					</g>
					<g fill="none" stroke="rgb(0,128,0)" stroke-width="1" sym:height="120" sym:width="180" sym:x="4.0e1" sym:y="3.1e1">
						<rect fill="url(#gradient1)" height="120" rx="10" ry="9" stroke="rgb(0,128,0)" stroke-width="1" width="180" x="40" y="31">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="NodeType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_return type' run</displayCondition>
						</metaInfo>
					</g>
					<g fill="none" stroke="none" stroke-width="1" sym:height="120" sym:width="180" sym:x="4.0e1" sym:y="3.0e1">
						<rect fill="url(#gradient2)" height="120" rx="0" ry="0" stroke="rgb(255,128,0)" stroke-width="1" width="180" x="40" y="30">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<textArea display-align="before" fill="rgb(255,128,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="180" x="40" y="30">
							ReportTextSource:newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</textArea>
						<textArea display-align="after" fill="rgb(255,128,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="180" x="40" y="30">
							ReportTextSource:'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</textArea>
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="SensorType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_return type' run</displayCondition>
						</metaInfo>
					</g>
					<g fill="none" stroke="rgb(0,0,255)" stroke-width="1" sym:height="120" sym:width="180" sym:x="4.0e1" sym:y="3.0e1">
						<rect fill="url(#gradient3)" height="120" rx="0" ry="0" stroke="rgb(0,0,255)" stroke-width="1" width="180" x="40" y="30">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<line stroke="rgb(0,0,255)" stroke-width="1" x1="43" x2="43" y1="30" y2="150">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</line>
						<line stroke="rgb(0,0,255)" stroke-width="1" x1="217" x2="217" y1="30" y2="150">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</line>
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="ActuatorType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_return type' run</displayCondition>
						</metaInfo>
					</g>
					<g fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="120" sym:width="180" sym:x="4.0e1" sym:y="3.0e1">
						<rect fill="rgb(255,255,255)" height="120" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="40" y="30">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="HardwareComponentType" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_return type' run</displayCondition>
						</metaInfo>
					</g>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symHDAInPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="220,30" startDistance="0">
							<layoutPath allocation="start" lastSelectedSegment="1" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symHDAOutPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symHDAInPorts()</generatorNPSource>
						<librarySubsymbolSource>id_left_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="true" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="220,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="39"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symHDAOutPorts()</generatorNPSource>
						<librarySubsymbolSource>id_right_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="130,40" startDistance="0">
							<layoutPath allocation="end" layoutDistance="25" lineSegmentTable="true" points="0,0 0,100" startDistance="5"></layoutPath>
						</pathLayout>
						<generatorNPSource>_SymAllocatedFunctions()</generatorNPSource>
						<librarySubsymbolSource>AllocatedFunction</librarySubsymbolSource>
						<metaInfo>
							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource::Show allocated prototypes;1</displayCondition>
						</metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,150" startDistance="0">
							<layoutPath allocation="start" layoutDistance="60" lineSegmentTable="true,true,true,true" points="0,0 180,0 180,-120 0,-120 0,0" startDistance="30"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symHDAInOutPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="60" subsymbolExtentY="40" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,150" startDistance="0">
							<layoutPath allocation="start" layoutDistance="60" lineSegmentTable="true,true,true,true" points="0,0 180,0 180,-120 0,-120 0,0" startDistance="30"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symHDAInOutPorts()</generatorNPSource>
						<librarySubsymbolSource>id_middle_HDA_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="8" sym:wordWrap="true" text-anchor="middle" width="180" x="40" y="30">
						ReportTextSource:if type;1 = 'SystemModel' then
	'Design Level' newline
endif
if :Name; then :Name; else :Short name; endif
if decompositions; then
	do decompositions {
		_EAST-ADL_nameTranslator()
		do :Type {': ' :Short name; ' &lt;' type;%NoType'&gt;'}
	}
else
	': HWComponentType undefined'
endif
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="50,40" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="130" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="90" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="150" x="50" y="40"></rect>
				</svg>
			</icon>
		</object>
		<object id="Object_LogicalBus_user_3460790250" type="Object_LogicalBus_user_3460790250" typeName="HardwarePortConnector">
			<description>The HardwarePortConnector represents a logical connection that carries data from any sender to all receivers.</description>
			<slot id="f4bzbe" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="f26mst" name="Short name" unique="false">
				<property href="#Property_2ECUName_user_3310972947"></property>
			</slot>
			<slot id="f5bz7k" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="ezxhlj" name="BusSpeed" unique="false">
				<property type="Property_BusSpeed_user_3460790187" typeName="BusSpeed">
					<description>The net bus speed in bits per second, this is a mandatory value.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>.+</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="f0xho4" name="BusType" unique="false">
				<property type="Property_LogicalBusKind_user_3460790234" typeName="HardwareBusKind">
					<description>HardwareBusKind is an enumeration type representing different kinds of busses.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>TimeTriggered</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>TimeTriggered</string>
						<string>EventTriggered</string>
						<string>TimeAndEventTriggered</string>
						<string>Other</string>
					</listValues>
				</property>
			</slot>
			<slot id="f1gnzh" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<slot id="f3fhun" name="Connectors" unique="false">
				<property type="Property_Wires_sysadmin_3529234703" typeName="Wires">
					<description>Collection of the wires using the HardwarePortConnector.</description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<relationship id="Relationship_ADLHwConnector_user_3400146152" type="Relationship_ADLHwConnector_user_3400146152" typeName="HardwareConnector">
							<description>Hardware connectors represent wires that electrically connect the hardware components through its pins.</description>
							<slot id="a8ccr2" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="a6y8f4" name="Short name" unique="false">
								<property href="#Property_ConnectorName_user_3400146143"></property>
							</slot>
							<slot id="a9ccs8" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="a7gny6" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<relationshipSymbol offset="70,45" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="113.326,60.05 110.163,63.1 107,60.05 110.163,57 113.326,60.05" targetPointX="110.163" targetPointY="60.05" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="75" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="110.163" cy="60.05" fill="rgb(0,0,0)" rx="0.162949" ry="0.0499992" stroke="rgb(0,0,0)" stroke-width="6" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="70" y="45">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="100,40" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="70" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="130" x2="100" y1="40" y2="70"></line>
									<ellipse cx="115.5" cy="55.5" fill="rgb(0,0,0)" rx="4.5" ry="4.5" stroke="rgb(0,0,0)" stroke-width="0" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
								</svg>
							</icon>
						</relationship>
					</contentsDataType>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="21,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="261,20 311,70 261,120 261,90 71,90 71,120 21,70 71,20 261,20" targetPointX="166" targetPointY="70" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="123" version="1.2" width="314" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(213,213,213)" points="74,53 264,53 264,23 314,73 264,123 264,93 74,93 74,123 24,73 74,23" stroke="rgb(213,213,213)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="190" x="71" y="20">
						ReportTextSource:_name()
if :BusType; then
	': ' :BusType;
endif
if :BusSpeed; then
	' [' :BusSpeed ']'
endif
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<polygon fill="rgb(240,240,240)" points="71,50 261,50 261,20 311,70 261,120 261,90 71,90 71,120 21,70 71,20" stroke="rgb(170,170,170)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="190" x="71" y="50">
						ReportTextSource:dowhile :Connectors { 
	if id = '' then '?' else id endif
	'; ' 
}
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="170,40" startDistance="0">
							<layoutPath allocation="end" layoutDistance="25" lineSegmentTable="true" points="0,0 0,70" startDistance="5"></layoutPath>
						</pathLayout>
						<generatorNPSource>_SymAllocatedFunctions()</generatorNPSource>
						<librarySubsymbolSource>AllocatedFunction</librarySubsymbolSource>
						<metaInfo>
							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource::Show allocated prototypes;1</displayCondition>
						</metaInfo>
					</template>
				</svg>
			</objectSymbol>
			<icon offset="30,60" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="160" version="1.2" width="320" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(240,240,240)" points="80,80 270,80 270,60 320,110 270,160 270,140 80,140 80,160 30,110 80,60" stroke="rgb(0,0,0)" stroke-width="2"></polygon>
				</svg>
			</icon>
		</object>
		<object id="Object_GenericConstraint_sysadmin_3564392202" type="Object_GenericConstraint_sysadmin_3564392202" typeName="GenericConstraint">
			<description>The GenericConstraint denotes a property, requirement, or a validation result for the identified element of the model.</description>
			<slot id="k495a2" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="jzakf4" name="Short name" unique="false">
				<property type="Property_GenericConstraintName_sysadmin_3564391664" typeName="GenericConstraintName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="k5959k" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="k1aqvu" name="Value" unique="false">
				<property type="Property_Value_sysadmin_3564395853" typeName="Value">
					<description></description>
					<dataType>
						<object type="Object_Value_sysadmin_3564395609" typeName="GenericConstraintValue">
							<description>Store typed values in the model. The semantics of this element is defined by the element typed by the corresponding datatype.</description>
							<slot id="k1aq55" name="Value" unique="false">
								<property type="Property_EAValue_sysadmin_3564395372" typeName="EAValue">
									<description></description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="k2aqh2" name="Type" unique="false">
								<property id="Property_type_sysadmin_3548118359" type="Property_type_sysadmin_3548118359" typeName="type">
									<description></description>
									<dataType>
										<object id="Object__EADatatype_sysadmin_3536996100" type="Object__EADatatype_sysadmin_3536996100" typeName="_EADatatype">
											<description></description>
											<slot id="a0o7eh" name="Name" unique="false">
												<property type="Property_EADatatypeName_sysadmin_3536996156" typeName="EADatatypeName">
													<description>EADatatype metaclass is a special kind of classifier, similar to a class. It differs from the class in that instances of a data type are identified only by their value.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
													<widget>Input Field</widget>
												</property>
											</slot>
											<identProp slotID="a0o7eh"></identProp>
											<icon offset="29,18" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="78" version="1.2" width="129" xmlns="http://www.w3.org/2000/svg">
													<rect fill="rgb(255,255,255)" height="60" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="100" x="29" y="18"></rect>
													<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="rgb(224,255,255)" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="100" x="29" y="18">DT</textArea>
												</svg>
											</icon>
										</object>
									</dataType>
									<dataTypeSubtype>
										<object id="Object_ArrayDatatype_sysadmin_3536999064" type="Object_ArrayDatatype_sysadmin_3536999064" typeName="ArrayDatatype">
											<description>ArrayDatatype is a datatype for an array of datatypes of the same type.</description>
											<superType>
												<object href="#Object__EADatatype_sysadmin_3536996100"></object>
											</superType>
											<slot id="a6obtp" name="MinLength" unique="false">
												<property type="Property_MinLength_sysadmin_3536999022" typeName="MinLength">
													<description></description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="a7obub" name="MaxLength" unique="false">
												<property type="Property_MaxLength_sysadmin_3536999033" typeName="MaxLength">
													<description></description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="a8obvv" name="Type" unique="false">
												<property id="Property_isOfType_sysadmin_3537003179" type="Property_isOfType_sysadmin_3537003179" typeName="isOfType">
													<description></description>
													<dataType>
														<object href="#Object__EADatatype_sysadmin_3536996100"></object>
													</dataType>
													<dataTypeSubtype>
														<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object id="Object_CompositeDatatype_sysadmin_3536998574" type="Object_CompositeDatatype_sysadmin_3536998574" typeName="CompositeDatatype">
															<description>A CompositeDatatype represents a non-scalar datatype. The contained datatypePrototypes act as record variables to identify the ordered datatype instances of the tuple (the CompositeDatatype).</description>
															<superType>
																<object href="#Object__EADatatype_sysadmin_3536996100"></object>
															</superType>
															<slot id="a0obqc" name="DatatypePrototypes" unique="false">
																<property type="Property_DatatypePrototypes_sysadmin_3536998962" typeName="DatatypePrototypes">
																	<description></description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<object id="Object_EADatatypePrototype_sysadmin_3536998910" type="Object_EADatatypePrototype_sysadmin_3536998910" typeName="EADatatypePrototype">
																			<description>The EADatatypePrototype represents a typed variable. It acts as an appearance of a datatype.</description>
																			<slot id="j22mmi" name="Name" unique="false">
																				<property href="#Property_2ECUName_user_3310972947"></property>
																			</slot>
																			<slot id="j1obmy" name="Type" unique="false">
																				<property href="#Property_isOfType_sysadmin_3537003179"></property>
																			</slot>
																			<identProp slotID="j22mmi"></identProp>
																			<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																				<defaultConnectable isSticky="true" points="40,30 210,30 210,130 40,130 40,30" targetPointX="125" targetPointY="80" usesGrid="false"></defaultConnectable>
																				<svg baseProfile="tiny" height="130" version="1.2" width="210" xmlns="http://www.w3.org/2000/svg">
																					<rect fill="rgb(192,192,255)" height="100" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="40" y="30">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</rect>
																					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="40" y="30">
																						ReportTextSource:type; newline
:Name; newline
:Type
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																				</svg>
																			</objectSymbol>
																			<icon offset="50,20" xmlns="http://www.metacase.com/icon">
																				<svg baseProfile="tiny" height="70" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
																					<rect fill="rgb(192,192,255)" height="50" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="50" x="50" y="20"></rect>
																				</svg>
																			</icon>
																		</object>
																	</contentsDataType>
																</property>
															</slot>
															<identProp slotID="a0o7eh"></identProp>
															<objectSymbol offset="60,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="60,40 230,40 230,150 60,150 60,40" targetPointX="145" targetPointY="95" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="152" version="1.2" width="233" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="63" y="42">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<rect fill="rgb(255,255,255)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="60" y="40">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="16" sym:width="16" sym:x="2.12e2" sym:y="4.2e1">
																		<rect fill="rgb(0,128,0)" height="16" rx="0" ry="4" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="212" y="42">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<rect fill="rgb(255,255,255)" height="11.4286" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="11.429" x="214.286" y="44.2857">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<rect fill="rgb(0,0,0)" height="4.5714" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="4.11401" x="217.943" y="47.7143">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="60" y="40">
																		ReportTextSource:type; newline
:Name
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="60" y="40">
																		ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="117,43" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="113" version="1.2" width="187" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(0,128,0)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="117" y="43"></rect>
																	<rect fill="rgb(255,255,255)" height="50" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="50" x="127" y="53"></rect>
																	<rect fill="rgb(0,0,0)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="18" x="143" y="68"></rect>
																</svg>
															</icon>
														</object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object id="Object_EABoolean_sysadmin_3536996172" type="Object_EABoolean_sysadmin_3536996172" typeName="EABoolean">
															<description>EABoolean is the primitive type that holds two literals: true, false.</description>
															<superType>
																<object href="#Object__EADatatype_sysadmin_3536996100"></object>
															</superType>
															<slot id="a0cure" name="value" unique="false">
																<property type="Property_value_user_3548488669" typeName="value">
																	<description></description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>false</string>
																	</defaultValue>
																	<widget>Radio Button Set</widget>
																	<listValues>
																		<string>true</string>
																		<string>false</string>
																	</listValues>
																</property>
															</slot>
															<identProp slotID="a0o7eh"></identProp>
															<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="30,30 200,30 200,140 30,140 30,30" targetPointX="115" targetPointY="85" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="142" version="1.2" width="203" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="33" y="32">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<rect fill="rgb(229,229,229)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="30" y="30">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="16" sym:width="16" sym:x="1.82e2" sym:y="3.2e1">
																		<rect fill="rgb(255,255,255)" height="16" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="182" y="32">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="16" sym:width="16" sym:x="1.82e2" sym:y="3.2e1">
																			<rect fill="rgb(96,96,96)" height="16" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="8" x="182" y="32">
																				<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																			</rect>
																			<rect fill="rgb(255,255,255)" height="16" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="8" x="190" y="32">
																				<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																			</rect>
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</g>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="30">
																		ReportTextSource:'Boolean'; newline
:Name
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="30" y="30">
																		ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="110,40" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="110" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,255)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="110" y="40"></rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="70" sym:width="70" sym:x="1.1e2" sym:y="4.0e1">
																		<rect fill="rgb(96,96,96)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="35" x="110" y="40"></rect>
																		<rect fill="rgb(255,255,255)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="35" x="145" y="40"></rect>
																	</g>
																</svg>
															</icon>
														</object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object id="Object_EANumerical_sysadmin_3536996437" type="Object_EANumerical_sysadmin_3536996437" typeName="EANumerical">
															<description>EANumerical has attributes for modeling of the allowed range.</description>
															<superType>
																<object href="#Object__EADatatype_sysadmin_3536996100"></object>
															</superType>
															<slot id="a3o7q9" name="Min" unique="false">
																<property type="Property_Min_sysadmin_3509699711" typeName="Min">
																	<description>The minimum value of the range. Decimal values should be specified with .</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<regex>(0x[0-9a-f]*)|(0[1-7][0-7]*)|(0b[0-1]*)|([+\-]?[0-9]+(\.[0-9]*)?(E([+\-]?)[0-9]*)?)</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a4o7qh" name="Max" unique="false">
																<property type="Property_Max_sysadmin_3509699706" typeName="Max">
																	<description>The maximal value of the range. Decimal values should be specified with .</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<regex>(0x[0-9a-f]*)|(0[1-7][0-7]*)|(0b[0-1]*)|([+\-]?[0-9]+(\.[0-9]*)?(E([+\-]?)[0-9]*)?)</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a5o8kn" name="Unit" unique="false">
																<property type="Property_Unit_sysadmin_3536996915" typeName="Unit">
																	<description>The unit of data.</description>
																	<dataType>
																		<object id="Object_Unit_sysadmin_3536996865" type="Object_Unit_sysadmin_3536996865" typeName="Unit">
																			<description>Unit descibes the unit of typed numerical values.</description>
																			<slot id="ino8c4" name="Name" unique="false">
																				<property type="Property_UnitName_sysadmin_3536996762" typeName="UnitName">
																					<description></description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="ioo8dh" name="Factor" unique="false">
																				<property type="Property_Factor_sysadmin_3536996786" typeName="Factor">
																					<description></description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="ipo8gu" name="Offset" unique="false">
																				<property type="Property_Offset_sysadmin_3536996847" typeName="Offset">
																					<description></description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="iqo8hn" name="Symbol" unique="false">
																				<property type="Property_Symbol_sysadmin_3536996861" typeName="Symbol">
																					<description></description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="iso97v" name="Quantity" unique="false">
																				<property type="Property_Quantity_sysadmin_3536997333" typeName="Quantity">
																					<description></description>
																					<dataType>
																						<object id="Object_Quantity_sysadmin_3536997304" type="Object_Quantity_sysadmin_3536997304" typeName="Quantity">
																							<description>The Quantity describes a physical dimension for use in numerical datatypes and expressions to facilitate dimension consistency and control.</description>
																							<slot id="iso8rx" name="Name" unique="false">
																								<property type="Property_QuantityName_sysadmin_3536997046" typeName="QuantityName">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string></string>
																									</defaultValue>
																									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="ito8vg" name="AmountOfSubstanceExp" unique="false">
																								<property type="Property_AmountOfSubstanceExp_sysadmin_3536997110" typeName="AmountOfSubstanceExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="iuo8wk" name="ElectricCurrentExp" unique="false">
																								<property type="Property_ElectricCurrentExp_sysadmin_3536997130" typeName="ElectricCurrentExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="ivo8xt" name="LengthExp" unique="false">
																								<property type="Property_LengthExp_sysadmin_3536997152" typeName="LengthExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="iwo8zy" name="LuminousIntensityExp" unique="false">
																								<property type="Property_LuminousIntensityExp_sysadmin_3536997191" typeName="LuminousIntensityExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="ixo90o" name="MassExp" unique="false">
																								<property type="Property_MassExp_sysadmin_3536997204" typeName="MassExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="iyo92b" name="ThermodynamicTemperatureExp" unique="false">
																								<property type="Property_ThermodynamicTemperatureExp_sysadmin_3536997233" typeName="ThermodynamicTemperatureExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<slot id="izo92u" name="TimeExp" unique="false">
																								<property type="Property_TimeExp_sysadmin_3536997243" typeName="TimeExp">
																									<description></description>
																									<dataType>
																										<simpleType>String</simpleType>
																									</dataType>
																									<defaultValue>
																										<string>0</string>
																									</defaultValue>
																									<widget>Input Field</widget>
																								</property>
																							</slot>
																							<identProp slotID="iso8rx"></identProp>
																							<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																								<defaultConnectable isSticky="true" points="30,20 211,20 211,160 30,160 30,20" targetPointX="120.5" targetPointY="90" usesGrid="true"></defaultConnectable>
																								<svg baseProfile="tiny" height="163" version="1.2" width="213" xmlns="http://www.w3.org/2000/svg">
																									<rect fill="rgb(213,213,213)" height="140" rx="0" ry="0" stroke="rgb(213,213,213)" stroke-width="1" width="180" x="33" y="23">
																										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																									</rect>
																									<rect fill="rgb(248,240,255)" height="140" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="181" x="30" y="20">
																										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																									</rect>
																									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="140" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="181" x="30" y="20">
																										ReportTextSource:type; newline
:Short name;
																										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																									</textArea>
																									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="140" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="181" x="30" y="20">
																										ReportTextSource:_dataTypeDetails()
																										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																									</textArea>
																								</svg>
																							</objectSymbol>
																							<icon offset="40,30" xmlns="http://www.metacase.com/icon">
																								<svg baseProfile="tiny" height="70" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
																									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="40" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="rgb(248,240,255)" sym:textboxStroke="rgb(0,0,0)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="40" y="30">Q</textArea>
																								</svg>
																							</icon>
																						</object>
																					</dataType>
																				</property>
																			</slot>
																			<slot id="iro8n6" name="UnitReference" unique="false">
																				<property type="Property_UnitReference_sysadmin_3536996961" typeName="UnitReference">
																					<description></description>
																					<dataType>
																						<object href="#Object_Unit_sysadmin_3536996865"></object>
																					</dataType>
																				</property>
																			</slot>
																			<identProp slotID="ino8c4"></identProp>
																			<objectSymbol offset="50,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																				<defaultConnectable isSticky="true" points="50,30 220,30 220,150 50,150 50,30" targetPointX="135" targetPointY="90" usesGrid="true"></defaultConnectable>
																				<svg baseProfile="tiny" height="152" version="1.2" width="222" xmlns="http://www.w3.org/2000/svg">
																					<rect fill="rgb(170,170,170)" height="120" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="52" y="32">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</rect>
																					<rect fill="rgb(255,224,255)" height="120" rx="0" ry="0" stroke="rgb(128,0,128)" stroke-width="1" width="170" x="50" y="30">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</rect>
																					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="50" y="30">
																						ReportTextSource:type; newline
:Short name;
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="50" y="30">
																						ReportTextSource:_dataTypeDetails()
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																				</svg>
																			</objectSymbol>
																			<icon offset="70,40" xmlns="http://www.metacase.com/icon">
																				<svg baseProfile="tiny" height="80" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
																					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="40" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="rgb(255,224,255)" sym:textboxStroke="rgb(128,0,128)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="70" y="40">U</textArea>
																				</svg>
																			</icon>
																		</object>
																	</dataType>
																</property>
															</slot>
															<identProp slotID="a0o7eh"></identProp>
															<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="30,30 200,30 200,140 30,140 30,30" targetPointX="115" targetPointY="85" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="142" version="1.2" width="203" xmlns="http://www.w3.org/2000/svg">
																	<defs>
																		<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="PathFill">
																			<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="0.4" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="1" stop-color="rgb(160,160,255)"></stop>
																		</radialGradient>
																	</defs>
																	<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="33" y="32">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<rect fill="rgb(224,239,255)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="30" y="30">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<g fill="none" stroke="none" stroke-width="1" sym:height="16" sym:width="16" sym:x="1.82e2" sym:y="3.2e1">
																		<rect fill="url(#gradient1)" height="16" rx="8" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="182" y="32">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="16" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="16" x="182" y="32">
																			1
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</textArea>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="30">
																		ReportTextSource:'Numerical'; newline
:Name
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="30" y="30">
																		ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="100,60" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="130" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
																	<defs>
																		<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="PathFill">
																			<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="0.4" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="1" stop-color="rgb(160,160,255)"></stop>
																		</radialGradient>
																	</defs>
																	<rect fill="url(#gradient1)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="100" y="60"></rect>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="80" font-style="normal" font-weight="bold" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="100" y="60">1</textArea>
																</svg>
															</icon>
														</object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object id="Object_EAString_sysadmin_3536996221" type="Object_EAString_sysadmin_3536996221" typeName="EAString">
															<description>EAString is the primitive type that defines a sequence of characters in some suitable character set used to display information.</description>
															<superType>
																<object href="#Object__EADatatype_sysadmin_3536996100"></object>
															</superType>
															<identProp slotID="a0o7eh"></identProp>
															<objectSymbol offset="50,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="49.75,50.75 220,50.75 220,161 49.75,161 49.75,50.75" targetPointX="134.875" targetPointY="105.875" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="163" version="1.2" width="223" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="53" y="53">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<rect fill="rgb(239,255,224)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="50" y="51">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<g fill="none" stroke="none" stroke-width="1" sym:height="15" sym:width="16" sym:x="2.02e2" sym:y="5.2e1">
																		<rect fill="rgb(0,128,0)" height="14" rx="0" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="202" y="53">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<textArea display-align="before" fill="rgb(255,255,255)" font-family="#fixed" font-size="15" font-style="normal" font-weight="bold" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="16" x="202" y="52">
																			C
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</textArea>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="50" y="50">
																		ReportTextSource:'String'; newline
:Name
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="50" y="50">
																		ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="100,50" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="130" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(0,128,0)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="100" y="60"></rect>
																	<textArea display-align="before" fill="rgb(255,255,255)" font-family="#fixed" font-size="88" font-style="normal" font-weight="bold" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="100" y="50">C</textArea>
																</svg>
															</icon>
														</object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object id="Object_Enumeration_sysadmin_3536996326" type="Object_Enumeration_sysadmin_3536996326" typeName="Enumeration">
															<description>Enumeration is a kind of datatype, whose instances may be any number &gt; 1 of user-defined enumeration literals. Enumerations contain at least two literals, otherwise it would be a constant. The contained literals need to be ordered.</description>
															<superType>
																<object href="#Object__EADatatype_sysadmin_3536996100"></object>
															</superType>
															<slot id="a1o7m9" name="IsMultiValued" unique="false">
																<property type="Property_IsMultiValued_sysadmin_3509699158" typeName="IsMultiValued">
																	<description>This boolean attribute is true, if multiple enumeration values can be selected. It is false, if only one enumeration value is allowed to be selected.</description>
																	<dataType>
																		<simpleType>Boolean</simpleType>
																	</dataType>
																	<defaultValue></defaultValue>
																</property>
															</slot>
															<slot id="a2o7nd" name="Literals" unique="false">
																<property type="Property_Literals_sysadmin_3509696318" typeName="Literals">
																	<description>Collection of literals (value) of the enumeration.</description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<simpleType>String</simpleType>
																	</contentsDataType>
																</property>
															</slot>
															<identProp slotID="a0o7eh"></identProp>
															<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="30,30 200,30 200,140 30,140 30,30" targetPointX="115" targetPointY="85" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="142" version="1.2" width="203" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="33" y="32">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<rect fill="rgb(240,240,240)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="30" y="30">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="16" sym:width="16" sym:x="1.82e2" sym:y="3.2e1">
																		<rect fill="rgb(229,229,229)" height="16" rx="0" ry="8" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="182" y="32">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<g fill="none" stroke="rgb(0,0,0)" sym:height="4" sym:width="12.857" sym:x="1.84e2" sym:y="3.49714e1">
																			<ellipse cx="186" cy="36.9714" fill="rgb(0,0,0)" rx="2" ry="2" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
																				<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																			</ellipse>
																			<line stroke="rgb(0,0,0)" stroke-width="4" x1="190" x2="196.857" y1="36.9714" y2="36.9714">
																				<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																			</line>
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</g>
																		<g fill="none" stroke="rgb(0,0,0)" sym:height="4" sym:width="12.857" sym:x="1.84e2" sym:y="4.1e1">
																			<ellipse cx="186" cy="43" fill="rgb(0,0,0)" rx="2" ry="2" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
																				<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																			</ellipse>
																			<line stroke="rgb(0,0,0)" stroke-width="4" x1="190" x2="196.857" y1="43" y2="43">
																				<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																			</line>
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</g>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="30">
																		ReportTextSource:type; newline
:Name
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="30" y="30">
																		ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="143,41" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="111" version="1.2" width="213" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(229,229,229)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="143" y="41"></rect>
																	<ellipse cx="158" cy="64" fill="rgb(0,0,0)" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																	<ellipse cx="158" cy="94" fill="rgb(0,0,0)" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																	<line stroke="rgb(0,0,0)" stroke-width="5" x1="178" x2="208" y1="64" y2="64"></line>
																	<line stroke="rgb(0,0,0)" stroke-width="5" x1="178" x2="208" y1="94" y2="94"></line>
																</svg>
															</icon>
														</object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object id="Object_RangeableValueType_sysadmin_3536997383" type="Object_RangeableValueType_sysadmin_3536997383" typeName="RangeableValueType">
															<description>The RangeableValueType adds the ability to describe the accuracy, resolution, and the significant digits of the baseRangeable datatype.</description>
															<superType>
																<object href="#Object__EADatatype_sysadmin_3536996100"></object>
															</superType>
															<slot id="a0o9f8" name="Accuracy" unique="false">
																<property type="Property_Accuracy_sysadmin_3509699452" typeName="Accuracy">
																	<description>The accuracy of the data (e.g., the FunctionFlowports input or output).</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a1o9fi" name="Resolution" unique="false">
																<property type="Property_Resolution_sysadmin_3509699465" typeName="Resolution">
																	<description>The resolution of the data expressed as the size of the minimum difference between data values.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a2o9g3" name="SignificantDigits" unique="false">
																<property type="Property_SignificantDigits_sysadmin_3509699527" typeName="SignificantDigits">
																	<description>SignificantDigits must be positive interger number.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>0</string>
																	</defaultValue>
																	<regex>\d+</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a3ob1l" name="BaseRangeable" unique="false">
																<property type="Property_BaseRangeable_sysadmin_3536998516" typeName="BaseRangeable">
																	<description>The datatype with additional attributes specified by this concept.</description>
																	<dataType>
																		<object href="#Object_EANumerical_sysadmin_3536996437"></object>
																	</dataType>
																</property>
															</slot>
															<identProp slotID="a0o7eh"></identProp>
															<objectSymbol offset="40,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="40,50 210,50 210,160 40,160 40,50" targetPointX="125" targetPointY="105" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="162" version="1.2" width="213" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="43" y="52">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<rect fill="rgb(255,255,224)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="40" y="50">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<g fill="none" stroke="rgb(0,0,0)" sym:height="16" sym:width="16" sym:x="1.91e2" sym:y="5.2e1">
																		<rect fill="rgb(255,255,255)" height="16" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="191" y="52">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</rect>
																		<polygon fill="rgb(0,0,0)" points="202.429,60 207,56.5714 207,63.4286" stroke="rgb(0,0,0)" stroke-width="0">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</polygon>
																		<polygon fill="rgb(0,0,0)" points="195.571,60 191,56.5714 191,63.4286" stroke="rgb(0,0,0)" stroke-width="0">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</polygon>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="40" y="50">
																		ReportTextSource:type; newline
:Name
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="40" y="50">
																		ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="113,47" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="117" version="1.2" width="183" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,255)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="113" y="47"></rect>
																	<polygon fill="rgb(0,0,0)" points="163,82 183,67 183,97" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
																	<polygon fill="rgb(0,0,0)" points="133,82 113,67 113,97" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
																</svg>
															</icon>
														</object>
													</dataTypeSubtype>
												</property>
											</slot>
											<identProp slotID="a0o7eh"></identProp>
											<objectSymbol offset="40,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="40,40 210,40 210,150 40,150 40,40" targetPointX="125" targetPointY="95" usesGrid="false"></defaultConnectable>
												<svg baseProfile="tiny" height="152" version="1.2" width="212" xmlns="http://www.w3.org/2000/svg">
													<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="42" y="42">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<rect fill="rgb(255,255,179)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="40" y="40">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="16" sym:width="16" sym:x="1.92e2" sym:y="4.2e1">
														<rect fill="rgb(255,255,179)" height="16" rx="0" ry="4" stroke="rgb(0,0,0)" stroke-width="1" width="16" x="192" y="42">
															<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
														</rect>
														<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="3" sym:width="13.514" sym:x="1.93143e2" sym:y="4.81714e1">
															<rect fill="rgb(0,0,0)" height="3" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="193.143" y="48.1714">
																<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
															</rect>
															<rect fill="rgb(0,0,0)" height="3" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="198.4" y="48.1714">
																<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
															</rect>
															<rect fill="rgb(0,0,0)" height="3" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="203.657" y="48.1714">
																<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
															</rect>
															<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
														</g>
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</g>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="40" y="40">
														ReportTextSource:type; newline
:Name
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="40" y="40">
														ReportTextSource:newline; newline;
do :() where id&lt;&gt; id;1 {
	type ': ' id newline
}
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
												</svg>
											</objectSymbol>
											<icon offset="117,43" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="113" version="1.2" width="187" xmlns="http://www.w3.org/2000/svg">
													<rect fill="rgb(255,255,179)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="117" y="43"></rect>
													<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="15" sym:width="61" sym:x="1.22e2" sym:y="7.0e1">
														<rect fill="rgb(0,0,0)" height="15" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="15" x="122" y="70"></rect>
														<rect fill="rgb(0,0,0)" height="15" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="15" x="145" y="70"></rect>
														<rect fill="rgb(0,0,0)" height="15" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="15" x="168" y="70"></rect>
													</g>
												</svg>
											</icon>
										</object>
									</dataTypeSubtype>
									<dataTypeSubtype>
										<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
									</dataTypeSubtype>
									<dataTypeSubtype>
										<object href="#Object_EABoolean_sysadmin_3536996172"></object>
									</dataTypeSubtype>
									<dataTypeSubtype>
										<object href="#Object_EANumerical_sysadmin_3536996437"></object>
									</dataTypeSubtype>
									<dataTypeSubtype>
										<object href="#Object_EAString_sysadmin_3536996221"></object>
									</dataTypeSubtype>
									<dataTypeSubtype>
										<object href="#Object_Enumeration_sysadmin_3536996326"></object>
									</dataTypeSubtype>
									<dataTypeSubtype>
										<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
									</dataTypeSubtype>
								</property>
							</slot>
							<identReport>:Value ': ' :Type</identReport>
						</object>
					</dataType>
				</property>
			</slot>
			<slot id="k0al6l" name="Kind" unique="false">
				<property type="Property_GenericConstraintKind_sysadmin_3564392158" typeName="GenericConstraintKind">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>other</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>cableLength</string>
						<string>current</string>
						<string>developmentCost</string>
						<string>functionAllocationDifferentHW</string>
						<string>functionAllocationSameHW</string>
						<string>impedance</string>
						<string>insulation</string>
						<string>memory</string>
						<string>nonVolatileMemory</string>
						<string>other</string>
						<string>pieceCost</string>
						<string>powerConsumption</string>
						<string>powerSupplyIndependent</string>
						<string>realizationDifferent</string>
						<string>realizationSame</string>
						<string>spaceRedundancy</string>
						<string>standard</string>
						<string>timeRedundancy</string>
						<string>utilization</string>
						<string>volatileMemory</string>
						<string>voltage</string>
						<string>weight</string>
					</listValues>
				</property>
			</slot>
			<slot id="k2aoyn" name="Modes" unique="false">
				<property id="Property_Modes_sysadmin_3543224568" type="Property_Modes_sysadmin_3543224568" typeName="Modes">
					<description>The mode(s) where this requirement is valid.</description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object id="Object_Mode_sysadmin_3509262593" type="Object_Mode_sysadmin_3509262593" typeName="Mode">
							<description>Modes are a way to introduce various configurations in the system to account for different states of the system, or of a hardware entity, or an application. The use of modes can be used to filter different views of the model. Modes are characterized by a Boolean condition provided as a String, which evaluates to true when the Mode is active. The Mode is active if and only if the condition is true.</description>
							<slot id="hvn6km" name="Mode name" unique="false">
								<property id="Property_Mode_name_sysadmin_3509258627" type="Property_Mode_name_sysadmin_3509258627" typeName="Mode name">
									<description></description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="hxn6oj" name="Condition" unique="false">
								<property id="Property_Condition_sysadmin_3509258696" type="Property_Condition_sysadmin_3509258696" typeName="Condition">
									<description>A Boolean expression that characterizes the Mode, it evaluates to true when the Mode is active. The syntax and grammar of this expression is unspecified.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="hwn6kv" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identProp slotID="hvn6km"></identProp>
							<objectSymbol offset="90,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="230,80 229.239,83.8268 227.071,87.0711 223.827,89.2388 220,90 99.75,90 95.9232,89.2388 92.6789,87.0711 90.5112,83.8268 89.75,80 89.75,59.75 90.5112,55.9232 92.6789,52.6789 95.9232,50.5112 99.75,49.75 220,49.75 223.827,50.5112 227.071,52.6789 229.239,55.9232 230,59.75 230,80" targetPointX="159.875" targetPointY="69.875" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="90" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(192,224,255)" height="40" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="140" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="90" y="50">
										PropertyTextSource:hvn6km
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="136" x="94" y="50">
										Mode
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
						</object>
					</contentsDataType>
				</property>
			</slot>
			<slot id="k8q353" name="TargetTypes" unique="false">
				<property type="Property_TargetTypes_sysadmin_3615142195" typeName="TargetTypes">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<graph href="#__Graph"></graph>
					</contentsDataType>
				</property>
			</slot>
			<slot id="k6l5tr" name="TargetObjects" unique="false">
				<property type="Property_TargetObjects_sysadmin_3615027295" typeName="TargetObjects">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#__Object"></object>
					</contentsDataType>
				</property>
			</slot>
			<slot id="k7l5us" name="TargetRelationships" unique="false">
				<property type="Property_TargetRelationships_sysadmin_3615027314" typeName="TargetRelationships">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<relationship href="#__Relationship"></relationship>
					</contentsDataType>
				</property>
			</slot>
			<slot id="k3ar1f" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif
'=' :Value ' [' :Kind ']'</identReport>
			<objectSymbol offset="35,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="40,20 170,20 170,120 40,120 40,20" targetPointX="105" targetPointY="70" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="120" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="100" rx="0" ry="0" stroke="rgb(128,128,128)" stroke-dasharray="4,2" stroke-width="1" width="130" x="40" y="20">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="130" x="40" y="20">
						ReportTextSource:id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<polygon fill="rgb(0,0,0)" points="37.5,30 35,30 37.5,20 40,30 37.5,30 37.5,110 40,110 37.5,120 35,110 37.5,110" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="true" text-anchor="start" width="130" x="40" y="20">
						ReportTextSource:if :Value; then newline 'Value: ' :Value; endif
if :Kind; then newline 'Kind: ' :Kind;  endif
if :Modes; then newline 'Modes: ' dowhile :Modes { id ', '} endif
if :TargetTypes; or :TargetObjects; or :TargetRelationships; then 
	newline
	@sep = ''
	'Target: '
	do :TargetTypes { @sep id @sep = ', ' }
	do :TargetObjects { @sep id @sep = ', '  }
	do :TargetRelationships {@sep id @sep = ', '  }
endif
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="50,20" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="120" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="100" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="100" x="50" y="20"></rect>
					<polygon fill="rgb(0,0,0)" points="100,30 90,30 100,20 110,30 100,30 100,110 110,110 100,120 90,110 100,110" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</object>
		<relationship id="Relationship_Function_allocation_user_3492975971" type="Relationship_Function_allocation_user_3492975971" typeName="FunctionAllocation">
			<description>Function Allocation specifies the mapping between a design function and hardware component.</description>
			<icon offset="87,20" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="83" version="1.2" width="138" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.480392" cy="0.277778" gradientUnits="objectBoundingBox" id="gradient1" r="0.889717" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,224,224)"></stop>
							<stop offset="1" stop-color="rgb(224,0,0)"></stop>
						</radialGradient>
					</defs>
					<polygon fill="url(#gradient1)" points="87,35.75 87,27.875 93.375,20 99.75,20 112.5,35.75 125.25,20 131.625,20 138,27.875 138,35.75 125.25,51.5 138,67.25 138,75.125 131.625,83 125.25,83 112.5,67.25 99.75,83 93.375,83 87,75.125 87,67.25 99.75,51.5" stroke="rgb(0,0,0)" stroke-width="2"></polygon>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_Comment_user_3460793460" type="Relationship_Comment_user_3460793460" typeName="Comment">
			<description>Comment creates a link between comment or constraint and other design element.</description>
			<icon offset="104,34" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="60" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="130" x2="104" y1="34" y2="60"></line>
				</svg>
			</icon>
		</relationship>
		<role id="Role_Function_allocation_user_3492975505" type="Role_Function_allocation_user_3492975505" typeName="InstanceRef">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,128)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_Target_user_3401015012" type="Role_Target_user_3401015012" typeName="Target">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,128)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="149" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(0,0,128)" points="149,80 134,75 139,80 134,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_Comment_user_3460793566" type="Role_Comment_user_3460793566" typeName="Comment">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(128,64,64)" stroke-dasharray="1,1" stroke-width="2">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_FunctionConnector_sysadmin_3616759841"></object>
				<object href="#Object_FunctionConnectors_user_3617358799"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_LogicalBus_user_3460790250"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_FunctionConnector_sysadmin_3616759841"></object>
				<object href="#Object_FunctionConnectors_user_3617358799"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_LogicalBus_user_3460790250"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Function_allocation_user_3492975971"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Function_allocation_user_3492975505"></role>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
			</connection>
			<connection>
				<cardinality start="0" stop="N"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Target_user_3401015012"></role>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Function_allocation_user_3492975971"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Function_allocation_user_3492975505"></role>
				<object href="#Object_FunctionConnector_sysadmin_3616759841"></object>
				<object href="#Object_FunctionConnectors_user_3617358799"></object>
			</connection>
			<connection>
				<cardinality start="0" stop="N"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Target_user_3401015012"></role>
				<object href="#Object_LogicalBus_user_3460790250"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Function_allocation_user_3492975971"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Target_user_3401015012"></role>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
			</connection>
			<connection>
				<cardinality start="0" stop="N"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Function_allocation_user_3492975505"></role>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Function_allocation_user_3492975971"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Target_user_3401015012"></role>
				<object href="#Object_LogicalBus_user_3460790250"></object>
			</connection>
			<connection>
				<cardinality start="0" stop="N"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Function_allocation_user_3492975505"></role>
				<object href="#Object_FunctionConnector_sysadmin_3616759841"></object>
				<object href="#Object_FunctionConnectors_user_3617358799"></object>
			</connection>
		</binding>
		<report>
			Report '!Allocation report'
foreach .(^DesignFunctionPrototype | ^FunctionConnector*)
{	
	if type = 'HardwarePortConnector' then
		id ' &lt;HardwarePortConnector&gt;'
	else
		id 
	endif
	newline
	$found = 'F'
	do decompositions 
	{
		foreach .(*PinIn)  { $found = 'T' }
	}
	if $found = 'T' then 
		'	has following In pins:' newline
		do decompositions {
			foreach .(*PinIn) orderby y num { '		' id ' &lt;' type '&gt;' newline	}
		}
	endif
	$found = 'F'
	do decompositions 
	{
		foreach .(*PinOut)  { $found = 'T' }
	}
	if $found = 'T' then 
		'	has following Out pins:'	newline
		do decompositions 
		{
			foreach .(*PinOut) orderby y num { '		' id ' &lt;' type '&gt;' newline }
		}
	endif
	$found = 'F'
	do decompositions 
	{
		foreach .(*PinInOut)  { $found = 'T' }
	}
	if $found = 'T' then 
		'	has following InOut pins:'	newline
		do decompositions 
		{
			foreach .(*PinInOut) orderby y num { '		' id ' &lt;' type '&gt;' newline }
		}
	endif
	if ~() then 
		do ~Target~InstanceRef.DesignFunctionPrototype	
		{
			' --&gt; allocated DesignFunctionPrototype: '
			id 
			newline

			$found = 'F'
			do decompositions { foreach .(InFlowPort | ServerPort ) { $found = 'T' }	}
			if $found = 'T'; then 
				'	which has following In ports:'	newline
				do decompositions 
				{
					foreach .(InFlowPort | ServerPort ) orderby y num 
					{
						'		' id ' &lt;' type '&gt;' newline	
					}
				}
			endif
		
			$found = 'F'
			do decompositions 
			{ 
				foreach .(OutFlowPort | ClientPort ) { $found = 'T' }	
			}
			if $found = 'T'; then 
				'	which has following Out ports:'	newline
				do decompositions 
				{
					foreach .(OutFlowPort | ClientPort ) orderby y num 
					{
						'		' id ' &lt;' type '&gt;' newline	
					}
				}
			endif
		
			$found = 'F'
			do decompositions 
			{
				foreach .(InOutFlowPort | PowerPort) { $found = 'T' }	
			}
			if $found = 'T'; then 
				'	which has following ports with both directions:'	newline
				do decompositions 
				{
					foreach .(InOutFlowPort | PowerPort) orderby y num {'		' id ' &lt;' type '&gt;' newline	}
				}
			endif
			$found = 'F'
		}
		do ~Target~InstanceRef.(FunctionConnector*)	
		{
			if type = 'FunctionConnector' then
				' --&gt; allocated FunctionConnector: '
				id 
			else
				' --&gt; allocated FunctionConnectors via ' id ': '
				dowhile :FunctionConnectors {
					id ' &lt;' type '&gt;, '
				}
				'&gt;'
			endif
			newline
		}
	else
		' --&gt; does not have any allocated DesignFunctionPrototypes or FunctionConnectors' newline
	endif
	'=================================' newline
}
endreport
			<icon offset="62,36" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="91" version="1.2" width="117" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.333333" x2="0.966667" y1="0.666667" y2="0.0999997">
							<stop offset="0" stop-color="rgb(170,170,170)"></stop>
							<stop offset="0.266667" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(170,170,170)"></stop>
						</linearGradient>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient2" sym:correctGamma="true" x1="0.333333" x2="0.966667" y1="0.666667" y2="0.0999997">
							<stop offset="0" stop-color="rgb(170,170,170)"></stop>
							<stop offset="0.266667" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(170,170,170)"></stop>
						</linearGradient>
					</defs>
					<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="30" sym:width="30" sym:x="8.7e1" sym:y="3.6e1">
						<ellipse cx="102" cy="51" fill="url(#gradient1)" rx="15" ry="15" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
						<ellipse cx="102" cy="51" fill="rgb(255,255,255)" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
					</g>
					<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="30" sym:width="30" sym:x="6.2e1" sym:y="6.1e1">
						<ellipse cx="77" cy="76" fill="url(#gradient2)" rx="15" ry="15" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
						<ellipse cx="77" cy="76" fill="rgb(255,255,255)" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
					</g>
					<polygon fill="rgb(96,96,96)" points="98.5556,53 96.1111,53 79,70.25 79,73.125 81.4444,76 83.8889,76 101,58.75 101,55.875" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>
			!Check()
Check()
			<icon offset="79,68" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
							<stop offset="1" stop-color="rgb(0,192,0)"></stop>
						</radialGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
					<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>Check()
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'

/* Checking for legal path hierarchy */
_LegalTypePath()

_checkings()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No any warnings found!' newline
endif</report>
		<report>Report 'Double axis checking'
/* Following reports the mismatching types in each axis. It wont result the reused objects */
subreport '_translators' run
$type_of_object = ''
/* Y axis */
foreach .() where x = '0' orderby y
{	
	if $type_of_object = '' then 
		/* First object type of the axis */
		if type = 'DesignFunctionPrototype' or type = 'FunctionConnector' or type = 'FunctionConnectors' then
			$type_of_object = 'FunctionPrototype'
		else
			$type_of_object = 'HDA'
		endif
	else
		/* Rest of the object types */
		if type = 'DesignFunctionPrototype' or type = 'FunctionConnector' or type = 'FunctionConnectors' then
			$currentType = 'FunctionPrototype'
		else
			$currentType = 'HDA'
		endif
		/* Reporting */
		if $currentType &lt;&gt; $type_of_object then
			$yaxisError = 'Vertical Y-axis contains mixed types'
		endif
	endif
}

/* X axis */
$type_of_object = ''
foreach .() where y = '0' orderby x
{	
	if $type_of_object = '' then 
		/* First object type of the axis */
		if type = 'DesignFunctionPrototype' or type = 'FunctionConnector' or type = 'FunctionConnectors' then
			$type_of_object = 'FunctionPrototype'
		else
			$type_of_object = 'HDA'
		endif
	else
		/* Rest of the object types */
		if type = 'DesignFunctionPrototype' or type = 'FunctionConnector' or type = 'FunctionConnectors' then
			$currentType = 'FunctionPrototype'
		else
			$currentType = 'HDA'
		endif
		/* Reporting */
		if $currentType &lt;&gt; $type_of_object then
			$xaxisError = 'Horizontal X-axis contains mixed types'
		endif			
	endif
}

/* Reporting summary */
if $xaxisError; then 
	_reportWarnings()
	'Warning: ' $xaxisError; newline 
endif

if $yaxisError; then 
	_reportWarnings()
	'Warning: ' $yaxisError newline 
endif
endreport</report>
		<report>Software\ mappings()
_translators()
foreach .HardwareComponentPrototype; 
{	$runnables = ' ' /* functions allocated to same component, aka its runnables */
	do decompositions 
	{	do :Type { subreport '_AR' type run	} }
	_ARRunnables()
	_ARPorts()
	newline
}</report>
		<report>
			Report 'Unallocated'
subreport '_translators' run
_HardwareComponentsWithoutAllocations()
_Non-allocatedFunctions()
endreport
			<icon offset="115,45" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="84" version="1.2" width="154" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.358593" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(0,128,0)"></stop>
						</radialGradient>
					</defs>
					<ellipse cx="134.5" cy="64.5" fill="url(#gradient1)" rx="19.5" ry="19.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="3.6e2"></ellipse>
					<polygon fill="rgb(255,255,255)" points="141.927,52.48 139.862,53.934 136.143,57.5691 129.945,67.0204 127.052,63.0217 125.399,62.6582 122.92,64.4758 122.92,66.2933 126.226,68.8379 129.945,73.2 132.424,71.019 137.795,61.9312 140.688,58.6596 142.754,56.1151 144.82,54.6611 144.82,53.5705 143.58,52.48" stroke="rgb(255,255,255)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>_ARPorts()
'Connectors: ' newline
/* Reports only connected ports among prototypes, assembly not delegation */
/* dowhile #() {id ', '} if all ports should be reported, not just the connected ones */
/* Excludes ports which are not only among alloated functions, aka runnables */
@In = ''
@Out = ''
dowhile ~Target~InstanceRef.() {
	do graphs where type = 'DesignFunctionType' {
		foreach .DesignFunctionPrototype; where oid = oid;2 {
			local 'In' append
				dowhile ~(In*Port | ServerPort) { 
					do ~(Out*Port | ClientPort) {
						do .DesignFunctionPrototype {
							if not $runnables =~ oid%wildsp then /* not a port for internal use only */
								_ARPortDetails() 
							endif
						}
					}
					do ~() {
						do .(^DesignFunctionPrototype) {_ARPortDetails()}
					}
				}
			close
			local 'Out' append
				dowhile ~(Out*Port | ClientPort) { 
					do ~(In*Port | ServerPort) {
						do .DesignFunctionPrototype {
							if not $runnables =~ oid%wildsp then /* not a port for internal use only */
								_ARPortDetails() 
							endif
						}
					}
					do ~() {
						do .(^DesignFunctionPrototype) {_ARPortDetails()}
					}
				}								
			close
		}
	}
}
'	In: ' dowhile @In; where id &lt;&gt; '' orderby id unique id { id ', '}; newline
'	Out: ' dowhile @Out; where id &lt;&gt; '' orderby id unique id { id ', '}; newline</report>
		<report>_ARRunnables()
'Runnables: ' 
dowhile ~Target~InstanceRef.() { 
	:Short name; 
	variable 'runnables' append oid ' ' close
	', '
}
newline </report>
		<report>_checkings()
subreport 'Double axis checking' run
subreport 'Unallocated' run</report>
		<report>_DesignLevel\ with\ package\ structure()
/* Reporting the allocations */
if not $reported_models =~ oid%wildsp then
	variable 'reported_models' append oid ' ' close
	local 'AllocationName' write :Short name; close
	local 'AllocationShortName' write @AllocationName%toShortName close
	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- ALLOCATION name: '
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' @AllocationShortName ')'
	else
		@AllocationShortName
	endif
	' --&gt;' newline
	'&lt;ALLOCATION&gt;' newline	
	'&lt;SHORT-NAME&gt;' @AllocationShortName '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	'&lt;FUNCTION-ALLOCATIONS&gt;'
	foreach &gt;FunctionAllocation 
	{	
		$prototypeFoundAtTheEnd = ''
		do ~InstanceRef.() {
			$functionConnectors = ''
			if type =~ '*Prototype' then
				$prototypeFoundAtTheEnd = 'T'
			else
				if type = 'FunctionConnectors' then
					$functionConnectors = 'T'
				endif
				$prototypeFoundAtTheEnd = 'F'
			endif				
		}
		if $prototypeFoundAtTheEnd = 'T' then
			newline
			'&lt;FUNCTION-ALLOCATION&gt;' newline
			'&lt;SHORT-NAME&gt;' type;%var '_' oid '&lt;/SHORT-NAME&gt;' newline 
			_functionAllocation()	
			'&lt;/FUNCTION-ALLOCATION&gt;'
		else
			if $functionConnectors = '' then
				local 'connectorExists' write
					do ~InstanceRef.() { id }
				close
				if @connectorExists; then
					'&lt;FUNCTION-ALLOCATION&gt;' newline
					'&lt;SHORT-NAME&gt;' type;%var '_' oid '&lt;/SHORT-NAME&gt;' newline 
					_functionAllocation()	
					'&lt;/FUNCTION-ALLOCATION&gt;'
				endif
			else
				/* ObjectType is FunctionConnectors */
				_functionConnectors()
			endif
		endif
	} 
	'&lt;/FUNCTION-ALLOCATIONS&gt;' newline
	'&lt;/ALLOCATION&gt;' newline
endif</report>
		<report>Report '_functionAllocation'
/* Allocation relationships */
do ~InstanceRef.() { 
	'&lt;ALLOCATED-ELEMENT-IREF&gt;' newline
	local 'DFPTName' write 
		if type = 'DesignFunctionPrototype' then
			:Short name;
		endif
		if type = 'FunctionConnector' then
			do :Connector { :Short name; }
		endif
	close
	local 'DFPTShortName' write @DFPTName%toShortName close
	'&lt;!-- ' type%minus%upper ' name: ' @DFPTShortName ' --&gt;' newline
	'&lt;ALLOCATEABLE-ELEMENT-REF TYPE="' type%minus%upper '"&gt;' 
	if type &lt;&gt; 'FunctionConnector' then
		variable oid '_path' read
	else
		do :Connector { variable oid '_path' read }
	endif
	'&lt;/ALLOCATEABLE-ELEMENT-REF&gt;' newline
	'&lt;/ALLOCATED-ELEMENT-IREF&gt;' newline
}
/* Generating the Target role end */
do ~Target.() { _functionAllocationTarget() }
endreport</report>
		<report>_functionAllocationTarget()
/* Generating the TARGET-IREF section */
'&lt;TARGET-IREF&gt;' newline
local 'HWPTName' write :Short name; close
local 'HWPTShortName' write @HWPTName%toShortName close
'&lt;!-- ' type%minus%upper ' name: ' @HWPTShortName ' --&gt;' newline
'&lt;ALLOCATION-TARGET-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/ALLOCATION-TARGET-REF&gt;' newline
'&lt;/TARGET-IREF&gt;' newline
</report>
		<report>_functionConnectors()
/* Generating FunctionConnectors */
local 'hardwarePortConnectorOid' write
	do ~Target.HardwarePortConnector { oid }
close
do ~InstanceRef.() 
{ 
	do :FunctionConnectors 
	{ 
		newline
		'&lt;FUNCTION-ALLOCATION&gt;' newline
		'&lt;SHORT-NAME&gt;FunctionAllocation_' oid '_' @hardwarePortConnectorOid '&lt;/SHORT-NAME&gt;' newline 

		'&lt;ALLOCATED-ELEMENT-IREF&gt;' newline 
		local 'DFPTName' write :Short name;	close
		local 'DFPTShortName' write @DFPTName%toShortName close
		'&lt;!-- FUNCTION-CONNECTOR name: ' @DFPTShortName ' --&gt;' newline
		'&lt;ALLOCATEABLE-ELEMENT-REF TYPE="FUNCTION-CONNECTOR"&gt;' 
			variable oid '_path' read
		'&lt;/ALLOCATEABLE-ELEMENT-REF&gt;' newline
		'&lt;/ALLOCATED-ELEMENT-IREF&gt;' newline
		do ~Target;2.() { _functionAllocationTarget()}
		'&lt;/FUNCTION-ALLOCATION&gt;'
	}
}</report>
		<report>_HardwareComponentsWithoutAllocations()
foreach .(^DesignFunctionPrototype | ^FunctionConnector*) 
{
	if not ~() then
		_reportWarnings()
		'Warning: ' id ' does not have any allocated DesignFunctionPrototypes or FunctionConnectors' newline
	endif
}</report>
		<report>_Non-allocatedFunctions()
foreach .DesignFunctionPrototype 
{	if not ~() then
		_reportWarnings()
		'Warning: ' id ' is not allocated to any hardware component' newline
	endif
}</report>
		<constraints>
			<uniqueness>
				<object href="#Object_FunctionConnector_sysadmin_3616759841"></object>
				<propertyName>Connector</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_LogicalBus_user_3460790250"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
		</constraints>
		<icon offset="30,10" xmlns="http://www.metacase.com/icon">
			<svg baseProfile="tiny" height="70" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="30" x2="100" y1="20" y2="20"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="30" x2="100" y1="30" y2="30"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="30" x2="100" y1="40" y2="40"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="30" x2="100" y1="50" y2="50"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="30" x2="100" y1="60" y2="60"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="45" x2="45" y1="10" y2="70"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="65" x2="65" y1="10" y2="70"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="85" x2="85" y1="10" y2="70"></line>
			</svg>
		</icon>
	</graph>
	<graph id="Graph_FunctionAllocation_sysadmin_3509782531" type="Graph_FunctionAllocation_sysadmin_3509782531" typeName="AnalysisFunctionRealisation">
		<description>EAST-ADL version M2.1.12
AnalysisFunctionRealisation specifies how design functions realize the functions been defined in analysis level.</description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="bbbzv3" name="Short name" unique="false">
			<property id="Property_2ModelName_user_3310896462" type="Property_2ModelName_user_3310896462" typeName="Short name">
				<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
				<dataType>
					<simpleType>String</simpleType>
				</dataType>
				<defaultValue>
					<string></string>
				</defaultValue>
				<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
				<widget>Input Field</widget>
			</property>
		</slot>
		<slot id="bccaqa" name="Name" unique="false">
			<property href="#Property_Name_sysadmin_3536998876"></property>
		</slot>
		<slot id="b99mw8" name="Model description" unique="false">
			<property href="#Property_Model_description_user_3399887679"></property>
		</slot>
		<identReport>_name()</identReport>
		<object id="Object_AnalysisFunctionPrototype_user_3483271371" type="Object_AnalysisFunctionPrototype_user_3483271371" typeName="AnalysisFunctionPrototype">
			<description>The AnalysisFunctionPrototype represents an occurrence of the AnalysisFunctionType that types it via the submodel structure.</description>
			<superType>
				<object href="#Object_FunctionPrototype_sysadmin_3548175745"></object>
			</superType>
			<slot id="h6p6k8" name="Short name" unique="false">
				<property type="Property_AnalysisFunctionName_user_3483271228" typeName="AnalysisFunctionPrototypeName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="h99784" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="h8p6qd" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif
if decompositions; then
	do decompositions {
		_EAST-ADL_nameTranslator()
		': ' :FunctionName
		' &lt;' :Type%NoType '&gt;'
	}
else
	': function type undefined'
endif</identReport>
			<objectSymbol offset="70,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="240,142.8 239.696,145.555 238.828,147.891 237.531,149.452 236,150 74,150 72.4693,149.452 71.1716,147.891 70.3045,145.555 70,142.8 70,37.2 70.3045,34.4447 71.1716,32.1088 72.4693,30.5481 74,30 236,30 237.531,30.5481 238.828,32.1088 239.696,34.4447 240,37.2 240,142.8" targetPointX="155" targetPointY="90" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="150" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.511765" x2="0.508758" y1="0.0256523" y2="1.26087">
							<stop offset="0" stop-color="rgb(224,255,224)"></stop>
							<stop offset="0.0965309" stop-color="rgb(232,255,232)"></stop>
							<stop offset="0.34541" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(255,255,255)"></stop>
						</linearGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="120" rx="4" ry="6" stroke="rgb(0,0,0)" stroke-width="0" width="170" x="70" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="url(#gradient1)" height="120" rx="6" ry="6" stroke="none" stroke-width="1" width="170" x="70" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="FunctionalDevice" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions {
:Type
}</displayCondition>
						</metaInfo>
					</rect>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="240,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAOutPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInPorts()</generatorNPSource>
						<librarySubsymbolSource>id_left_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="0" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="true" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="240,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="39"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAOutPorts()</generatorNPSource>
						<librarySubsymbolSource>id_right_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="after" fill="rgb(0,0,128)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="70" y="30">
						ReportTextSource:_PartOfArchitecture()
newline
newline
newline
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="EnvironmentModel" xmlns="http://www.w3.org/2000/svg">ReportTextSource:type;1</displayCondition>
						</metaInfo>
					</textArea>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,150" startDistance="0">
							<layoutPath allocation="start" layoutDistance="60" lineSegmentTable="true,true,true,true" points="0,0 170,0 170,-120 0,-120 0,0" startDistance="30"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInOutPorts()</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="60" subsymbolExtentY="40" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,150" startDistance="0">
							<layoutPath allocation="start" layoutDistance="60" lineSegmentTable="true,true,true,true" points="0,0 170,0 170,-120 0,-120 0,0" startDistance="30"></layoutPath>
						</pathLayout>
						<generatorNPSource>_symFAInOutPorts()</generatorNPSource>
						<librarySubsymbolSource>id_middle_subsymbol</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="8" sym:wordWrap="true" text-anchor="middle" width="170" x="70" y="30">
						ReportTextSource:if type;1 = 'SystemModel' then
	'Analysis Level' newline
endif
id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="10,10" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="110" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(224,255,224)" height="30.7" rx="0" ry="0" stroke="none" stroke-width="1" width="90" x="90" y="10"></rect>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="10" x2="180" y1="40" y2="40"></line>
					<rect fill="rgb(255,255,255)" height="29.7" rx="0" ry="0" stroke="none" stroke-width="1" width="90" x="10" y="10"></rect>
					<rect fill="none" height="100" rx="4" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="10" y="10"></rect>
				</svg>
			</icon>
		</object>
		<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
		<relationship id="Relationship_ADLRealization_user_3400738933" type="Relationship_ADLRealization_user_3400738933" typeName="Realization">
			<description>Realization specifies a mapping between two elements and how the other element is realizing the functionality or feature. For example, how analysis level function is been realized by the design level function.</description>
			<relationshipSymbol offset="66,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" targetPointX="111" targetPointY="55" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="54" version="1.2" width="157" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="91" x="66" y="40">
						ReportTextSource:_Cycle()
'Realization'

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</relationshipSymbol>
			<icon offset="80,33" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="70" version="1.2" width="117" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,255)" points="117,33 97,39.3333 110.333,52" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="100" x2="93.3333" y1="50" y2="56.6667"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="86.6667" x2="80" y1="63.3333" y2="70"></line>
				</svg>
			</icon>
		</relationship>
		<role id="Role_2FunctionalDevice_user_3311233351" type="Role_2FunctionalDevice_user_3311233351" typeName="Realized">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,255)" points="132,76 132,84 150,80" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_Base_Realization_user_3400739113" type="Role_Base_Realization_user_3400739113" typeName="RealizedBy">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<binding>
			<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
			</connection>
		</binding>
		<decomposition>
			<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
			<graph id="Graph_FunctionalAnalysisArchitecture_user_3483271256" type="Graph_FunctionalAnalysisArchitecture_user_3483271256" typeName="AnalysisFunctionType">
				<description>EAST-ADL version M2.1.12
The AnalysisFunctionType represents a node in a tree structure corresponding to the functional decomposition of a top level AnalysisFunction. The AnalysisFunction represents the analysis function used to describe the functionalities provided by a vehicle on the AnalysisLevel. At the AnalysisLevel, AnalysisFunctions are defined and structured according to the functional requirements, i.e., the functionalities provided to the user. </description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="aqp5dy" name="FunctionName" unique="false">
					<property type="Property_AnalysisFunctionName_user_3483270466" typeName="AnalysisFunctionName">
						<description>FunctionName is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string></string>
						</defaultValue>
						<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
						<widget>Input Field</widget>
					</property>
				</slot>
				<slot id="ax96g6" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="arp5jc" name="Type" unique="false">
					<property type="Property_AnalysisFunctionType_user_3483270564" typeName="AnalysisFunctionType">
						<description>The FunctionalDevice represents an abstract sensor or actuator that encapsulates sensor/actuator dynamics and the interfacing software.</description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string>AnalysisFunctionType</string>
						</defaultValue>
						<widget>Fixed List</widget>
						<listValues>
							<string>AnalysisFunctionType</string>
							<string>FunctionalDevice</string>
						</listValues>
					</property>
				</slot>
				<slot id="atp611" name="IsElementary" unique="false">
					<property id="Property_IsElementary_user_3401010095" type="Property_IsElementary_user_3401010095" typeName="IsElementary">
						<description>True, when this type must not have any parts.</description>
						<dataType>
							<simpleType>Boolean</simpleType>
						</dataType>
						<defaultValue></defaultValue>
					</property>
				</slot>
				<slot id="avp5kz" name="Description" unique="false">
					<property href="#Property_Model_description_user_3399887679"></property>
				</slot>
				<identProp slotID="aqp5dy"></identProp>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object id="Object_ADLInFlowPort_user_3402566388" type="Object_ADLInFlowPort_user_3402566388" typeName="InFlowPort">
					<description>The input FunctionFlowPort indicates that the containing Function requires input data. The EADatatype of this data is defined by the associated EADatatype. The data is sampled at the invocation of the containing entity for discrete Functions. For continuous Functions, the input FunctionFlowPort represents a continuous input connection point. The input FunctionFlowPort declares a reception point of data. It represents a single element buffer, which is overridden with the latest data. The type of the data is defined by the associated EADatatype.</description>
					<superType>
						<object id="Object__FunctionFlowPort_sysadmin_3548244399" type="Object__FunctionFlowPort_sysadmin_3548244399" typeName="__FunctionFlowPort">
							<description></description>
							<superType>
								<object id="Object_FunctionPort_user_3463141388" type="Object_FunctionPort_user_3463141388" typeName="_FunctionPort">
									<description></description>
									<slot id="gv94hf" name="__UUID" unique="false">
										<property href="#Property___UUID_sysadmin_3604668056"></property>
									</slot>
									<identProp slotID="gv94hf"></identProp>
								</object>
							</superType>
							<identProp slotID="gv94hf"></identProp>
						</object>
					</superType>
					<slot id="eflm0i" name="Short name" unique="false">
						<property id="Property_FlowInOutName_user_3400497532" type="Property_FlowInOutName_user_3400497532" typeName="PortName">
							<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="en94mz" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="ejkbu8" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<slot id="emoi8n" name="Type" unique="false">
						<property href="#Property_isOfType_sysadmin_3537003179"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="0" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<polygon fill="rgb(0,0,0)" points="97.5,54.5 97.5,75.5 114,65" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
							<line stroke="rgb(0,0,0)" stroke-width="2" x1="110.25" x2="120" y1="65" y2="65">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</line>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
								I
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="173.25,71.25" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="111.25" version="1.2" width="213.25" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="173.25" y="71.25"></rect>
							<polygon fill="rgb(0,0,0)" points="183.25,77.25 183.25,105.25 205.25,91.25" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="201.25" y="71.25">I</textArea>
							<line stroke="rgb(0,0,0)" stroke-width="2" x1="200" x2="213" y1="92" y2="92"></line>
						</svg>
					</icon>
				</object>
				<object id="Object_InOutFlowPort_sysadmin_3609595609" type="Object_InOutFlowPort_sysadmin_3609595609" typeName="InOutFlowPort">
					<description>The input/Output FunctionFlowPort indicates a port that both provides and requires data. The EADatatype of this data is defined by the associated EADatatype. </description>
					<superType>
						<object href="#Object__FunctionFlowPort_sysadmin_3548244399"></object>
					</superType>
					<slot id="eq4bae" name="Short name" unique="false">
						<property href="#Property_FlowInOutName_user_3400497532"></property>
					</slot>
					<slot id="er4bbh" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="es4bc6" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<slot id="et4bct" name="Type" unique="false">
						<property href="#Property_isOfType_sysadmin_3537003179"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="60,30 90,30 90,60 60,60 60,30" targetPointX="75" targetPointY="45" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="90" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="0" sym:wordWrap="true" text-anchor="middle" width="90" x="30" y="60">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="60" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="19" sym:width="20" sym:x="6.5125e1" sym:y="3.5625e1">
								<polygon fill="rgb(0,0,0)" points="72.9174,35.625 65.125,45.125 72.9174,54.625" stroke="rgb(0,0,0)" stroke-width="0">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</polygon>
								<polygon fill="rgb(0,0,0)" points="77.3326,35.625 85.125,45.125 77.3326,54.625" stroke="rgb(0,0,0)" stroke-width="0">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</polygon>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
					<icon offset="40,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="60" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="40" y="20"></rect>
							<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="30" sym:width="30" sym:x="4.5e1" sym:y="2.5e1">
								<polygon fill="rgb(0,0,0)" points="56.6886,25 45,40 56.6886,55" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								<polygon fill="rgb(0,0,0)" points="63.3114,25 75,40 63.3114,55" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
							</g>
						</svg>
					</icon>
				</object>
				<object id="Object_ADLOutFlowPort_user_3402566478" type="Object_ADLOutFlowPort_user_3402566478" typeName="OutFlowPort">
					<description>The output FunctionFlowPort indicates that the containing Function provides output data. The EADatatype of this data is defined by the associated EADatatype. The data is sent at the completion of the containing entity for discrete Functions. For continuous Functions, the output FunctionFlowPort represents a (time-)continuous output connection point. The output FunctionFlowPort declares a transmission point of data. The type of the data is defined by the associated EADatatype.</description>
					<superType>
						<object href="#Object__FunctionFlowPort_sysadmin_3548244399"></object>
					</superType>
					<slot id="ejlm6c" name="Short name" unique="false">
						<property href="#Property_FlowInOutName_user_3400497532"></property>
					</slot>
					<slot id="ep94o6" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="elkbuk" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<slot id="eooiea" name="Type" unique="false">
						<property href="#Property_isOfType_sysadmin_3537003179"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="90,50 120,50 120,80 90,80 90,50" targetPointX="105.093" targetPointY="65.0932" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<polygon fill="rgb(0,0,0)" points="99.75,54.5 99.75,75.5 116.25,65" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
							<line stroke="rgb(0,0,0)" stroke-width="2" x1="90" x2="99.75" y1="65" y2="65">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</line>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
								O
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="156.25,61.25" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="101.25" version="1.2" width="196.25" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="156.25" y="61.25"></rect>
							<polygon fill="rgb(0,0,0)" points="171.25,67.25 171.25,95.25 193.25,81.25" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="11" x="185" y="62">O</textArea>
							<line stroke="rgb(0,0,0)" stroke-width="2" x1="158" x2="171" y1="82" y2="82"></line>
						</svg>
					</icon>
				</object>
				<object id="Object_InPortGroup_user_3463130898" type="Object_InPortGroup_user_3463130898" typeName="ServerPort">
					<description>The ServerPort is a FunctionPort for client-server interaction. A number of ClientPorts can be connected to one ServerPort.</description>
					<superType>
						<object id="Object__ClientServerPort_sysadmin_3615023373" type="Object__ClientServerPort_sysadmin_3615023373" typeName="__ClientServerPort">
							<description></description>
							<superType>
								<object href="#Object_FunctionPort_user_3463141388"></object>
							</superType>
							<identProp slotID="gv94hf"></identProp>
						</object>
					</superType>
					<slot id="a3syk4" name="Short name" unique="false">
						<property href="#Property_FlowInOutName_user_3400497532"></property>
					</slot>
					<slot id="a794m3" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="a6yx2p" name="Type" unique="false">
						<property id="Property_FunctionClientServerInterface_sysadmin_3543124728" type="Property_FunctionClientServerInterface_sysadmin_3543124728" typeName="FunctionClientServerInterface">
							<description>Type (FunctionClientServerInterface) is a needed property of Client and Server ports: it specifies operations in FunctionClientServerPorts.</description>
							<dataType>
								<object id="Object_FunctionClientServerInterface_sysadmin_3543124691" type="Object_FunctionClientServerInterface_sysadmin_3543124691" typeName="FunctionClientServerInterface">
									<description>The FunctionClientServerInterface is used to specify the operations in FunctionClientServerPorts.</description>
									<slot id="jdjyhc" name="__UUID" unique="false">
										<property href="#Property___UUID_sysadmin_3604668056"></property>
									</slot>
									<slot id="jbywty" name="Short name" unique="false">
										<property type="Property_InterfaceName_sysadmin_3543124571" typeName="InterfaceName">
											<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
											<dataType>
												<simpleType>String</simpleType>
											</dataType>
											<defaultValue>
												<string></string>
											</defaultValue>
											<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
											<widget>Input Field</widget>
										</property>
									</slot>
									<slot id="jejyhr" name="Name" unique="false">
										<property href="#Property_Name_sysadmin_3536998876"></property>
									</slot>
									<slot id="jcywuw" name="Operations" unique="false">
										<property type="Property_Operations_user_3400744555" typeName="Operations">
											<description></description>
											<dataType>
												<simpleType>Collection</simpleType>
											</dataType>
											<contentsDataType>
												<object type="Object_Operation_user_3400744540" typeName="Operation">
													<description>The Operation is the provided/required operation of a FunctionClientServerInterface.</description>
													<slot id="cijybf" name="__UUID" unique="false">
														<property href="#Property___UUID_sysadmin_3604668056"></property>
													</slot>
													<slot id="cafijy" name="Short name" unique="false">
														<property type="Property_Operation_name_user_3400744535" typeName="Operation name">
															<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
															<dataType>
																<simpleType>String</simpleType>
															</dataType>
															<defaultValue>
																<string></string>
															</defaultValue>
															<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
															<widget>Input Field</widget>
														</property>
													</slot>
													<slot id="cjjybz" name="Name" unique="false">
														<property href="#Property_Name_sysadmin_3536998876"></property>
													</slot>
													<slot id="cgoksb" name="Arguments" unique="false">
														<property type="Property_Arguments_sysadmin_3537004829" typeName="Arguments">
															<description></description>
															<dataType>
																<simpleType>Collection</simpleType>
															</dataType>
															<contentsDataType>
																<object href="#Object_EADatatypePrototype_sysadmin_3536998910"></object>
															</contentsDataType>
														</property>
													</slot>
													<slot id="chokub" name="Return" unique="false">
														<property type="Property_Return_sysadmin_3537004865" typeName="Return">
															<description></description>
															<dataType>
																<object href="#Object_EADatatypePrototype_sysadmin_3536998910"></object>
															</dataType>
														</property>
													</slot>
													<slot id="cbjxf4" name="Comment" unique="false">
														<property type="Property_Comment_user_3399887451" typeName="Comment">
															<description></description>
															<dataType>
																<simpleType>Text</simpleType>
															</dataType>
															<defaultValue></defaultValue>
														</property>
													</slot>
													<identReport>:Short name; '(' dowhile :Arguments {:Short name; ', '} ')'
if :Return; then 
	':' do :Return {:Short name;}; 
endif</identReport>
												</object>
											</contentsDataType>
										</property>
									</slot>
									<identProp slotID="jbywty"></identProp>
									<objectSymbol offset="40,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
										<defaultConnectable isSticky="true" points="39.75,39.75 210,39.75 210,150 39.75,150 39.75,39.75" targetPointX="124.875" targetPointY="94.875" usesGrid="true"></defaultConnectable>
										<svg baseProfile="tiny" height="152" version="1.2" width="212" xmlns="http://www.w3.org/2000/svg">
											<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="42" y="42">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</rect>
											<rect fill="rgb(224,224,255)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="40" y="40">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</rect>
											<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="40" y="40">
												ReportTextSource:type; newline
:Short name;
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
											<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="170" x="40" y="40">
												ReportTextSource:newline; newline;
'Name: ' :Name; newline
'Operations: ' newline
dowhile :Operations {id newline} 

												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
											<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="50" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
												<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="210,150" startDistance="0">
													<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -50,-30" startDistance="25"></layoutPath>
												</pathLayout>
												<generatorNPSource>type</generatorNPSource>
												<librarySubsymbolSource>ClientServer</librarySubsymbolSource>
												<metaInfo></metaInfo>
											</template>
										</svg>
									</objectSymbol>
									<icon offset="40,20" xmlns="http://www.metacase.com/icon">
										<svg baseProfile="tiny" height="60" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
											<rect fill="rgb(224,224,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="50" x="40" y="20"></rect>
											<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="20" sym:width="50" sym:x="4.0e1" sym:y="3.0e1">
												<ellipse cx="60" cy="40" fill="none" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
												<ellipse cx="70" cy="40" fill="none" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="2.7e2" sym:sweepAngle="1.8e2"></ellipse>
												<line stroke="rgb(0,0,0)" stroke-width="1" x1="80" x2="90" y1="40" y2="40"></line>
												<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="50" y1="40" y2="40"></line>
											</g>
										</svg>
									</icon>
								</object>
							</dataType>
						</property>
					</slot>
					<slot id="a2ptwc" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<g fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="30" sym:width="30" sym:x="9.0e1" sym:y="5.0e1">
								<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</rect>
								<ellipse cx="105" cy="65" fill="rgb(255,255,255)" rx="10.875" ry="10.875" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</ellipse>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
				</object>
				<object id="Object_OutPortGroup_user_3463131108" type="Object_OutPortGroup_user_3463131108" typeName="ClientPort">
					<description>The ClientPort is a FunctionPort for client-server interaction. A number of ClientPorts can be connected to one ServerPort.</description>
					<superType>
						<object href="#Object__ClientServerPort_sysadmin_3615023373"></object>
					</superType>
					<slot id="gtszz7" name="Short name" unique="false">
						<property href="#Property_FlowInOutName_user_3400497532"></property>
					</slot>
					<slot id="gv94j6" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="guyx52" name="Type" unique="false">
						<property href="#Property_FunctionClientServerInterface_sysadmin_3543124728"></property>
					</slot>
					<slot id="gspu4l" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<g fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="30" sym:width="30" sym:x="9.0e1" sym:y="5.0e1">
								<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</rect>
								<ellipse cx="105" cy="65" fill="rgb(255,255,255)" rx="10.875" ry="10.875" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="7.15651e1" sym:sweepAngle="2.1687e2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</ellipse>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
				</object>
				<object id="Object_OutPowerPort_user_3461402381" type="Object_OutPowerPort_user_3461402381" typeName="PowerPort">
					<description>PowerPort denotes the physical interactions between environment and sensing/actuation functions. It conserves physical variables in a dynamic process. </description>
					<superType>
						<object href="#Object_FunctionPort_user_3463141388"></object>
					</superType>
					<slot id="f6nqbn" name="Short name" unique="false">
						<property href="#Property_FlowInOutName_user_3400497532"></property>
					</slot>
					<slot id="fb94l5" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="f8nqc9" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<slot id="faohud" name="Type" unique="false">
						<property type="Property_CompositeDatatype_sysadmin_3537002896" typeName="CompositeDatatype">
							<description>Type value should be given</description>
							<dataType>
								<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
							</dataType>
						</property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<rect fill="rgb(224,255,224)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<polygon fill="rgb(255,255,0)" points="113.5,56 106.7,56 96.5,66.2857 103.3,66.2857 96.5,74 113.5,63.7143 106.7,63.7143" stroke="rgb(255,0,0)" stroke-width="0">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
						</svg>
					</objectSymbol>
					<icon offset="90,50" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(224,255,224)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
							<polygon fill="rgb(255,255,0)" points="120,55 112,55 100,72.1428 108,72.1428 100,85 120,67.8572 112,67.8572" stroke="rgb(255,0,0)" stroke-width="0"></polygon>
						</svg>
					</icon>
				</object>
				<object id="Object_ADLRequirement_user_3400763726" type="Object_ADLRequirement_user_3400763726" typeName="Requirement">
					<description>The Requirement represents a capability or condition that must (or should) be satisfied.</description>
					<slot id="cegc53" name="Name" unique="false">
						<property type="Property_2RequirementName_user_3310903808" typeName="RequirementName">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="cilf4e" name="Formalism" unique="false">
						<property type="Property_Formalism_user_3462188263" typeName="Formalism">
							<description>Specifies the language used for the requirement statement. </description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="cjlf5t" name="Url" unique="false">
						<property type="Property_Url_user_3462188288" typeName="Url">
							<description>Reference to possible external file containing the requirement statement. </description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="ck5kxl" name="Modes" unique="false">
						<property href="#Property_Modes_sysadmin_3543224568"></property>
					</slot>
					<slot id="ch5a4q" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identProp slotID="cegc53"></identProp>
					<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,20 210,20 210,140 30,140 30,20" targetPointX="120" targetPointY="80" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="142" version="1.2" width="212" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="RadialFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="1" stop-color="rgb(192,192,255)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(128,128,255)" height="120" rx="0" ry="0" stroke="rgb(128,128,255)" stroke-width="1" width="180" x="32" y="22">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<rect fill="url(#gradient1)" height="120" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="30" y="20">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="180" x="30" y="20">
								Req
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="180" x="30" y="20">
								ReportTextSource:newline newline newline
if :Description; then :Description; newline endif;

								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="13" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="180" x="30" y="20">
								ReportTextSource:newline newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="30" y="20">
								ReportTextSource:newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="110,70" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="180" version="1.2" width="290" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="RadialFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="1" stop-color="rgb(192,192,255)"></stop>
								</radialGradient>
							</defs>
							<rect fill="url(#gradient1)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="110" y="70"></rect>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="96" font-style="normal" font-weight="bold" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="110" y="70">R</textArea>
						</svg>
					</icon>
				</object>
				<object id="Object_QualityRequirement_user_3400822352" type="Object_QualityRequirement_user_3400822352" typeName="QualityRequirement">
					<description>QualityRequirement element represent a requirement which is non-functional. </description>
					<superType>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</superType>
					<slot id="cgiuks" name="Kind" unique="false">
						<property type="Property_QualityRequirementKind_user_3400822210" typeName="QualityRequirementKind">
							<description>QualityRequirementKind represents the kind of QualityRequirement given by the definition of the respective Enumeration Literal.</description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string>Other</string>
							</defaultValue>
							<widget>Fixed List</widget>
							<listValues>
								<string>Configurability</string>
								<string>Ergonomy</string>
								<string>HumanMachineInterface</string>
								<string>Safety</string>
								<string>Security</string>
								<string>Timing</string>
								<string>Other</string>
								<string>Availability</string>
								<string>Reliability</string>
								<string>Confidentiality  </string>
								<string>Integrity</string>
								<string>Maintainability</string>
								<string>Performance</string>
							</listValues>
						</property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,20 210,20 210,140 30,140 30,20" targetPointX="120" targetPointY="80" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="141" version="1.2" width="211" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="RadialFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="1" stop-color="rgb(255,224,192)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,128,128)" height="119" rx="0" ry="0" stroke="rgb(255,128,128)" stroke-width="1" width="180" x="31" y="22">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<rect fill="url(#gradient1)" height="120" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="30" y="20">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="180" x="30" y="20">
								QReq
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="180" x="30" y="20">
								ReportTextSource:if :Kind; then 'Kind: ' :Kind; endif
newline newline newline
if :Description; then :Description; newline endif;
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="13" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="180" x="30" y="20">
								ReportTextSource:newline newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="30" y="20">
								ReportTextSource:newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="70,30" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="140" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="RadialFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="1" stop-color="rgb(255,224,192)"></stop>
								</radialGradient>
							</defs>
							<rect fill="url(#gradient1)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="70" y="30"></rect>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="96" font-style="normal" font-weight="bold" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="70" y="30">QR</textArea>
						</svg>
					</icon>
				</object>
				<object id="Object_UserAttributedElement_sysadmin_3564907839" type="Object_UserAttributedElement_sysadmin_3564907839" typeName="UserAttributedElement">
					<description>UserAttributedElement is used to attach user attribute values to model elements. What user attributes a certain element should be supplied with can be defined beforehand with UserElementTypes.</description>
					<slot id="ka94v5" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="k6wo27" name="Short name" unique="false">
						<property type="Property_UserAttributedElementName_sysadmin_3564907239" typeName="UserAttributedElementName">
							<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="kb94uu" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="k7wo40" name="Values" unique="false">
						<property type="Property_Values_sysadmin_3564907272" typeName="Values">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object id="Object_Value_sysadmin_3564907198" type="Object_Value_sysadmin_3564907198" typeName="Value">
									<description></description>
									<slot id="jzwnrh" name="Value" unique="false">
										<property type="Property_Value_sysadmin_3564907045" typeName="Value">
											<description></description>
											<dataType>
												<simpleType>String</simpleType>
											</dataType>
											<defaultValue></defaultValue>
											<widget>Input Field</widget>
										</property>
									</slot>
									<slot id="k0wnyn" name="Type" unique="false">
										<property href="#Property_isOfType_sysadmin_3537003179"></property>
									</slot>
									<slot id="k1wnzn" name="Description" unique="false">
										<property href="#Property_2Description_user_3310902697"></property>
									</slot>
									<identReport>:Value ': ' :Type</identReport>
									<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
										<defaultConnectable isSticky="true" points="40,30 80,30 80,70 40,70 40,30" targetPointX="60" targetPointY="50" usesGrid="false"></defaultConnectable>
										<svg baseProfile="tiny" height="70" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
											<rect fill="rgb(80,160,0)" height="40" rx="6" ry="6" stroke="rgb(64,64,64)" stroke-width="1" width="40" x="40" y="30">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</rect>
											<textArea display-align="center" fill="rgb(255,255,255)" font-family="#serif" font-size="30" font-style="normal" font-weight="bold" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="40" x="40" y="30">
												Va
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
										</svg>
									</objectSymbol>
								</object>
							</contentsDataType>
							<contentsDataTypeSubtype>
								<object id="Object_EAExpression_sysadmin_3615038895" type="Object_EAExpression_sysadmin_3615038895" typeName="EAExpression">
									<description>The mixed string EAExpression allow for modeling of expressions with references to elements in the model. Specializations within the metamodel define their syntax and the referred metaclasses used in the expressions.</description>
									<superType>
										<object href="#Object_Value_sysadmin_3564907198"></object>
									</superType>
									<identReport>:Value ': ' :Type</identReport>
								</object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object id="Object_TimingExpression_sysadmin_3615039938" type="Object_TimingExpression_sysadmin_3615039938" typeName="TimingExpression">
									<description>A Timing Expression, denoted by texp, is a term built from an arithmetic expression by applying an optional unit and referencing an optional time base. It stands for a value in the real number system extended with positive and negative infinity.</description>
									<superType>
										<object href="#Object_EAExpression_sysadmin_3615038895"></object>
									</superType>
									<identReport>:Value ': ' :Type</identReport>
								</object>
							</contentsDataTypeSubtype>
						</property>
					</slot>
					<slot id="k8woz1" name="Types" unique="false">
						<property type="Property_Types_sysadmin_3564907830" typeName="Types">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object id="Object_UserElementType_sysadmin_3564907450" type="Object_UserElementType_sysadmin_3564907450" typeName="UserElementType">
									<description>UserElementType defines a certain set of user attributes.</description>
									<slot id="k7c6ij" name="__UUID" unique="false">
										<property href="#Property___UUID_sysadmin_3604668056"></property>
									</slot>
									<slot id="k2wo5j" name="Short name" unique="false">
										<property type="Property_UserElementTypeName_sysadmin_3564907299" typeName="UserElementTypeName">
											<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
											<dataType>
												<simpleType>String</simpleType>
											</dataType>
											<defaultValue>
												<string></string>
											</defaultValue>
											<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
											<widget>Input Field</widget>
										</property>
									</slot>
									<slot id="k8c6hs" name="Name" unique="false">
										<property href="#Property_Name_sysadmin_3536998876"></property>
									</slot>
									<slot id="k4work" name="Key" unique="true">
										<property type="Property_Key_sysadmin_3564907696" typeName="Key">
											<description>Key is globally unique identifier.</description>
											<dataType>
												<simpleType>String</simpleType>
											</dataType>
											<defaultValue>
												<string></string>
											</defaultValue>
											<widget>Input Field</widget>
										</property>
									</slot>
									<slot id="k5wotl" name="Valid for" unique="false">
										<property href="#Property_2Description_user_3310902697"></property>
									</slot>
									<slot id="k6x03q" name="User Attribute Definitions" unique="false">
										<property type="Property_User_Attribute_Definitions_sysadmin_3564915043" typeName="User Attribute Definitions">
											<description></description>
											<dataType>
												<simpleType>Collection</simpleType>
											</dataType>
											<contentsDataType>
												<object type="Object_UserAttributeDefinition_sysadmin_3564915005" typeName="UserAttributeDefinition">
													<description>The name of a UserAttributeDefinition should be used in editing tools as a label for the input field representing the user attribute and its description should be presented to the user to explain the meaning of this user attribute.</description>
													<slot id="kdc6l5" name="__UUID" unique="false">
														<property href="#Property___UUID_sysadmin_3604668056"></property>
													</slot>
													<slot id="kawp3d" name="Short name" unique="false">
														<property type="Property_UserAttributeDefinitionName_sysadmin_3564907908" typeName="UserAttributeDefinitionName">
															<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
															<dataType>
																<simpleType>String</simpleType>
															</dataType>
															<defaultValue>
																<string></string>
															</defaultValue>
															<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
															<widget>Input Field</widget>
														</property>
													</slot>
													<slot id="kec6ny" name="Name" unique="false">
														<property href="#Property_Name_sysadmin_3536998876"></property>
													</slot>
													<slot id="kbwp6t" name="Default value" unique="false">
														<property type="Property_Default_value_sysadmin_3564907970" typeName="Default value">
															<description></description>
															<dataType>
																<object href="#Object_Value_sysadmin_3564907198"></object>
															</dataType>
															<dataTypeSubtype>
																<object href="#Object_EAExpression_sysadmin_3615038895"></object>
															</dataTypeSubtype>
															<dataTypeSubtype>
																<object href="#Object_TimingExpression_sysadmin_3615039938"></object>
															</dataTypeSubtype>
														</property>
													</slot>
													<slot id="kcx4fp" name="Type" unique="false">
														<property href="#Property_isOfType_sysadmin_3537003179"></property>
													</slot>
													<identReport>if :Name; then :Name; else :Short name; endif
': ' :Type;
if :Default value; then
	do :Default value {
		'= ' :Value;
	}
endif</identReport>
												</object>
											</contentsDataType>
										</property>
									</slot>
									<slot id="k3wo5y" name="Description" unique="false">
										<property href="#Property_2Description_user_3310902697"></property>
									</slot>
									<identReport>if :Name; then :Name; else :Short name; endif</identReport>
									<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
										<defaultConnectable isSticky="true" points="40,30 30,40 30,130 40,140 190,140 200,130 200,40 190,30 40,30" targetPointX="115" targetPointY="85" usesGrid="true"></defaultConnectable>
										<svg baseProfile="tiny" height="144" version="1.2" width="203" xmlns="http://www.w3.org/2000/svg">
											<polygon fill="rgb(229,229,229)" points="43,34 33,44 33,134 43,144 193,144 203,134 203,44 193,34" stroke="rgb(229,229,229)" stroke-width="1">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</polygon>
											<polygon fill="rgb(255,231,231)" points="40,30 30,40 30,130 40,140 190,140 200,130 200,40 190,30" stroke="rgb(0,0,0)" stroke-width="1">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</polygon>
											<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="30">
												ReportTextSource:'UserElementType' newline
id
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
											<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="30" y="30">
												ReportTextSource:newline; newline
do :User Attribute Definitions; {
	id;
	newline
}
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
										</svg>
									</objectSymbol>
									<icon offset="50,20" xmlns="http://www.metacase.com/icon">
										<svg baseProfile="tiny" height="60" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
											<polygon fill="rgb(255,231,231)" points="65,20 50,30 50,50 65,60 95,60 110,50 110,30 95,20" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
										</svg>
									</icon>
								</object>
							</contentsDataType>
						</property>
					</slot>
					<slot id="k9wo6d" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,30 200,30 200,140 30,140 30,30" targetPointX="115" targetPointY="85" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="142" version="1.2" width="203" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(170,170,170)" height="110" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="1" width="170" x="33" y="32">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<rect fill="rgb(255,231,231)" height="110" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="30" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="30">
								ReportTextSource:'UserAttribute ' id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="170" x="30" y="30">
								ReportTextSource:newline; 
do :Values {
	:Value; ': ' :Type; newline
}
do :Types {
	id ': UserElementType' newline
}
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="after" fill="rgb(255,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="30">
								ReportTextSource:_symLegalType()
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
				</object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object id="Object_Joker_user_3399887441" type="Object_Joker_user_3399887441" typeName="Comment">
					<description>Commenting the metamodel or model, can be connected to all objects.</description>
					<slot id="a2y9ru" name="Comment" unique="false">
						<property type="Property_Comment_ID_user_3460808445" typeName="Comment ID">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="a1xmpf" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identProp slotID="a2y9ru"></identProp>
					<objectSymbol offset="70,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="290,185 289.543,186.913 288.243,188.536 286.296,189.619 284,190 76,190 73.7039,189.619 71.7574,188.536 70.4567,186.913 70,185 70,55 70.4567,53.0866 71.7574,51.4645 73.7039,50.3806 76,50 284,50 286.296,50.3806 288.243,51.4645 289.543,53.0866 290,55 290,185" targetPointX="180" targetPointY="120" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="190" version="1.2" width="290" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,224)" height="140" rx="6" ry="5" stroke="rgb(128,64,64)" stroke-width="0" width="220" x="70" y="50">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="140" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="220" x="70" y="50">
								ReportTextSource::Comment; newline
:Description;
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
				</object>
				<relationship href="#Relationship_Flow_user_3400497401"></relationship>
				<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
				<relationship href="#Relationship_Power_user_3461401495"></relationship>
				<relationship id="Relationship_Allocation_user_3461832959" type="Relationship_Allocation_user_3461832959" typeName="Allocation">
					<description>The Allocation element contains functionAllocations, i.e., it can bundle functionAllocations that belong together.</description>
					<slot id="ar95ng" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="as95o5" name="Short name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="atua2k" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="aq66t5" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<relationshipSymbol offset="90,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" targetPointX="130" targetPointY="77" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="80" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="90" y="60">
								Allocation
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="80,46" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="114" xmlns="http://www.w3.org/2000/svg">
							<line stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1" x1="80" x2="110" y1="80" y2="50"></line>
							<polygon fill="rgb(213,213,213)" points="114,46 94,56 104,56 104,66" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
						</svg>
					</icon>
				</relationship>
				<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
				<relationship id="Relationship_ADLSatisfy_user_3400828420" type="Relationship_ADLSatisfy_user_3400828420" typeName="Satisfy">
					<description>The Satisfy relationship signifies a satisfied requirement/satisfied by relationship between a set of Requirements and a set of satisfying entities.</description>
					<relationshipSymbol offset="105,70" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" targetPointX="135" targetPointY="83" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="83" version="1.2" width="166" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="61" x="105" y="70">
								Satisfy
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="92,44" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="81" version="1.2" width="129" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(213,213,213)" points="129,44 109,50.3333 122.333,63" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="112" x2="105.333" y1="61" y2="67.6667"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="98.6667" x2="92" y1="74.3333" y2="81"></line>
						</svg>
					</icon>
				</relationship>
				<relationship id="Relationship_ADLDeriveReqt_user_3401339768" type="Relationship_ADLDeriveReqt_user_3401339768" typeName="DeriveRequirement">
					<description>The DeriveRequirement signifies a derived/derived by relationship between Requirements, where the modification of the supplier Requirement may impact the derived client Requirement.</description>
					<relationshipSymbol offset="120,46" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" targetPointX="145" targetPointY="60" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="60" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="120" y="46">
								Derive
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="112,78" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="113.5" version="1.2" width="152" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(0,0,0)" points="152,78 130,87.5 141,87.5 141,97" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="137" x2="126" y1="91.5" y2="101"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="123" x2="112" y1="104" y2="113.5"></line>
						</svg>
					</icon>
				</relationship>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role id="Role_AllocatedElement_user_3400820977" type="Role_AllocatedElement_user_3400820977" typeName="AllocatedElement">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_ClientPort_From_user_3463040187" type="Role_ClientPort_From_user_3463040187" typeName="Client">
					<description></description>
				</role>
				<role href="#Role_Comment_user_3460793566"></role>
				<role id="Role_Derived_user_3401339852" type="Role_Derived_user_3401339852" typeName="DerivedFrom">
					<description>The set of requirements that the client requirement are derived from.</description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="85" version="1.2" width="148" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(64,64,64)" points="148,80.5 135,76 139.333,80.5 135,85" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_DerivedFrom_user_3401339830" type="Role_DerivedFrom_user_3401339830" typeName="Derived">
					<description>The set of requirements that are derived from the supplier requirement.</description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_InFlow_To_user_3463040003" type="Role_InFlow_To_user_3463040003" typeName="InFlow">
					<description></description>
				</role>
				<role id="Role_PowerPortTo_user_3463037978" type="Role_PowerPortTo_user_3463037978" typeName="InPower">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_OutFlow_From_user_3463040034" type="Role_OutFlow_From_user_3463040034" typeName="OutFlow">
					<description></description>
				</role>
				<role id="Role_PowerPortFrom_user_3463037350" type="Role_PowerPortFrom_user_3463037350" typeName="OutPower">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<role id="Role_SatisfiedByADLEntity_user_3400911628" type="Role_SatisfiedByADLEntity_user_3400911628" typeName="SatisfiedBy">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_SatisfiedRequirement_user_3400911596" type="Role_SatisfiedRequirement_user_3400911596" typeName="SatisfiedRequirement">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(240,240,240)" points="132,76 132,84 150,80" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_ServerPort_To_user_3463040199" type="Role_ServerPort_To_user_3463040199" typeName="Server">
					<description></description>
				</role>
				<role id="Role_Target_user_3400820946" type="Role_Target_user_3400820946" typeName="TargetLink">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="85" version="1.2" width="151" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(213,213,213)" points="151,80 137,75 141.667,80 137,85" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_ClientPort_user_3461406969" type="Role_ClientPort_user_3461406969" typeName="ClientPort">
					<description></description>
					<superType>
						<role id="Role_ADLFlowPort_user_3400497541" type="Role_ADLFlowPort_user_3400497541" typeName="_FunctionPort">
							<description></description>
						</role>
					</superType>
					<identProp slotID="a54xdl"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_ADLInFlowPort_user_3400497566" type="Role_ADLInFlowPort_user_3400497566" typeName="InFlowPort">
					<description></description>
					<superType>
						<role href="#Role_ADLFlowPort_user_3400497541"></role>
					</superType>
					<identProp slotID="a54xdl"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:do #() {
	if type = 'InOutFlowPort' then
		id
	endif
}
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(255,255,255)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPortIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,0,0)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPortIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,0,0)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPortIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_InPowerPort_user_3461311200" type="Role_InPowerPort_user_3461311200" typeName="InPowerPort">
					<description></description>
					<superType>
						<role href="#Role_ADLFlowPort_user_3400497541"></role>
					</superType>
					<identProp slotID="a54xdl"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:do #() {
	if type = 'PowerPort' then
		id
	endif
}
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_ADLOutFlowPort_user_3400497659" type="Role_ADLOutFlowPort_user_3400497659" typeName="OutFlowPort">
					<description></description>
					<superType>
						<role href="#Role_ADLFlowPort_user_3400497541"></role>
					</superType>
					<identProp slotID="a54xdl"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:do #() {
	if type = 'InOutFlowPort' then
		id
	endif
}
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(255,255,255)" points="163.5,80 163.155,85.2139 158.748,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.748,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPortIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,0,0)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPortIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,0,0)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPortIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_OutPowerPort_user_3461311212" type="Role_OutPowerPort_user_3461311212" typeName="OutPowerPort">
					<description></description>
					<superType>
						<role href="#Role_ADLFlowPort_user_3400497541"></role>
					</superType>
					<identProp slotID="a54xdl"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:do #() {
	if type = 'PowerPort' then
		id
	endif
}
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_ServerPort_user_3461407124" type="Role_ServerPort_user_3461407124" typeName="ServerPort">
					<description></description>
					<superType>
						<role href="#Role_ADLFlowPort_user_3400497541"></role>
					</superType>
					<identProp slotID="a54xdl"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<binding>
					<relationship href="#Relationship_Allocation_user_3461832959"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_AllocatedElement_user_3400820977"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Target_user_3400820946"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ClientPort_user_3461406969"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_OutPortGroup_user_3463131108"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ClientPort_From_user_3463040187"></role>
						<object href="#Object_OutPortGroup_user_3463131108"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ClientPort_user_3461406969"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_OutPortGroup_user_3463131108"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ServerPort_user_3461407124"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_InPortGroup_user_3463130898"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ServerPort_To_user_3463040199"></role>
						<object href="#Object_InPortGroup_user_3463130898"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ServerPort_user_3461407124"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_InPortGroup_user_3463130898"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_FunctionPort_user_3463141388"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_FunctionPort_user_3463141388"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_DerivedFrom_user_3401339830"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Derived_user_3401339852"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_InFlow_To_user_3463040003"></role>
						<object href="#Object_ADLInFlowPort_user_3402566388"></object>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLInFlowPort_user_3400497566"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_ADLInFlowPort_user_3402566388"></port>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
						<port href="#Object_ADLOutFlowPort_user_3402566478"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLInFlowPort_user_3400497566"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_ADLInFlowPort_user_3402566388"></port>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
						<port href="#Object_ADLOutFlowPort_user_3402566478"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_OutFlow_From_user_3463040034"></role>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
						<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Power_user_3461401495"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerPortTo_user_3463037978"></role>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_InPowerPort_user_3461311200"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Power_user_3461401495"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_OutPowerPort_user_3461311212"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_InPowerPort_user_3461311200"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Power_user_3461401495"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_OutPowerPort_user_3461311212"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerPortFrom_user_3463037350"></role>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Base_Realization_user_3400739113"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_2FunctionalDevice_user_3311233351"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					</connection>
				</binding>
				<decomposition>
					<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
					<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
				</decomposition>
				<report>
					Report '!Check'
/* Check generator the validate the EAST-ADL FunctionalModels */
Check()
endreport
					<icon offset="69,55" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="103" version="1.2" width="117" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="69" y="63"></rect>
							<polygon fill="url(#gradient1)" points="78.3,67.5714 74,73.8571 74,80.1429 86.9,99 91.2,99 117,67.5714 117,61.2857 112.7,55 108.4,55 90.34,83.9143 82.6,67.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>
					Report '!Unconnected ports'
_UnconnectedPorts()
endreport
					<icon offset="90,40" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="60" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="90" y="40"></rect>
							<polygon fill="rgb(213,213,213)" points="94,44 94,56 106,50" stroke="rgb(128,128,128)" stroke-width="1"></polygon>
							<textArea display-align="center" fill="rgb(255,0,0)" font-family="#sans serif" font-size="22" font-style="normal" font-weight="bold" height="18" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="15" x="92.5" y="40">?</textArea>
						</svg>
					</icon>
				</report>
				<report>Report 'Check'
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

/* Checking for legal path hierarchy */
_LegalTypePath()

if $legal &lt;&gt; 'F' then
	subreport '_checkings' run 
endif

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif
endreport</report>
				<report>Report 'Trace all functions'
/* Reports all functions of EAST-ADL and their links to other elements */
_translators()
$reported = ' '
'FUNCTIONS AND THEIR RELATIONSHIPS:' newline newline
do graphs 
{
	foreach .(*FunctionPrototype*) 
	{
		if not $reported =~ oid%wildsp then
			variable 'reported' append oid ' ' close
			$objectType = type
			id ' &lt;' $objectType '&gt;' newline
			do :Description { id newline }
			do graphs 
			{
				foreach .(*FunctionPrototype*) where oid = oid;2 
				{
					$graphType = type;1
					'- in ' id;1 ' &lt;' $graphType '&gt;' newline
					do &gt;() 
					{
						dowhile ~(^Comment).() 
						{
							if oid &lt;&gt; oid;2 then
								$objectType = type
								'	- &lt;' type;1 '&gt; relationship with ' id ' &lt;' $objectType '&gt;' newline
							endif
						}
					}
				}
			}
			newline
		endif
	}
}
endreport</report>
				<report>TypeDeclaration()
/* Reports graphs in which type is declared: EAType referring to this AnalysisFunctionType */
_TypeDeclaration()</report>
				<report>TypeUsers()
/* Reports prototypes using the selected type in type-prototype hierarchy */
do graphs where type = 'AnalysisFunctionType' or type = 'SystemModel' or type = 'EnvironmentModel' 
{	foreach .AnalysisFunctionPrototype 
	{	do decompositions where oid = oid;3 
		{	id;1 ' &lt;' type;1 '&gt; in ' id;2 ' uses ' id ' &lt;' :Type '&gt;' newline }
	}
}</report>
				<report>Report '_AnalysisFunctionPrototype'
/* Generating the AnalysisFunctionPrototype information */
local 'AFPTName' write :Short name; close
local 'AFPTShortName' write @AFPTName%toShortName close
local 'nameValue' write :Name;%xml close 
'&lt;!-- ' type%minus%upper ' name: ' 
if @nameValue &lt;&gt; '' then
	@nameValue ' (' @AFPTShortName ')'
else
	@AFPTShortName
endif
' --&gt;' newline
'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
'&lt;' type%minus%upper ' UUID="' :__UUID '"&gt;' newline
'&lt;SHORT-NAME&gt;' @AFPTShortName '&lt;/SHORT-NAME&gt;' newline
if @nameValue &lt;&gt; '' then
	'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
endif
subreport '_description' run

do decompositions 
{
	'&lt;!-- TYPE-TREF: ' id%var ' --&gt;' newline
	'&lt;TYPE-TREF TYPE="' :Type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
}
'&lt;/' type%minus%upper '&gt;'
endreport</report>
				<report>Report '_AnalysisFunctionType'
/* Generating the AnalysisFunctionType information */
if $EAXMLoids =~oid%wildsp then
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write :Type%minus%upper close
		local 'nameValue' write :Name;%xml close
		newline 
		'&lt;!-- ' $type_name ' name: ' 
		if @nameValue &lt;&gt; '' then
			@nameValue ' (' :FunctionName; ')'
		else
			:FunctionName%var
		endif
		' --&gt;' newline
		'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
		'&lt;SHORT-NAME&gt;' :FunctionName; '&lt;/SHORT-NAME&gt;' newline
		if @nameValue &lt;&gt; '' then
			'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
		endif
		subreport '_description' run
		subreport '_owned-relationships' run
		'&lt;IS-ELEMENTARY&gt;' 
			if :IsElementary; then 'true' else 'false' endif 
		'&lt;/IS-ELEMENTARY&gt;' newline
		subreport '_ports' run newline
		subreport '_connectors' run newline
		subreport '_parts' run newline
		'&lt;/' $type_name '&gt;'
	endif

	/* Reporting the other types */
	foreach .()
	{	
		/* Requirements objects */
		/*	
		if type =~'*Requirement' then
			subreport '_requirement' run
		endif
		*/
		/* Port types */
		if type =~ '*Port' then
			do :Type { _data-type_details() }
		endif
	}
endif
endreport</report>
				<report>_AnalysisFunctionType\ with\ package\ structure()
/* Reporting the AnalysisFunctionType */
subreport '_AnalysisFunctionType' run 

</report>
				<report>_AnalysisLevel\ with\ package\ structure()
newline;
local 'type_name' write 'FUNCTIONAL-ANALYSIS-ARCHITECTURE'	close
local 'nameValue' write :Name;1%xml close
local 'descriptionValue' write :Description;1%xml close 
'&lt;!-- ' @type_name ' name: '
if @nameValue; then
	@nameValue ' (' :Short name;1%var ')'
else
	:Short name;1%var
endif
' --&gt;' newline
'&lt;' @type_name ' UUID="' :__UUID;1 '"&gt;' newline	
'&lt;SHORT-NAME&gt;' :Short name;1;%var '&lt;/SHORT-NAME&gt;' newline
if @nameValue; then
	'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
endif
if @descriptionValue &lt;&gt; '' then
	'&lt;OWNED-COMMENTS&gt;' newline
	'&lt;COMMENT&gt;' newline
	'&lt;BODY&gt;' @descriptionValue '&lt;/BODY&gt;' newline
	'&lt;/COMMENT&gt;' newline
	'&lt;/OWNED-COMMENTS&gt;' newline
endif

/* Generating TYPE-TREF information */
local 'AF_type_name' write type;%minus%upper close
'&lt;!-- TYPE-TREF name: ' :FunctionName; ' --&gt;' newline
'&lt;TYPE-TREF TYPE="' @AF_type_name '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
'&lt;/' @type_name '&gt;' newline
</report>
				<report>Report '_checkings'
/* Check generator for EAST-ADL AnalysisFunctionType models */

/* Checkings for Objects */
subreport '_checkings for the objects' run

/* Checkings for Roles */
subreport '_checkings for the roles' run

/* Checkings for relationships */
subreport '_checkings for the relationships' run

/* Checkings for the Model */
subreport '_checkings for the graph' run

endreport</report>
				<report>Report '_connectors'
/* Relationships */
'&lt;CONNECTORS&gt;'
foreach &gt;(Flow | Power | ClientServerInterface)
{  if not $reported_relationships =~ oid%wildsp then
		variable 'reported_relationships' append oid ' ' close
		newline
		'&lt;!-- FUNCTION-CONNECTOR name: '
		if :Name; then 
			:Name%xml
		else
			if :Short name; then
				:Short name;
			endif
		endif
		' (' type ') --&gt;' newline 
		'&lt;!--  path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;FUNCTION-CONNECTOR' ' UUID="' :__UUID '"&gt;' newline 
		'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		if :Name; then 
			'&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline
		endif 
		subreport '_description' run
		'&lt;PORT-IREFS&gt;' newline
			do ~(^Comment) 
			{	variable 'port' write do #(){ oid } close 
				do .() { subreport '_port irefs' run }
			}
		'&lt;/PORT-IREFS&gt;' newline
		'&lt;/FUNCTION-CONNECTOR&gt;'
	endif
} 
'&lt;/CONNECTORS&gt;'
endreport</report>
				<report>Report '_direction'
/* Generating the direction property for the port */
'&lt;DIRECTION&gt;' 
if type =~ 'InOut*' then
	'INOUT'
else
	if type =~ 'In*' then	
		'IN'
	else
		'OUT'
	endif 
endif
'&lt;/DIRECTION&gt;' newline
endreport</report>
				<report>Report '_parts'
'&lt;PARTS&gt;'
foreach .(AnalysisFunctionPrototype)
{	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		newline
		subreport '_AnalysisFunctionPrototype' run 
	endif
}
'&lt;/PARTS&gt;' 
endreport</report>
				<report>Report '_port irefs'
/* Generating the Port irefs */
'&lt;PORT-IREF&gt;' newline
if type = 'AnalysisFunctionPrototype' then
	/* Generates the Function-Prototype reference */
	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
	'&lt;FUNCTION-PROTOTYPE-REF TYPE="ANALYSIS-FUNCTION-PROTOTYPE"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-REF&gt;' newline
endif

/* Comment line starts */
'&lt;!-- ' 
if (type =~ '*Flow*') or (type =~ '*ClientServerInterface*') or (type =~ '*Power*') then
  type ' name: ' :Short name;
else
	if type =~ '*Prototype' then
		do decompositions 
		{
			foreach .(*Port) 
			{
				if oid = $port then
					type ' name: ' :Short name;
				endif
			}
		}
	else
		type ' name: ' :Short name;
	endif
endif
' --&gt;' newline
/* Comment line ends */

/* Generates the Function-Port reference */
'&lt;FUNCTION-PORT-REF TYPE="' 
if (type =~ '*Flow*') or (type =~ '*ClientServerInterface*') or (type =~ '*Power*') then
	if type =~'*Flow*' then
		'FUNCTION-FLOW-PORT'
	endif
	if type =~'*ClientServerInterface*' then
		'FUNCTION-CLIENT-SERVER-PORT'
	endif
	if type =~'*Power*' then
		'FUNCTION-POWER-PORT'
	endif
else
	if type;1 =~'*Flow*' then
		'FUNCTION-FLOW-PORT'
	endif
	if (type;1 =~'*ClientPort') Or (type;1 =~'*ServerPort') or (type;1 =~'*Client') Or (type;1 =~'*Server') then
		'FUNCTION-CLIENT-SERVER-PORT'
	endif
	if type;1 =~'*Power*' then
		'FUNCTION-POWER-PORT'
	endif
endif
'"&gt;'

if type =~ '*Prototype' then
	do decompositions 
	{
		foreach .(*Port) 
		{
			if oid = $port then
				variable oid '_path' read
			endif
		}
	}
else
	/* Type is the Port object */
	if type =~ '*Port' then
		variable oid '_path' read
	endif
endif
'&lt;/FUNCTION-PORT-REF&gt;' newline
'&lt;/PORT-IREF&gt;' newline
endreport</report>
				<report>Report '_port properties'
/* Generating the port properties */
if :Name; then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
subreport '_description' run

/* Flow ports */
if (type =~ '*Flow*') then
	subreport '_direction' run
	subreport '_dataTypeReference' run
endif

/* Power ports */
if type =~ '*Power*' then
	subreport '_dataTypeReference' run
endif

/* Client/Server ports */
if (type =~ 'ClientPort') or (type =~ 'ServerPort') then
	subreport '_client-server properties' run
endif

endreport</report>
				<report>Report '__LiveCheck'
subreport '_translators' run 

$warnings = '0'
$LiveCheck = 'T'

subreport '_checkings' run 

if $warnings = '0' then
	'No warnings' newline
endif
endreport</report>
				<constraints>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_OutPortGroup_user_3463131108"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ADLInFlowPort_user_3402566388"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_InPortGroup_user_3463130898"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
				<icon offset="40,30" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="100" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
						<rect fill="rgb(255,255,179)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="40" y="30"></rect>
					</svg>
				</icon>
			</graph>
		</decomposition>
		<decomposition>
			<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
			<graph id="Graph_FunctionalAnalysisArchitecture_user_3399893275" type="Graph_FunctionalAnalysisArchitecture_user_3399893275" typeName="DesignFunctionType">
				<description>EAST-ADL version M2.1.12
The DesignFunctionType represents a node in a tree structure corresponding to the functional decomposition of a top level DesignFunction. The DesignFunction represents the design function used to describe the functionalities provided by a vehicle on the DesignLevel. At the DesignLevel, DesignFunctions are defined and structured according to the functional and hardware system design.</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="ahph7o" name="FunctionName" unique="false">
					<property type="Property_DesignFunctionName_user_3483278130" typeName="DesignFunctionName">
						<description>FunctionName is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string></string>
						</defaultValue>
						<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
						<widget>Input Field</widget>
					</property>
				</slot>
				<slot id="al93nt" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="aiphah" name="Type" unique="false">
					<property type="Property_DesignFunctionType_user_3483278180" typeName="DesignFunctionType">
						<description></description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string>DesignFunctionType</string>
						</defaultValue>
						<widget>Fixed List</widget>
						<listValues>
							<string>DesignFunctionType</string>
							<string>BasicSoftwareFunctionType</string>
							<string>LocalDeviceManager</string>
							<string>HardwareFunctionType</string>
						</listValues>
					</property>
				</slot>
				<slot id="afpcoh" name="IsElementary" unique="false">
					<property href="#Property_IsElementary_user_3401010095"></property>
				</slot>
				<slot id="a6f0v5" name="Description" unique="false">
					<property href="#Property_Model_description_user_3399887679"></property>
				</slot>
				<identProp slotID="ahph7o"></identProp>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_ADLInFlowPort_user_3402566388"></object>
				<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
				<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
				<object href="#Object_InPortGroup_user_3463130898"></object>
				<object href="#Object_OutPortGroup_user_3463131108"></object>
				<object href="#Object_OutPowerPort_user_3461402381"></object>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
				<object href="#Object_QualityRequirement_user_3400822352"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_Joker_user_3399887441"></object>
				<relationship href="#Relationship_Flow_user_3400497401"></relationship>
				<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
				<relationship href="#Relationship_Power_user_3461401495"></relationship>
				<relationship href="#Relationship_Allocation_user_3461832959"></relationship>
				<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
				<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
				<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role href="#Role_ADLInFlowPort_user_3400497566"></role>
				<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
				<role href="#Role_InPowerPort_user_3461311200"></role>
				<role href="#Role_OutPowerPort_user_3461311212"></role>
				<role href="#Role_ClientPort_user_3461406969"></role>
				<role href="#Role_ServerPort_user_3461407124"></role>
				<role href="#Role_Comment_user_3460793566"></role>
				<role href="#Role_AllocatedElement_user_3400820977"></role>
				<role href="#Role_Target_user_3400820946"></role>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
				<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
				<role href="#Role_Derived_user_3401339852"></role>
				<role href="#Role_DerivedFrom_user_3401339830"></role>
				<role href="#Role_InFlow_To_user_3463040003"></role>
				<role href="#Role_OutFlow_From_user_3463040034"></role>
				<role href="#Role_ClientPort_From_user_3463040187"></role>
				<role href="#Role_ServerPort_To_user_3463040199"></role>
				<role href="#Role_PowerPortFrom_user_3463037350"></role>
				<role href="#Role_PowerPortTo_user_3463037978"></role>
				<binding>
					<relationship href="#Relationship_Allocation_user_3461832959"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_AllocatedElement_user_3400820977"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Target_user_3400820946"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ClientPort_user_3461406969"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_OutPortGroup_user_3463131108"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ClientPort_From_user_3463040187"></role>
						<object href="#Object_OutPortGroup_user_3463131108"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ClientPort_user_3461406969"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_OutPortGroup_user_3463131108"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ServerPort_user_3461407124"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_InPortGroup_user_3463130898"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ServerPort_To_user_3463040199"></role>
						<object href="#Object_InPortGroup_user_3463130898"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ServerPort_user_3461407124"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_InPortGroup_user_3463130898"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_FunctionPort_user_3463141388"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_FunctionPort_user_3463141388"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_DerivedFrom_user_3401339830"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Derived_user_3401339852"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_InFlow_To_user_3463040003"></role>
						<object href="#Object_ADLInFlowPort_user_3402566388"></object>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLInFlowPort_user_3400497566"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_ADLInFlowPort_user_3402566388"></port>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
						<port href="#Object_ADLOutFlowPort_user_3402566478"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLInFlowPort_user_3400497566"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_ADLInFlowPort_user_3402566388"></port>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Flow_user_3400497401"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
						<port href="#Object_ADLOutFlowPort_user_3402566478"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_OutFlow_From_user_3463040034"></role>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
						<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Power_user_3461401495"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerPortTo_user_3463037978"></role>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_InPowerPort_user_3461311200"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Power_user_3461401495"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_OutPowerPort_user_3461311212"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_InPowerPort_user_3461311200"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Power_user_3461401495"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_OutPowerPort_user_3461311212"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<port href="#Object_OutPowerPort_user_3461402381"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerPortFrom_user_3463037350"></role>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Base_Realization_user_3400739113"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_2FunctionalDevice_user_3311233351"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					</connection>
				</binding>
				<decomposition>
					<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
					<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
				</decomposition>
				<report>
					Report '!Check'
/* Check generator the validate the EAST-ADL FunctionalModels */
Check()
endreport
					<icon offset="80,32" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="128" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.71551" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="80" y="40"></rect>
							<polygon fill="url(#gradient1)" points="89.3,44.5714 85,50.8571 85,57.1429 97.9,76 102.2,76 128,44.5714 128,38.2857 123.7,32 119.4,32 101.34,60.9143 93.6,44.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>
					Report '!Unconnected ports'
_UnconnectedPorts()
endreport
					<icon offset="98,45" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="65" version="1.2" width="118" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="98" y="45"></rect>
							<polygon fill="rgb(213,213,213)" points="102,49 102,61 114,55" stroke="rgb(128,128,128)" stroke-width="1"></polygon>
							<textArea display-align="center" fill="rgb(255,0,0)" font-family="#sans serif" font-size="22" font-style="normal" font-weight="bold" height="18" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="15" x="100.5" y="45">?</textArea>
						</svg>
					</icon>
				</report>
				<report>Report 'Check'
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

/* Checking for legal path hierarchy */
_LegalTypePath()

if $legal &lt;&gt; 'F' then
	subreport '_checkings' run 
endif

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif
endreport</report>
				<report>Report 'Trace all functions'
/* reports all functions of EAST-ADL and their links to other elements */
_translators()
$reported = ' '
'FUNCTIONS AND THEIR RELATIONSHIPS:' newline newline
do graphs {
	foreach .(*FunctionPrototype*) {
		if not $reported =~ oid%wildsp then
			variable 'reported' append oid ' ' close
			$objectType = type
			id ' &lt;' $objectType '&gt;' newline
			do :Description {id newline}
			do graphs {
				foreach .(*FunctionPrototype*) where oid = oid;2 {
					$graphType = type;1
					'- in ' id;1 ' &lt;' $graphType '&gt;' newline
					do &gt;() {
						dowhile ~(^Comment).() {
							if oid &lt;&gt; oid;2 then
								$objectType = type
								'	- &lt;' type;1 '&gt; relationship with ' id ' &lt;' $objectType '&gt;' newline
							endif
						}
					}
				}
			}
		newline
		endif
	}
}
endreport</report>
				<report>TypeDeclaration()
/* Reports graphs in which type is declared: EAType referring to this DesignFunctionType */
_TypeDeclaration()</report>
				<report>
					TypeUsers()
/* Reports prototypes using the selected type in type-prototype hierarchy */
do graphs where type = 'DesignFunctionType' or type = 'SystemModel' or type = 'EnvironmentModel' 
{	foreach .DesignFunctionPrototype 
	{	do decompositions where oid = oid;3 
		{	id;1 ' &lt;' type;1 '&gt; in ' id;2 ' uses ' id newline	}
	}
}
					<icon offset="70,30" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="110" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(0,0,0)" points="90,30 70,40 90,50" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<polygon fill="rgb(0,0,0)" points="90,60 70,70 90,80" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="3" x1="90" x2="120" y1="40" y2="40"></line>
							<line stroke="rgb(0,0,0)" stroke-width="3" x1="90" x2="120" y1="70" y2="70"></line>
							<line stroke="rgb(0,0,0)" stroke-width="3" x1="120" x2="120" y1="40" y2="110"></line>
						</svg>
					</icon>
				</report>
				<report>_Analyze()

/* analyze functions of main function */
_AnalyzeFunctions()

/* analyze ports of main function */
_AnalyzePorts()

/* analyze ports of subfunctions */
foreach .DesignFunctionPrototype {
	do decompositions {
		_AnalyzePorts()		
	}
} 
</report>
				<report>_AnalyzeFunctions()
/* found in architecture but not from simulink */	
variable 'FunctionsOfSimulinkFunction' write
	variable 'mainfunction' read
close
		
foreach .DesignFunctionPrototype {
	variable 'thisFunction' write 'Function_' :Short name; close
	if not $FunctionsOfSimulinkFunction =~ $thisFunction%wildsp; then
		'Function ' :Short name; 
		if :Name; then ' (' :Name ')' endif
		' not found from Simulink' newline
		$match = 'F'
	endif
}
		
/* found in simulink but not from architecture */
$FunctionsOfArchitecture = ' '
foreach .DesignFunctionPrototype {
	variable 'FunctionsOfArchitecture' append 'Function_' :Short name; ' ' close
}

do $FunctionsOfSimulinkFunction%spaces {
	if id &lt;&gt; '' then
		if not $FunctionsOfArchitecture =~ id%wildsp; then
			id ' defined only in Simulink.' newline
			$match = 'F'
		endif
	endif
}	</report>
				<report>_AnalyzePorts()
/* found in architecture but not from simulink */	
variable 'PortsOfSimulinkFunction' write
	variable 'function' oid; read
close
		
foreach .(InFlowPort | ServerPort) {
	variable 'thisPort' write 'InPort_' :Short name; close
	_comparePortsFromSimulink()
}

foreach .(OutFlowPort | ClientPort) {
	variable 'thisPort' write 'OutPort_' :Short name; close
	_comparePortsFromSimulink()
}
		
/* found in simulink but not from architecture */
$PortsOfArchitecture = ' '
foreach .(InFlowPort | ServerPort) {
	variable 'PortsOfArchitecture' append 'InPort_' :Short name; ' ' close
}

foreach .(OutFlowPort | ClientPort) {
	variable 'PortsOfArchitecture' append 'OutPort_' :Short name; ' ' close
}

_comparePortsFromArchitecture()
	</report>
				<report>Report '_checkings'
/* Check generator for EAST-ADL DesignFunctionType models */

/* Checkings for Objects */
subreport '_checkings for the objects' run

/* Checkings for Roles */
subreport '_checkings for the roles' run

/* Checkings for relationships */
subreport '_checkings for the relationships' run

/* Checkings for the Model */
subreport '_checkings for the graph' run

endreport</report>
				<report>Report '_checkingsForHardwareFunctionTypes'
@HardwareFunctionTypeFound = ''
$prototype_list = ''
@delimeter = ''

if type = 'DesignFunctionType' then
	if :Type = 'HardwareFunctionType' then
		foreach .DesignFunctionPrototype {
		 	do decompositions {
				if :Type &lt;&gt; 'HardwareFunctionType' then
					@HardwareFunctionTypeFound = 'F'
					variable 'prototype_list' append @delimeter id ' &lt;' :Type '&gt;' close
					@delimeter = ', '
					$warnings++%null
				endif
			}
		}
	endif
endif
if @HardwareFunctionTypeFound &lt;&gt; '' then
	id ' &lt;' :Type '&gt; should contain only prototypes typed as HardwareFunctionType, now it contains following prototypes: ' $prototype_list newline
endif
endreport</report>
				<report>_comparePortsFromArchitecture()
/* compares if port in simulink found from architecture */

do $PortsOfSimulinkFunction%spaces {
	if id &lt;&gt; '' then
		if not $PortsOfArchitecture =~ id%wildsp; then
			id ' defined only in Simulink.' newline
			$match = 'F'
		endif
	endif
}	</report>
				<report>_comparePortsFromSimulink()
/* compares if port of architecture found from Simulink */

if not $PortsOfSimulinkFunction =~ $thisPort%wildsp; then
	type ' ' :Short name; 
	if :Name; then ' (' :Name ')' endif
	' not found from Simulink' newline
	$match = 'F'
endif
</report>
				<report>Report '_connectors'
/* Relationships */
'&lt;CONNECTORS&gt;' 
foreach &gt;(Flow | Power | ClientServerInterface)
{ 	
	if not $reported_relationships =~ oid%wildsp then
		variable 'reported_relationships' append oid ' ' close
		newline
		'&lt;!-- ' type%legal ' name: '
		if :Name; then 
			:Name%xml
		else
			if :Short name; then
				:Short name;
			endif
		endif
		' (' type%var '_' oid ') --&gt;' newline
		'&lt;!--  path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;FUNCTION-CONNECTOR' ' UUID="' :__UUID '"&gt;' newline 
		if not :Short name; then 
			'&lt;SHORT-NAME&gt;' type;%var '_' oid '&lt;/SHORT-NAME&gt;' newline
		else
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		endif	
		if :Name; then 
			'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
		endif 
		subreport '_description' run
		'&lt;PORT-IREFS&gt;' newline
			do ~(^Comment) {
				variable 'port' write do #(){ oid } close 
				do .() { subreport '_port irefs' run }
			}
		'&lt;/PORT-IREFS&gt;' newline
		'&lt;/FUNCTION-CONNECTOR&gt;'
	endif
}
'&lt;/CONNECTORS&gt;'
endreport</report>
				<report>Report '_DesignFunctionPrototype'
/* Generating the DesignFunctionPrototype information */
local 'DFPTName' write :Short name; close
local 'DFPTShortName' write @DFPTName%toShortName close
local 'nameValue' write :Name;%xml close 
newline
'&lt;!-- ' type%minus%upper ' name: '
if @nameValue &lt;&gt; '' then
	@nameValue ' (' @DFPTShortName ')'
else
	@DFPTShortName
endif
' --&gt;' newline
'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline 
'&lt;' type%minus%upper ' UUID="' :__UUID '"&gt;' newline
'&lt;SHORT-NAME&gt;' @DFPTShortName '&lt;/SHORT-NAME&gt;' newline
if @nameValue &lt;&gt; '' then
	'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
endif
subreport '_description' run

do decompositions {
	'&lt;!-- TYPE-TREF: ' id%var ' --&gt;' newline
	'&lt;TYPE-TREF TYPE="' :Type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
}
'&lt;/' type%minus%upper '&gt;'
endreport</report>
				<report>Report '_DesignFunctionType'
if $EAXMLoids =~oid%wildsp then
	/* Generating the DesignFunctionType information */
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write :Type%minus%upper close
		local 'nameValue' write :Name;%xml close
		newline 
		'&lt;!-- ' $type_name ' name: ' 
		if @nameValue &lt;&gt; '' then
			@nameValue ' (' :FunctionName; ')'
		else
			:FunctionName;
		endif
		' --&gt;' newline
		'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
		'&lt;SHORT-NAME&gt;' :FunctionName; '&lt;/SHORT-NAME&gt;' newline
		if @nameValue &lt;&gt; '' then
			'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline;
		endif
		subreport '_description' run
		subreport '_owned-relationships' run
		'&lt;IS-ELEMENTARY&gt;' 
			if :IsElementary; then 'true' else 'false' endif 
		'&lt;/IS-ELEMENTARY&gt;' newline
		subreport '_ports' run newline
		subreport '_connectors' run newline
		subreport '_parts' run newline
		'&lt;/' $type_name '&gt;'
	endif

	/* Reporting the other types */
	foreach .()
	{	
		/* Requirements objects */
		/*		
		if type =~'*Requirement' then
			subreport '_requirement' run
		endif
		*/
		/* Port types */
		if type =~ '*Port' then
			do :Type { _data-type_details() }
		endif
	}
endif
endreport</report>
				<report>_DesignFunctionType\ with\ package\ structure()
/* Reporting the DesignFunctionType */
subreport '_DesignFunctionType' run 
</report>
				<report>_DesignLevel\ with\ package\ structure()
newline;
local 'type_name' write 'FUNCTIONAL-DESIGN-ARCHITECTURE' close
local 'nameValue' write :Name;1%xml close 
local 'descriptionValue' write :Description;1%xml close 
'&lt;!-- ' @type_name ' name: ' 
if @nameValue &lt;&gt; '' then
	@nameValue ' (' :Short name;1%var ')'
else
	:Short name;1%var
endif
' --&gt;' newline
'&lt;' @type_name ' UUID="' :__UUID;1 '"&gt;' newline
'&lt;SHORT-NAME&gt;' :Short name;1 '&lt;/SHORT-NAME&gt;' newline
if @nameValue &lt;&gt; '' then
	'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
endif
if @descriptionValue &lt;&gt; '' then
	'&lt;OWNED-COMMENTS&gt;' newline
	'&lt;COMMENT&gt;' newline
	'&lt;BODY&gt;' @descriptionValue '&lt;/BODY&gt;' newline
	'&lt;/COMMENT&gt;' newline
	'&lt;/OWNED-COMMENTS&gt;' newline
endif

/* Generating TYPE-TREF information */
local 'DF_type_name' write type;%minus%upper close
'&lt;!-- TYPE-TREF name: ' :FunctionName; ' --&gt;' newline
'&lt;TYPE-TREF TYPE="' @DF_type_name '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
'&lt;/' @type_name '&gt;' </report>
				<report>Report '_direction'
/* Generating the direction property for the port */
'&lt;DIRECTION&gt;' 
if type =~ 'InOut*' then
	'INOUT'
else
	if type =~ 'In*' then	
		'IN'
	else
		'OUT'
	endif 
endif
'&lt;/DIRECTION&gt;' newline
endreport</report>
				<report>_parseFunctions()

variable 'mainfunction' write ' ' close /* var to collect the port data */
variable 'file' write
	variable 'sim' oid; read 
close
@functionFound = 'F'			
@systemFound = 'F'

do $file {  /* analyze the content line by line */
	if @functionFound  &lt;&gt; 'F' then
		@ix = '1'
		@correctFunction = 'F' /* to remove functions added by Simulink */
		do id%spaces {
			if id &lt;&gt; '' then
				if id = 'Name' then @correctFunction = 'T' endif
				if @ix = '2' and @correctFunction = 'T' then
					variable 'mainfunction' append @functionFound id%remQuote; ' ' close
					@functionFound = 'F' 								
				endif
				@ix++%null
			endif
		}
		if @correctFunction = 'F' then @functionFound = 'F' endif
	endif			
	if id =~ '*BlockType*' and @systemFound = 'T' then
		do id%spaces {
			if id = 'ModelReference' then @functionFound = 'Function_' endif /* function found */
		}
	else 			
		if id =~ '*System*{*' then
			@systemFound = 'T'
		endif 
	endif
}</report>
				<report>_parsePorts()
variable 'handled' append oid ' ' close /* function added to handled */
variable 'function' oid write ' ' close /* var to collect the port data */
variable 'file' write
	variable 'sim' oid; read 
close
@portFound = 'F'	
@systemFound = 'F'

do $file {  /* analyze the content line by line */
	if @portFound &lt;&gt; 'F' then
		@ix = '1'
		do id%spaces {
			if id &lt;&gt; '' then
				if @ix = '2' then
					variable 'function' oid;2 append @portFound id%remQuote; ' ' close
					@portFound = 'F' 								
				endif
				@ix++%null
			endif
		}
	endif			
	if id =~ '*BlockType*' and @systemFound = 'T' then
		do id%spaces {
			if id = 'Inport' then @portFound = 'InPort_' endif /* inport found */
			if id = 'Outport' then @portFound = 'OutPort_' endif /* outport found */
		}
	else 			
		if id =~ '*System*{*' then
			@systemFound = 'T'
		endif 
	endif
}</report>
				<report>_ParsingTranslators()

_translators()

/* Translator for translating the white spaces into newlines */
to '%spaces
/\s+/ $\
'
endto

to '%remQuote
" $'
endto



</report>
				<report>Report '_parts'
'&lt;PARTS&gt;'
foreach .(DesignFunctionPrototype)
{	
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		subreport '_DesignFunctionPrototype' run 
	endif
}
'&lt;/PARTS&gt;'
endreport</report>
				<report>Report '_port irefs'
/* Generating the Port irefs */
'&lt;PORT-IREF&gt;' newline
if type = 'DesignFunctionPrototype' then
	/* Generates the Function-Prototype reference */
	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
	'&lt;FUNCTION-PROTOTYPE-REF TYPE="DESIGN-FUNCTION-PROTOTYPE"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-REF&gt;' newline
endif

/* Comment line starts */
'&lt;!-- ' 
if ((type =~ '*Flow*') or (type =~ '*ClientServerInterface*') or (type =~ '*Power*')) then
  type ' name: ' :Short name; 
else
	if type =~ '*Prototype' then
		do decompositions {
			foreach .(*Port) {
				if oid = $port then
					type ' name: ' :Short name;
				endif
			}
		}
	else
		type ' name: ' :Short name;
	endif
endif
' --&gt;' newline
/* Comment line ends */

/* Generates the Function-Port reference */
'&lt;FUNCTION-PORT-REF TYPE="' 
if ((type =~ '*Flow*') or (type =~ '*ClientServerInterface*') or (type =~ '*Power*')) then
	if type =~'*Flow*' then
		'FUNCTION-FLOW-PORT'
	endif
	if type =~'*ClientServerInterface*' then
		'FUNCTION-CLIENT-SERVER-PORT'
	endif
	if type =~'*Power*' then
		'FUNCTION-POWER-PORT'
	endif
else
	if type;1 =~'*Flow*' then
		'FUNCTION-FLOW-PORT'
	endif
	if ((type;1 =~'*ClientPort') Or (type;1 =~'*ServerPort') or (type;1 =~'*Client') Or (type;1 =~'*Server')) then
		'FUNCTION-CLIENT-SERVER-PORT'
	endif
	if type;1 =~'*Power*' then
		'FUNCTION-POWER-PORT'
	endif
endif
'"&gt;' 

if type =~ '*Prototype' then
	do decompositions {
		foreach .(*Port) {
			if oid = $port then
				variable oid '_path' read 
			endif
		}
	}
else
	/* Type is the Port object */
	if type =~ '*Port' then
		variable oid '_path' read 
	endif
endif
'&lt;/FUNCTION-PORT-REF&gt;' newline
'&lt;/PORT-IREF&gt;' newline
endreport</report>
				<report>Report '_port properties'
/* Generating the port properties */
if :Name; then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
subreport '_description' run

/* Flow ports */
if (type =~ '*Flow*') then
	subreport '_direction' run
	subreport '_dataTypeReference' run
endif
/* Power ports */
if type =~ '*Power*' then
	subreport '_dataTypeReference' run
endif
/* Client/Server ports */
if ((type =~ 'ClientPort') or (type =~ 'ServerPort')) then
	subreport '_client-server properties' run
endif
endreport</report>
				<report>Report '__LiveCheck'

_translators()
$warnings = '0'
$LiveCheck = 'T'
_checkings()

if $warnings = '0' then
	'No warnings' newline
endif

endreport</report>
				<constraints>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_OutPortGroup_user_3463131108"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ADLInFlowPort_user_3402566388"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_InPortGroup_user_3463130898"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
				<icon offset="25,20" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="90" version="1.2" width="95" xmlns="http://www.w3.org/2000/svg">
						<rect fill="rgb(255,224,255)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="25" y="20"></rect>
					</svg>
				</icon>
			</graph>
		</decomposition>
		<constraints>
			<uniqueness>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
		</constraints>
		<icon offset="36,16" xmlns="http://www.metacase.com/icon">
			<svg baseProfile="tiny" height="53" version="1.2" width="73" xmlns="http://www.w3.org/2000/svg">
				<polygon fill="rgb(255,255,255)" points="73,16 53,22.3333 66.333,35" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="56" x2="49.3333" y1="33" y2="39.6667"></line>
				<line stroke="rgb(0,0,0)" stroke-width="1" x1="42.6667" x2="36" y1="46.3333" y2="53"></line>
			</svg>
		</icon>
	</graph>
	<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
	<graph id="Graph_AttributeQuantificationConstraint_user_3506854554" type="Graph_AttributeQuantificationConstraint_user_3506854554" typeName="BehaviorConstraintAttributeQuantification">
		<description>Attribute quantification constraints are concerned with the value conditions of attributes underlying a behavior on a timeline. They are useful for declaring the variables (e.g. the input-, output- and internal variables of a function), their expected values and logical relations. An attribute quantification constraint can be expressed either by simple equations like F = m*a, V &gt;= 90, or dynamics models. When necessary, the straints on computational operations for data transformations and value assignment can be declared through the computation constraints (ComputationConstraint).</description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="azs4kx" name="Short name" unique="false">
			<property href="#Property_2ECUName_user_3310972947"></property>
		</slot>
		<slot id="b1jx52" name="Name" unique="false">
			<property href="#Property_Name_sysadmin_3536998876"></property>
		</slot>
		<slot id="b0mhyv" name="Description" unique="false">
			<property href="#Property_2Description_user_3310902697"></property>
		</slot>
		<identReport>_name()</identReport>
		<object id="Object_Attribute_sysadmin_3508150739" type="Object_Attribute_sysadmin_3508150739" typeName="Attribute">
			<description>Attribute denotes a parameter or argument of a behavior constraint specification. An attribute can be a constant, simple, or complex data, given by the corresponding EAST-ADL data types (EADataType) for the related meta-information like unit, valid range, required accuracy, etc. </description>
			<superType>
				<object id="Object_BehaviorInstantiationParameter_sysadmin_3508150622" type="Object_BehaviorInstantiationParameter_sysadmin_3508150622" typeName="_BehaviorConstraintParameter">
					<description></description>
					<superType>
						<object id="Object_Identifiable_sysadmin_3507928462" type="Object_Identifiable_sysadmin_3507928462" typeName="_Identifiable">
							<description>Abstract element</description>
							<slot id="aqc5qu" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="ap2mpd" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="arc61z" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<identProp slotID="ap2mpd"></identProp>
						</object>
					</superType>
					<identProp slotID="ap2mpd"></identProp>
					<objectSymbol offset="21,27" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="35,48 271,48 271,132 35,132 35,48" targetPointX="153" targetPointY="90" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="132.802" version="1.2" width="280" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="47" y="32">
								&lt;&lt;AttributeQuantificationConstraint&gt;&gt;
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="17" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="232" x="37" y="53">
								ReportTextSource::Name
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="script" font-size="14" font-style="normal" font-weight="bold" height="19" sym:characterBackgroundFill="none" sym:textboxFill="rgb(255,255,255)" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="19" x="31" y="27">
								f(x)
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="31,42 26,50.9802 26,77.9207 21,86.9009 26,95.8811 26,122.822 31,131.802 31,131.802" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<polyline fill="none" points="270,42 275,51.0802 275,78.3207 280,87.4009 275,96.4811 275,123.722 270,132.802 270,132.802" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="54" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="229" x="37" y="74">
								ReportTextSource:if :attribute; then
	'attribute [' :attribute ']'
	
	if :quantification; then
		'quantification [' :quantification ']'
	endif
	
 else
	'&lt;No attribute declared&gt;'
endif


								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="53,37" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="48" version="1.2" width="75" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="11" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="22" x="53" y="37"></rect>
						</svg>
					</icon>
				</object>
			</superType>
			<slot id="a5wzat" name="type" unique="false">
				<property href="#Property_type_sysadmin_3548118359"></property>
			</slot>
			<slot id="a1ge15" name="isExternVisible" unique="false">
				<property id="Property_isExternVisible_user_3506854935" type="Property_isExternVisible_user_3506854935" typeName="isExternVisible">
					<description></description>
					<dataType>
						<simpleType>Boolean</simpleType>
					</dataType>
					<defaultValue></defaultValue>
				</property>
			</slot>
			<slot id="a7zhc9" name="visibleThroughFunctionPort" unique="false">
				<property id="Property_visibleThroughFunctionPort_sysadmin_3548176708" type="Property_visibleThroughFunctionPort_sysadmin_3548176708" typeName="visibleThroughFunctionPort">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_FunctionPort_user_3463141388"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_OutPowerPort_user_3461402381"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object__ClientServerPort_sysadmin_3615023373"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object__FunctionFlowPort_sysadmin_3548244399"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_OutPortGroup_user_3463131108"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_InPortGroup_user_3463130898"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_ADLInFlowPort_user_3402566388"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a6wzjx" name="visibleThroughHardwarePin" unique="false">
				<property id="Property_VisibleThroughHardwarePin_sysadmin_3548118524" type="Property_VisibleThroughHardwarePin_sysadmin_3548118524" typeName="visibleThroughHardwarePin">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object id="Object_HDAPort_user_3463141315" type="Object_HDAPort_user_3463141315" typeName="_HardwarePin">
							<description></description>
							<slot id="gicc5z" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<identProp slotID="gicc5z"></identProp>
						</object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object id="Object_CommunicationHardwarePin_To_user_3461929103" type="Object_CommunicationHardwarePin_To_user_3461929103" typeName="CommunicationHardwarePinIn">
							<description>CommunicationHardwarePinIn represents a directed electrical connection point that can be used to define how the wire harness is logically defined. </description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="fgab3x" name="Short name" unique="false">
								<property id="Property_Pin_name_user_3460790816" type="Property_Pin_name_user_3460790816" typeName="Pin name">
									<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="focc7c" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="fiab4u" name="IsGround" unique="false">
								<property id="Property_isGround_user_3400144848" type="Property_isGround_user_3400144848" typeName="IsGround">
									<description>Indicates that the pin is connected to ground.</description>
									<dataType>
										<simpleType>Boolean</simpleType>
									</dataType>
									<defaultValue></defaultValue>
								</property>
							</slot>
							<slot id="fmab6i" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.969" targetPointY="64.9689" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<line stroke="rgb(0,0,0)" stroke-width="2" x1="110.25" x2="120" y1="65" y2="65">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="rgb(128,128,128)" points="97.5,54.5 97.5,75.5 114,65" stroke="rgb(0,0,0)" stroke-width="0">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
										I
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
							<icon offset="90,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
									<line stroke="rgb(0,0,0)" stroke-width="2" x1="117" x2="130" y1="70" y2="70"></line>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="118" y="50">I</textArea>
									<polygon fill="rgb(128,128,128)" points="100,56 100,84 122,70" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_CommunicationHardwarePinInOut_sysadmin_3609658631" type="Object_CommunicationHardwarePinInOut_sysadmin_3609658631" typeName="CommunicationHardwarePinInOut">
							<description>CommunicationHardwarePinInOut represents a bidirected electrical connection point that can be used to define how the wire harness is logically defined. </description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="gj70c2" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="gk70cq" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="gl70dl" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="gm70dx" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="80,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="109.75,39.75 139.75,39.75 139.75,69.75 109.75,69.75 109.75,39.75" targetPointX="124.75" targetPointY="54.75" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="100" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="80" y="70">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="110" y="40">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<g fill="rgb(128,128,128)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="19" sym:width="20" sym:x="1.15125e2" sym:y="4.5625e1">
										<polygon fill="rgb(128,128,128)" points="122.917,45.625 115.125,55.125 122.917,64.625" stroke="rgb(0,0,0)" stroke-width="0">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<polygon fill="rgb(128,128,128)" points="127.333,45.625 135.125,55.125 127.333,64.625" stroke="rgb(0,0,0)" stroke-width="0">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</g>
								</svg>
							</objectSymbol>
							<icon offset="40,40" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="80" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="40" y="40"></rect>
									<g fill="rgb(128,128,128)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="30" sym:width="30" sym:x="4.5e1" sym:y="4.5e1">
										<polygon fill="rgb(128,128,128)" points="56.6886,45 45,60 56.6886,75" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
										<polygon fill="rgb(128,128,128)" points="63.3114,45 75,60 63.3114,75" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
									</g>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_CommunicationHardwarePin_From_user_3461928850" type="Object_CommunicationHardwarePin_From_user_3461928850" typeName="CommunicationHardwarePinOut">
							<description>CommunicationHardwarePinOut represents a directed electrical connection point that can be used to define how the wire harness is logically defined. </description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="f9aapg" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="fhccd5" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="fbaaqo" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="ffaasb" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="90,50 120.25,50 120.25,80.25 90,80.25 90,50" targetPointX="105.125" targetPointY="65.125" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
										O
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<line stroke="rgb(0,0,0)" stroke-width="2" x1="90" x2="99.75" y1="65" y2="65">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="rgb(128,128,128)" points="99.75,54.5 99.75,75.5 116.25,65" stroke="rgb(0,0,0)" stroke-width="0">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
								</svg>
							</objectSymbol>
							<icon offset="90,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="91" y="51">O</textArea>
									<line stroke="rgb(0,0,0)" stroke-width="2" x1="90" x2="103" y1="70" y2="70"></line>
									<polygon fill="rgb(128,128,128)" points="103,56 103,84 125,70" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_IOHardwarePin_To_user_3461931130" type="Object_IOHardwarePin_To_user_3461931130" typeName="IOHardwarePinIn">
							<description>IOHardwarePin represents a directed electrical connection point for digital or analog I/O.</description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="g9ae80" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="giccet" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="gbae8s" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="ggaear" name="Type" unique="false">
								<property id="Property_IOHardwarePinKind_user_3460790758" type="Property_IOHardwarePinKind_user_3460790758" typeName="IOHardwarePinKind">
									<description>Defines whether the IOHardwarePin is digital, analog, PWM (Pulse Width Modulated) or other</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string>digital</string>
									</defaultValue>
									<widget>Fixed List</widget>
									<listValues>
										<string>digital</string>
										<string>analog</string>
										<string>pwm</string>
										<string>other</string>
									</listValues>
								</property>
							</slot>
							<slot id="gfaeac" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="90,50 120.25,50 120.25,80.25 90,80.25 90,50" targetPointX="105.125" targetPointY="65.125" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
										ReportTextSource:id
if :Type; then ' : ' :Type; endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
										I
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<line stroke="rgb(128,128,255)" stroke-width="2" x1="110.25" x2="120" y1="65" y2="65">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="rgb(128,128,255)" points="97.5,54.5 97.5,75.5 114,65" stroke="rgb(0,0,0)" stroke-width="0">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
								</svg>
							</objectSymbol>
							<icon offset="90,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="118" y="50">I</textArea>
									<line stroke="rgb(0,0,0)" stroke-width="2" x1="117" x2="130" y1="70" y2="70"></line>
									<polygon fill="rgb(128,128,255)" points="100,56 100,84 122,70" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_IOHardwarePinInOut_sysadmin_3609659437" type="Object_IOHardwarePinInOut_sysadmin_3609659437" typeName="IOHardwarePinInOut">
							<description>IOHardwarePin represents a bi-directional electrical connection point for digital or analog I/O.</description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="gn71xv" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="go71y2" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="gp71yh" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="gq7201" name="Type" unique="false">
								<property href="#Property_IOHardwarePinKind_user_3460790758"></property>
							</slot>
							<slot id="gr71zi" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="20,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="49.75,29.75 79.75,29.75 79.75,59.75 49.75,59.75 49.75,29.75" targetPointX="64.75" targetPointY="44.75" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="90" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="20" y="60">
										ReportTextSource:id
if :Type; then ' : ' :Type; endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="50" y="30">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<g fill="rgb(128,128,255)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="19" sym:width="20" sym:x="5.5e1" sym:y="3.55e1">
										<polygon fill="rgb(128,128,255)" points="62.7924,35.5 55,45 62.7924,54.5" stroke="rgb(0,0,0)" stroke-width="0">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<polygon fill="rgb(128,128,255)" points="67.2076,35.5 75,45 67.2076,54.5" stroke="rgb(0,0,0)" stroke-width="0">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</g>
								</svg>
							</objectSymbol>
							<icon offset="40,30" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="70" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="40" y="30"></rect>
									<g fill="rgb(128,128,255)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="30" sym:width="30" sym:x="4.5e1" sym:y="3.5e1">
										<polygon fill="rgb(128,128,255)" points="56.6886,35 45,50 56.6886,65" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
										<polygon fill="rgb(128,128,255)" points="63.3114,35 75,50 63.3114,65" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
									</g>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_IOHardwarePin_From_user_3461930920" type="Object_IOHardwarePin_From_user_3461930920" typeName="IOHardwarePinOut">
							<description>IOHardwarePin represents a directed electrical connection point for digital or analog I/O.</description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="g1adw9" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="gacchb" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="g3adx3" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="g8adyy" name="Type" unique="false">
								<property href="#Property_IOHardwarePinKind_user_3460790758"></property>
							</slot>
							<slot id="g7adyi" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.969" targetPointY="64.9689" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
										ReportTextSource:id 
if :Type; then ' : ' :Type; endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<line stroke="rgb(128,128,255)" stroke-width="2" x1="90" x2="99.75" y1="65" y2="65">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="rgb(128,128,255)" points="99.75,54.5 99.75,75.5 116.25,65" stroke="rgb(0,0,0)" stroke-width="0">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
										O
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
							<icon offset="90,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="91" y="51">O</textArea>
									<line stroke="rgb(0,0,0)" stroke-width="2" x1="90" x2="103" y1="70" y2="70"></line>
									<polygon fill="rgb(128,128,255)" points="103,56 103,84 125,70" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_PowerHardwarePin_To_user_3461930006" type="Object_PowerHardwarePin_To_user_3461930006" typeName="PowerHardwarePinIn">
							<description>A PowerHardwarePinIn provides a point for consuming energy.</description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="fnacim" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="fvccl7" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="fpacje" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="ftackp" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="89.75,49.75 119.75,49.75 119.75,79.75 89.75,79.75 89.75,49.75" targetPointX="104.75" targetPointY="64.75" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(224,255,224)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<line stroke="rgb(0,128,0)" stroke-width="2" x1="109.5" x2="120" y1="65.75" y2="65.75">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="rgb(0,128,0)" points="97.5,54.5 97.5,75.5 114,65" stroke="rgb(0,0,0)" stroke-width="0">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
										I
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
							<icon offset="90,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(224,255,224)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="118" y="50">I</textArea>
									<line stroke="rgb(0,128,0)" stroke-width="2" x1="116" x2="130" y1="71" y2="71"></line>
									<polygon fill="rgb(0,128,0)" points="100,56 100,84 122,70" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_PowerHardwarePinInOut_sysadmin_3609658862" type="Object_PowerHardwarePinInOut_sysadmin_3609658862" typeName="PowerHardwarePinInOut">
							<description>A PowerHardwarePinInOut provides a point for providing or consuming energy.</description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="a071al" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="a171at" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="a271ch" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="a371cr" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="49.75,19.75 79.75,19.75 79.75,49.75 49.75,49.75 49.75,19.75" targetPointX="64.75" targetPointY="34.75" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="80" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="20" y="50">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(224,255,224)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="50" y="20">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<g fill="rgb(0,128,0)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="19" sym:width="20" sym:x="5.5125e1" sym:y="2.5625e1">
										<polygon fill="rgb(0,128,0)" points="62.9174,25.625 55.125,35.125 62.9174,44.625" stroke="rgb(0,0,0)" stroke-width="0">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<polygon fill="rgb(0,128,0)" points="67.3326,25.625 75.125,35.125 67.3326,44.625" stroke="rgb(0,0,0)" stroke-width="0">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</g>
								</svg>
							</objectSymbol>
							<icon offset="30,30" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="70" version="1.2" width="70" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(224,255,224)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="30" y="30"></rect>
									<polygon fill="rgb(0,128,0)" points="46.6886,35 35,50 46.6886,65" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
									<polygon fill="rgb(0,128,0)" points="53.3114,35 65,50 53.3114,65" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object id="Object_PowerHardwarePin_From_user_3461930168" type="Object_PowerHardwarePin_From_user_3461930168" typeName="PowerHardwarePinOut">
							<description>A PowerHardwarePinOut provides a point for provding energy.</description>
							<superType>
								<object href="#Object_HDAPort_user_3463141315"></object>
							</superType>
							<slot id="fuacrp" name="Short name" unique="false">
								<property href="#Property_Pin_name_user_3460790816"></property>
							</slot>
							<slot id="g2ccol" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="fwacse" name="IsGround" unique="false">
								<property href="#Property_isGround_user_3400144848"></property>
							</slot>
							<slot id="g0actp" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="89.75,49.75 119.75,49.75 119.75,79.75 89.75,79.75 89.75,49.75" targetPointX="104.75" targetPointY="64.75" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="rgb(224,255,224)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<polygon fill="rgb(0,128,0)" points="100.5,54.5 100.5,75.5 117,65" stroke="rgb(0,0,0)" stroke-width="0">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<line stroke="rgb(0,128,0)" stroke-width="2" x1="90.75" x2="101.25" y1="65.75" y2="65.75">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="30" x="90" y="50">
										O
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
							<icon offset="90,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(224,255,224)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="90" y="50"></rect>
									<polygon fill="rgb(0,128,0)" points="104,56 104,84 126,70" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="91" y="51">O</textArea>
									<line stroke="rgb(0,128,0)" stroke-width="2" x1="91" x2="105" y1="71" y2="71"></line>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="40,13" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="125,17 143,17 143,34 125,34 125,17" targetPointX="133.809" targetPointY="25.1852" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="90" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(0,0,0)" height="17" rx="0" ry="0" stroke="none" stroke-width="1" width="19" x="121" y="13">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :isExternVisible; then 'T' endif</displayCondition>
						</metaInfo>
					</rect>
					<rect fill="rgb(255,255,255)" height="17" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="2" width="18" x="125" y="17">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :isExternVisible; then 'T' endif
</displayCondition>
						</metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="55" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="190" x="40" y="35">
						ReportTextSource:id ' : ' 
if :type; then 
	:type	
else
	'&lt;undefined type&gt;'	
endif 
newline
if :isExternVisible; then
	if :visibleThroughFunctionPort; then 
		'visibleThroughFunctionPort' ' =: { '		
		:visibleThroughFunctionPort
		'  }'
		newline
	endif 
	if :visibleThroughHardwarePin 
	then 
		'visibleThroughHardwarePin' ' =: { ' 
				:visibleThroughHardwarePin
		'  }'
		newline
	endif 
else
	'isExternVisible := ' 'FALSE'
	newline
endif
if :type; then 
	do :type	{	
		:Short name;	
		if :value; then 
			'[default] := [' :value	']'	
		else
			'[min, max] := [' 
			:Min 
			', ' 
			:Max 
			']'
			newline				 
		endif
	}	
endif 
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<rect fill="rgb(255,255,255)" height="17" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="18" x="125" y="17">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if not :isExternVisible; then 'T' endif</displayCondition>
						</metaInfo>
					</rect>
					<image height="10" ns:href="Object_Attribute_sysadmin_3508150739-1.png" sym:scale="0.107527,0.116279" width="10" x="129" y="20">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</image>
				</svg>
			</objectSymbol>
			<icon offset="50,50" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="136" version="1.2" width="143" xmlns="http://www.w3.org/2000/svg">
					<image height="86" ns:href="Object_Attribute_sysadmin_3508150739-Icon-1.png" sym:scale="1,1" width="93" x="50" y="50"></image>
				</svg>
			</icon>
		</object>
		<object id="Object_Quantification_sysadmin_3508139708" type="Object_Quantification_sysadmin_3508139708" typeName="Quantification">
			<description>A quantification is a statement over the attributes about their value condition or relation.</description>
			<superType>
				<object href="#Object_Identifiable_sysadmin_3507928462"></object>
			</superType>
			<slot id="a0m45y" name="subQuantification" unique="false">
				<property type="Property_subQuantification_sysadmin_3508393930" typeName="subQuantification">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Quantification_sysadmin_3508139708"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object id="Object_LogicalEvent_sysadmin_3508139994" type="Object_LogicalEvent_sysadmin_3508139994" typeName="LogicalEvent">
							<description>Logical Event is the modeling construct for the declarations of the value conditions that, when fulfilled, may trigger state transitions. If a logical event is externally visible (isExternVisible == true), it is disseminated through function ports.</description>
							<superType>
								<object href="#Object_Quantification_sysadmin_3508139708"></object>
							</superType>
							<slot id="a2gh8b" name="isExternVisible" unique="false">
								<property href="#Property_isExternVisible_user_3506854935"></property>
							</slot>
							<slot id="a3zhid" name="visibleThroughFunctionPort" unique="false">
								<property href="#Property_visibleThroughFunctionPort_sysadmin_3548176708"></property>
							</slot>
							<slot id="a4zhiy" name="visibleThroughHardwarePin" unique="false">
								<property href="#Property_VisibleThroughHardwarePin_sysadmin_3548118524"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="20,20 20,120 250,120 250,40 230,20 20,20" targetPointX="135" targetPointY="70" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="120" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="1.00427" x2="1" y1="0.00495062" y2="1">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="1" stop-color="rgb(224,255,224)"></stop>
										</linearGradient>
									</defs>
									<polygon fill="url(#gradient1)" points="20,20 20,120 250,120 250,40 230,20" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="230" x="20" y="30">
										ReportTextSource:if :operand; then 
	'operand' ' := { '  :operand
	' }'
	newline
	'expression' ' := { '  
	:expression
	' }'
	newline
endif

if :isExternVisible; then
	'isExternVisible' ' := ' 'TRUE'
	newline 
	if :visibleThroughFunctionPort; then 
		'visibleThroughFunctionPort' ' := { ' 
			:visibleThroughFunctionPort
			' }'
	else
		if :visibleThroughHardwarePin; then 
			'visibleThroughHardwarePin' ' := { '
			:visibleThroughHardwarePin
			' }'
		else
			'&lt;Undefined structure mapping&gt;'
		endif 
	 endif
else
	'isExternVisible' ' := ' 'FALSE'
endif

										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<g fill="none" stroke="none" stroke-width="1" sym:height="16" sym:width="26.8125" sym:x="2.65625e1" sym:y="2.0e1">
										<textArea display-align="center" fill="rgb(0,0,0)" font-family="script" font-size="16" font-style="normal" font-weight="bold" height="16" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="10.0625" x="26.5625" y="20">
											R
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</textArea>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="36.625" x2="43" y1="29" y2="29">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</line>
										<polyline fill="none" points="39.3125,26 44,29 39.3125,32" stroke="rgb(0,0,0)" stroke-width="1">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polyline>
										<polygon fill="rgb(128,0,0)" points="52.1,23.5 47,29.0556 49.55,29.0556 47,33.5 53.375,27.9445 50.825,27.9445" stroke="rgb(128,0,0)" stroke-width="1">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polygon>
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</g>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="230" x="20" y="20">
										ReportTextSource:'LogicalEvent' newline
id

										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<line stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="0" x1="20" x2="250" y1="60" y2="60">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polyline fill="none" points="230,20 230,40 250,40" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polyline>
								</svg>
							</objectSymbol>
							<icon offset="80,73" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="133" version="1.2" width="145" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(255,255,255)" points="80,73 123,73 135,86 135,133 80,133" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="script" font-size="48" font-style="normal" font-weight="bold" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="24" x="80" y="87">R</textArea>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="104" x2="124" y1="107" y2="107"></line>
									<polyline fill="none" points="114,97 124,107 114,117" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
									<polygon fill="rgb(128,0,0)" points="141,86 125,102.667 133,102.667 125,116 145,99.3333 137,99.3333" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
									<polygon fill="none" points="123,73 123,86 135,86" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								</svg>
							</icon>
						</object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a2m7ve" name="expression" unique="false">
				<property id="Property_Expression_user_3506854805" type="Property_Expression_user_3506854805" typeName="expression">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="a4map2" name="timeCondition" unique="false">
				<property type="Property_timeCondition_sysadmin_3508397833" typeName="timeCondition">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object id="Object_LogicalTimeCondition_sysadmin_3508139785" type="Object_LogicalTimeCondition_sysadmin_3508139785" typeName="LogicalTimeCondition">
							<description>The logical time condition is an abstract notion of time for the descriptions of behavior constraints. Declarations of such time conditions can be used to define the time basis of continuous- and discrete-time dynamics or the timing concerns in statemachine or data-processing related behaviors.</description>
							<superType>
								<object href="#Object_Identifiable_sysadmin_3507928462"></object>
							</superType>
							<slot id="a0m9p1" name="isLogicalTimeSuspended" unique="false">
								<property type="Property_isLogicalTimeSuspended_user_3506172955" typeName="isLogicalTimeSuspended">
									<description></description>
									<dataType>
										<simpleType>Boolean</simpleType>
									</dataType>
									<defaultValue></defaultValue>
								</property>
							</slot>
							<slot id="a6urzs" name="lower" unique="false">
								<property type="Property_lower_sysadmin_3508595996" typeName="lower">
									<description></description>
									<dataType>
										<object id="Object_TimeDuration_sysadmin_3508592970" type="Object_TimeDuration_sysadmin_3508592970" typeName="TimeDuration">
											<description>CseCodeType 
0:	1 µsec	Time	
1:	10 µsec	Time	
2:	100 µsec	Time	
3:	1 msec	Time	
4:	10 msec	Time	
5:	100 msec		Time	
6:	1 sec	Time	
7:	10 sec	Time	
8:	1 min	Time	
9:	1 h	Time	
10:	1 d	Time	

100:	Angular degrees	Angle	
101:	Revolutions 360 degrees	Angle	
102:	Cycle 720 degrees	Angle	e.g. in case of IC engines
103:	Cylinder segment	Combustion	e.g. in case of IC engines
998:	When frame available	Time	Source defined in the ASAP 2 keyword, FRAME
999:	Always if there is new value	Calculation of a new upper range limit after receiving a new partial value, e.g. when calculating a complex trigger condition
1000:	Non deterministic	Without fixed scaling

If, for example, the value in swCseCodeFactor is 360 and the value in swCseCode is 100, this is equivalent to the value 1 in swCseCodeFactor and the value 101 in swCseCode.

CseCodeType is from AUTOSAR and MSR/ASAM.

Note that we have set the cseCodeType for 1 µsec to 0 (error in AUTOSAR R3). And have changed cseCodeType 2 to 100 µsec (error in MSR).
</description>
											<superType>
												<object href="#Object_Identifiable_sysadmin_3507928462"></object>
											</superType>
											<slot id="a0uqfo" name="cseCode" unique="false">
												<property type="Property_CSECode_user_3506249543" typeName="cseCode">
													<description></description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="a1uqhy" name="cseCodeFactor" unique="false">
												<property type="Property_CSECodeFactor_user_3506250123" typeName="cseCodeFactor">
													<description></description>
													<dataType>
														<simpleType>Number</simpleType>
													</dataType>
													<defaultValue>
														<int>1</int>
													</defaultValue>
												</property>
											</slot>
											<slot id="a2uqlw" name="value" unique="false">
												<property type="Property_Value_user_3467454996" typeName="value">
													<description>Holds the actual value of the user attribute identified by 'key'. </description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<widget>Input Field</widget>
												</property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
											<objectSymbol offset="30,18" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="40,100 220,100 220,20 40,20 40,100" targetPointX="130" targetPointY="60" usesGrid="true"></defaultConnectable>
												<svg baseProfile="tiny" height="100" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
													<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="rgb(240,255,248)" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="180" x="40" y="20">
														ReportTextSource:'cseCode= ' :cseCode
newline
'cseCodeFactor= ' :cseCodeFactor
newline 
'value= ' :value
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="40" y="20">
														ReportTextSource:'&lt;&lt;TimeDuration&gt;&gt;' newline
id
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<polyline fill="none" points="40,20 35,27.9997 35,52.0001 30,60 35,67.9998 35,92.0002 40,100 40,100" stroke="rgb(0,0,0)" stroke-width="1">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</polyline>
													<polyline fill="none" points="220,20 225,27.9997 225,52.0001 230,60 225,67.9998 225,92.0002 220,100 220,100" stroke="rgb(0,0,0)" stroke-width="1">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</polyline>
													<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="15" sym:width="23" sym:x="4.1e1" sym:y="1.8e1">
														<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="14.634" sym:width="13.9394" sym:x="5.006055e1" sym:y="1.8e1">
															<ellipse cx="57.0303" cy="25.317" fill="rgb(255,255,255)" rx="6.96972" ry="7.317" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
																<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
															</ellipse>
															<polyline fill="none" points="57.0303,21.6586 57.0303,25.317 60.5151,28.9755 60.5151,28.9755" stroke="rgb(0,0,0)" stroke-width="1">
																<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
															</polyline>
															<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
														</g>
														<g fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="14.634" sym:width="13.9394" sym:x="4.1e1" sym:y="1.8366e1">
															<ellipse cx="47.9697" cy="25.683" fill="rgb(255,255,255)" rx="6.96972" ry="7.317" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
																<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
															</ellipse>
															<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
														</g>
														<polyline fill="none" points="47.9697,21.6586 47.9697,25.683 52.8485,25.683 53.5455,25.683" stroke="rgb(0,0,0)" stroke-width="1">
															<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
														</polyline>
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</g>
												</svg>
											</objectSymbol>
											<icon offset="34,60" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="101" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
													<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="41" sym:width="66" sym:x="3.4e1" sym:y="6.0e1">
														<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="40" sym:width="40" sym:x="6.0e1" sym:y="6.0e1">
															<ellipse cx="80" cy="80" fill="rgb(255,255,255)" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
															<polyline fill="none" points="80,70 80,80 90,90 90,90" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
														</g>
														<g fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="40" sym:width="40" sym:x="3.4e1" sym:y="6.1e1">
															<ellipse cx="54" cy="81" fill="rgb(255,255,255)" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
														</g>
														<polyline fill="none" points="54,70 54,81 68,81 70,81" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
													</g>
												</svg>
											</icon>
										</object>
									</dataType>
								</property>
							</slot>
							<slot id="a7us2m" name="width" unique="false">
								<property type="Property_width_sysadmin_3508596046" typeName="width">
									<description></description>
									<dataType>
										<object href="#Object_TimeDuration_sysadmin_3508592970"></object>
									</dataType>
								</property>
							</slot>
							<slot id="a8uryg" name="upper" unique="false">
								<property type="Property_upper_sysadmin_3508595972" typeName="upper">
									<description></description>
									<dataType>
										<object href="#Object_TimeDuration_sysadmin_3508592970"></object>
									</dataType>
								</property>
							</slot>
							<slot id="a4ma0e" name="startPointReference" unique="false">
								<property type="Property_startPointReference_sysadmin_3508397719" typeName="startPointReference">
									<description></description>
									<dataType>
										<object id="Object_EventOccurrence__sysadmin_3508150778" type="Object_EventOccurrence__sysadmin_3508150778" typeName="TransitionEvent">
											<description></description>
											<superType>
												<object href="#Object_BehaviorInstantiationParameter_sysadmin_3508150622"></object>
											</superType>
											<slot id="a0y5ec" name="occurredExecutionEvent" unique="false">
												<property type="Property_occurredExecutionEvent_sysadmin_3508674666" typeName="occurredExecutionEvent">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_Event_sysadmin_3508668873" type="Object_Event_sysadmin_3508668873" typeName="_Event">
															<description>An event denotes a distinct form of state change in a running system, taking place at distinct points in time called occurrence of the event. </description>
															<superType>
																<object id="Object_TimingDescription_sysadmin_3508668831" type="Object_TimingDescription_sysadmin_3508668831" typeName="_TimingDescription">
																	<description></description>
																	<superType>
																		<object href="#Object_Identifiable_sysadmin_3507928462"></object>
																	</superType>
																	<identProp slotID="ap2mpd"></identProp>
																</object>
															</superType>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataType>
													<contentsDataTypeSubtype>
														<object id="Object_EventFaultFailure_sysadmin_3615063368" type="Object_EventFaultFailure_sysadmin_3615063368" typeName="EventFaultFailure">
															<description></description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<slot id="a7mpa4" name="FaultFailure" unique="false">
																<property type="Property_FaultFailure_sysadmin_3615063230" typeName="FaultFailure">
																	<description></description>
																	<dataType>
																		<object id="Object_FaultFailure_sysadmin_3509192808" type="Object_FaultFailure_sysadmin_3509192808" typeName="FaultFailure">
																			<description>A FaultFailure represents a fault or failure on the referenced Anomal(ies). The Faultfailure condition is satisfied when a) faultFailureValue is an EAValue and at least one of the referenced anomal(ies) is equal to this value or b) when faultFailureValue is a boolean EAExpression and the referenced anomal(ies) satisfies the expression, i.e. it evaluates to true. </description>
																			<slot id="hm98yn" name="__UUID" unique="false">
																				<property href="#Property___UUID_sysadmin_3604668056"></property>
																			</slot>
																			<slot id="hhkcyz" name="Short name" unique="false">
																				<property id="Property_FaultName_sysadmin_3509186663" type="Property_FaultName_sysadmin_3509186663" typeName="ErrorName">
																					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="hn98y4" name="Name" unique="false">
																				<property href="#Property_Name_sysadmin_3536998876"></property>
																			</slot>
																			<slot id="hkro1g" name="Text" unique="false">
																				<property href="#Property_2Description_user_3310902697"></property>
																			</slot>
																			<slot id="hojy1r" name="FaultFailureValue" unique="false">
																				<property type="Property_FaultFailureValue_sysadmin_3620037775" typeName="FaultFailureValue">
																					<description>Value for the fault failure.</description>
																					<dataType>
																						<object href="#Object_Value_sysadmin_3564907198"></object>
																					</dataType>
																					<dataTypeSubtype>
																						<object href="#Object_EAExpression_sysadmin_3615038895"></object>
																					</dataTypeSubtype>
																					<dataTypeSubtype>
																						<object href="#Object_TimingExpression_sysadmin_3615039938"></object>
																					</dataTypeSubtype>
																				</property>
																			</slot>
																			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
																			<objectSymbol offset="60,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																				<defaultConnectable isSticky="true" points="90,30 60,50 60,60 90,80 180,80 210,60 210,50 180,30 90,30" targetPointX="135" targetPointY="55" usesGrid="true"></defaultConnectable>
																				<svg baseProfile="tiny" height="82" version="1.2" width="212" xmlns="http://www.w3.org/2000/svg">
																					<polygon fill="rgb(255,0,0)" points="92,32 62,52 62,62 92,82 182,82 212,62 212,52 182,32" stroke="rgb(255,0,0)" stroke-width="1">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</polygon>
																					<polygon fill="rgb(255,255,255)" points="90,30 60,50 60,60 90,80 180,80 210,60 210,50 180,30" stroke="rgb(255,0,0)" stroke-width="1">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</polygon>
																					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="130" x="70" y="30">
																						ReportTextSource:id newline
'FaultFailureValue = ' :FaultFailureValue
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																				</svg>
																			</objectSymbol>
																		</object>
																	</dataType>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="50,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="80,40 50,60 50,70 80,90 170,90 200,70 200,60 170,40 80,40" targetPointX="125" targetPointY="65" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="90" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
																	<polygon fill="rgb(255,0,0)" points="80,40 50,60 50,70 80,90 170,90 200,70 200,60 170,40" stroke="rgb(255,0,0)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polygon>
																	<polygon fill="rgb(255,255,255)" points="80,40 50,60 50,70 80,90 170,90 200,70 200,60 170,40" stroke="rgb(255,0,0)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polygon>
																	<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="130" x="60" y="40">
																		ReportTextSource:newline
id newline
if :FaultFailure; then 
	'['
	:FaultFailure;
	']'
endif
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="28" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="80,40" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 -30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>Event_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="2" sym:wordWrap="true" text-anchor="middle" width="150" x="50" y="40">
																		EventFaultFailure
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="43,30" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="90" version="1.2" width="113" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,0,0)" height="60" rx="6" ry="6" stroke="rgb(255,0,0)" stroke-width="1" width="70" x="43" y="30"></rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="41" sym:width="50" sym:x="5.3e1" sym:y="4.0e1">
																		<ellipse cx="78" cy="60.5" fill="rgb(255,255,255)" rx="25" ry="20.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																		<polyline fill="none" points="78,50.2499 78,60.5 90.5012,70.7499 90.5012,70.7499" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_EventFeatureFlaw_sysadmin_3615063161" type="Object_EventFeatureFlaw_sysadmin_3615063161" typeName="EventFeatureFlaw">
															<description></description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<slot id="a6mp5g" name="FeatureFlaw" unique="false">
																<property type="Property_FeatureFlaw_sysadmin_3615063146" typeName="FeatureFlaw">
																	<description></description>
																	<dataType>
																		<object id="Object_FeatureFlaw_sysadmin_3509607953" type="Object_FeatureFlaw_sysadmin_3509607953" typeName="FeatureFlaw">
																			<description>FeatureFlaw represents functional anomalies derivable from each foreseeable source. nonFulfilledRequirements identifies those requirements that correspond to the FeatureFlaw.</description>
																			<slot id="idc9yk" name="__UUID" unique="false">
																				<property href="#Property___UUID_sysadmin_3604668056"></property>
																			</slot>
																			<slot id="ia25m1" name="Short name" unique="false">
																				<property type="Property_FeatureFlawName_sysadmin_3509607923" typeName="FeatureFlawName">
																					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="ieca09" name="Name" unique="false">
																				<property href="#Property_Name_sysadmin_3536998876"></property>
																			</slot>
																			<slot id="ib25mq" name="Text" unique="false">
																				<property href="#Property_2Description_user_3310902697"></property>
																			</slot>
																			<slot id="iczo2w" name="nonFullfilledRequirement" unique="false">
																				<property type="Property_nonFullfilledRequirement_sysadmin_3548181076" typeName="nonFullfilledRequirement">
																					<description></description>
																					<dataType>
																						<simpleType>Collection</simpleType>
																					</dataType>
																					<contentsDataType>
																						<object href="#Object_ADLRequirement_user_3400763726"></object>
																					</contentsDataType>
																					<contentsDataTypeSubtype>
																						<object href="#Object_QualityRequirement_user_3400822352"></object>
																					</contentsDataTypeSubtype>
																				</property>
																			</slot>
																			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
																			<objectSymbol offset="60,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																				<defaultConnectable isSticky="true" points="210,74.0249 209.24,76.3115 207.076,78.25 203.837,79.5452 200.017,80 69.9834,80 66.1629,79.5452 62.9241,78.25 60.7599,76.3115 60,74.0249 60,25.9751 60.7599,23.6885 62.9241,21.7501 66.1629,20.4548 69.9834,20 200.017,20 203.837,20.4548 207.076,21.7501 209.24,23.6885 210,25.9751 210,74.0249" targetPointX="135" targetPointY="50" usesGrid="false"></defaultConnectable>
																				<svg baseProfile="tiny" height="83" version="1.2" width="213" xmlns="http://www.w3.org/2000/svg">
																					<defs>
																						<radialGradient cx="0.486667" cy="0.516667" gradientUnits="objectBoundingBox" id="gradient1" r="0.695421" sym:correctGamma="true" sym:fillType="PathFill">
																							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																							<stop offset="0.808846" stop-color="rgb(212,235,212)"></stop>
																							<stop offset="1" stop-color="rgb(169,225,169)"></stop>
																						</radialGradient>
																					</defs>
																					<rect fill="rgb(128,0,0)" height="60" rx="10" ry="6" stroke="rgb(128,0,0)" stroke-width="1" width="150" x="63" y="23">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</rect>
																					<rect fill="url(#gradient1)" height="60" rx="10" ry="6" stroke="rgb(128,0,0)" stroke-width="1" width="150" x="60" y="20">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</rect>
																					<textArea display-align="center" fill="rgb(128,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="150" x="60" y="20">
																						ReportTextSource:id
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																					<textArea display-align="before" fill="rgb(96,96,96)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="150" x="60" y="20">
																						FeatureFlaw
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																				</svg>
																			</objectSymbol>
																		</object>
																	</dataType>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="180.25,74.25 179.489,76.5461 177.321,78.4926 174.077,79.7933 170.25,80.25 40,80.25 36.1732,79.7933 32.9289,78.4926 30.7612,76.5461 30,74.25 30,26 30.7612,23.7039 32.9289,21.7574 36.1732,20.4567 40,20 170.25,20 174.077,20.4567 177.321,21.7574 179.489,23.7039 180.25,26 180.25,74.25" targetPointX="105.125" targetPointY="50.125" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="80" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
																	<defs>
																		<radialGradient cx="0.486667" cy="0.516667" gradientUnits="objectBoundingBox" id="gradient1" r="0.695421" sym:correctGamma="true" sym:fillType="PathFill">
																			<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="0.808846" stop-color="rgb(212,235,212)"></stop>
																			<stop offset="1" stop-color="rgb(169,225,169)"></stop>
																		</radialGradient>
																	</defs>
																	<rect fill="url(#gradient1)" height="60" rx="10" ry="6" stroke="rgb(128,0,0)" stroke-width="1" width="150" x="30" y="20">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="150" x="30" y="20">
																		ReportTextSource:newline
id
newline
if :FeatureFlaw; then
'['
:FeatureFlaw;
 ']'
endif
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="2" sym:wordWrap="true" text-anchor="end" width="145" x="30" y="20">
																		EventFeatureFlaw
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="28" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="30,20" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>Event_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																</svg>
															</objectSymbol>
															<icon offset="100,34" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="94" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(160,255,207)" height="60" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="100" y="34"></rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="41" sym:width="50" sym:x="1.1e2" sym:y="4.4e1">
																		<ellipse cx="135" cy="64.5" fill="rgb(255,255,255)" rx="25" ry="20.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																		<polyline fill="none" points="135,54.2499 135,64.5 147.501,74.7499 147.501,74.7499" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_EventFunction_sysadmin_3508673141" type="Object_EventFunction_sysadmin_3508673141" typeName="EventFunction">
															<description>An event of a Function refers to the triggering of the Function, i.e., when the input data is consumed. It can be used in conjunction with FunctionTrigger to define a time-driven triggering for a function. In this case the FunctionTrigger points to the EventFunction of the function and defines a triggerPolicy set to TIME. The timing constraint associated to the EventFunction provides information about the period.</description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<slot id="a2zkeo" name="Function" unique="false">
																<property id="Property_function_sysadmin_3548178696" type="Property_function_sysadmin_3548178696" typeName="Function">
																	<description></description>
																	<dataType>
																		<object href="#Object_FunctionPrototype_sysadmin_3548175745"></object>
																	</dataType>
																	<dataTypeSubtype>
																		<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
																	</dataTypeSubtype>
																	<dataTypeSubtype>
																		<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
																	</dataTypeSubtype>
																</property>
															</slot>
															<slot id="a3zkl7" name="FunctionType" unique="false">
																<property id="Property_functionType_sysadmin_3548178813" type="Property_functionType_sysadmin_3548178813" typeName="FunctionType">
																	<description></description>
																	<dataType>
																		<object id="Object_EAType_sysadmin_3541158109" type="Object_EAType_sysadmin_3541158109" typeName="EAType">
																			<description>EAType refers to the subgraph specifying the type, such as hardware component type, analysis function type, or design function type.</description>
																			<identReport>if decompositions; then
	do decompositions  {
  		if type = 'HardwareComponentType' then 
			id 
			do :Type { ' &lt;' type '&gt;' }
		else
			if type = 'AnalysisFunctionType' or type = 'DesignFunctionType' then
				id ' &lt;' :Type '&gt;'
			else
				id ' &lt;' type '&gt;'
			endif     
      endif
	}
else
	'Undefined type'
endif
</identReport>
																			<objectSymbol offset="70,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																				<defaultConnectable isSticky="true" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778 70,72.2222" targetPointX="155" targetPointY="115" usesGrid="true"></defaultConnectable>
																				<svg baseProfile="tiny" height="170" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
																					<defs>
																						<radialGradient cx="0.352941" cy="0.345454" gradientUnits="objectBoundingBox" id="gradient3" r="0.920388" sym:correctGamma="true" sym:fillType="PathFill">
																							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																							<stop offset="1" stop-color="rgb(224,255,224)"></stop>
																						</radialGradient>
																						<radialGradient cx="0.352941" cy="0.345454" gradientUnits="objectBoundingBox" id="gradient4" r="0.920388" sym:correctGamma="true" sym:fillType="PathFill">
																							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																							<stop offset="1" stop-color="rgb(240,240,240)"></stop>
																						</radialGradient>
																						<radialGradient cx="0.352941" cy="0.345454" gradientUnits="objectBoundingBox" id="gradient1" r="0.920388" sym:correctGamma="true" sym:fillType="PathFill">
																							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																							<stop offset="1" stop-color="rgb(255,175,96)"></stop>
																						</radialGradient>
																						<radialGradient cx="0.352941" cy="0.345454" gradientUnits="objectBoundingBox" id="gradient2" r="0.920388" sym:correctGamma="true" sym:fillType="PathFill">
																							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																							<stop offset="1" stop-color="rgb(192,192,255)"></stop>
																						</radialGradient>
																					</defs>
																					<polygon fill="rgb(255,255,255)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type =~ 'EnvironmentModel' { 'T' 
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<g fill="none" stroke="none" sym:height="110" sym:width="170" sym:x="7.0e1" sym:y="6.0e1">
																						<polygon fill="url(#gradient1)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(255,128,0)" stroke-width="0">
																							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																						</polygon>
																						<textArea display-align="before" fill="rgb(255,128,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="170" x="70" y="60">
																							ReportTextSource:newline
'____________________________________________________________________________________________________________________________________________________________________________________'
																							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																						</textArea>
																						<line stroke="rgb(255,128,0)" stroke-width="1" x1="70" x2="240" y1="158" y2="158">
																							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																						</line>
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'HardwareComponentType' {
	do :Type; where type = 'SensorType' { 'T'
	}
}</displayCondition>
																						</metaInfo>
																					</g>
																					<g fill="none" stroke="rgb(0,0,255)" stroke-width="0" sym:height="110" sym:width="170" sym:x="7.0e1" sym:y="6.0e1">
																						<polygon fill="url(#gradient2)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,255)" stroke-width="0">
																							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																						</polygon>
																						<line stroke="rgb(0,0,255)" stroke-width="0" x1="80" x2="80" y1="60" y2="170">
																							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																						</line>
																						<line stroke="rgb(0,0,255)" stroke-width="0" x1="230" x2="230" y1="60" y2="170">
																							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																						</line>
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'HardwareComponentType' {
	do :Type; where type = 'ActuatorType' { 'T'
	}
}</displayCondition>
																						</metaInfo>
																					</g>
																					<polygon fill="rgb(255,255,255)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'HardwareComponentType' {
	do :Type; where type = 'HardwareComponentType' { 'T'
	}
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="rgb(255,255,255)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(255,0,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'ErrorModel' { 'T' 
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="rgb(255,224,224)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type =~ 'Behavior*' { 'T' 
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="rgb(255,239,224)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'DesignFunctionType' { 'T' 
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="rgb(255,255,224)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'AnalysisFunctionType' { 'T' 
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="url(#gradient3)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,128,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'HardwareComponentType' {
	do :Type; where type = 'NodeType' { 'T'
	}
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="url(#gradient4)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(170,170,170)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions where type = 'HardwareComponentType' {
	do :Type; where type = 'ElectricalComponentType' { 'T'
	}
}</displayCondition>
																						</metaInfo>
																					</polygon>
																					<polygon fill="rgb(255,255,255)" points="70,72.2222 80,60 230,60 240,72.2222 240,157.778 230,170 80,170 70,157.778" stroke="rgb(0,0,0)" stroke-width="0">
																						<metaInfo xmlns="http://www.metacase.com/symbol">
																							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if not decompositions; then 'T' endif</displayCondition>
																						</metaInfo>
																					</polygon>
																					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="8" sym:wordWrap="true" text-anchor="middle" width="170" x="70" y="60">
																						ReportTextSource:id
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,60" startDistance="0">
																							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
																						</pathLayout>
																						<generatorNPSource>do decompositions {
	foreach .(InFlowPort | ServerPort | *PinIn | FaultInPort)  orderby y num {
		id newline
	}
}</generatorNPSource>
																						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
																						<metaInfo></metaInfo>
																					</template>
																					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="240,60" startDistance="0">
																							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
																						</pathLayout>
																						<generatorNPSource>do decompositions {
	foreach .(OutFlowPort | ClientPort | *PinOut | Failure*) orderby y num {
		id newline
	}
}</generatorNPSource>
																						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
																						<metaInfo></metaInfo>
																					</template>
																					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,60" startDistance="0">
																							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
																						</pathLayout>
																						<generatorNPSource>do decompositions {
	foreach .(InFlowPort | ServerPort | *PinIn | FaultInPort) orderby y num {
		id newline
	}
}</generatorNPSource>
																						<librarySubsymbolSource>id_left_subsymbol</librarySubsymbolSource>
																						<metaInfo></metaInfo>
																					</template>
																					<template aligmentPointX="0.5" aligmentPointY="0" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="true" width="1" xmlns="http://www.metacase.com/symbol">
																						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="240,60" startDistance="0">
																							<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="39"></layoutPath>
																						</pathLayout>
																						<generatorNPSource>do decompositions {
	foreach .(OutFlowPort | ClientPort | *PinOut | Failure*) orderby y num {
		id newline
	}
}</generatorNPSource>
																						<librarySubsymbolSource>id_right_subsymbol</librarySubsymbolSource>
																						<metaInfo></metaInfo>
																					</template>
																					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,170" startDistance="0">
																							<layoutPath allocation="start" lastSelectedSegment="4" layoutDistance="60" lineSegmentTable="true,false,true,false" points="0,0 170,0 170,-110 0,-110 0,0" startDistance="30"></layoutPath>
																						</pathLayout>
																						<generatorNPSource>do decompositions {
	foreach .(InOut* | PowerPort | *PinInOut) orderby x num {
		id newline
	}
}</generatorNPSource>
																						<librarySubsymbolSource>ReportTextSource:type '_subsymbol'</librarySubsymbolSource>
																						<metaInfo></metaInfo>
																					</template>
																					<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="60" subsymbolExtentY="40" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,170" startDistance="0">
																							<layoutPath allocation="start" lastSelectedSegment="4" layoutDistance="60" lineSegmentTable="true,false,true,false" points="0,0 170,0 170,-110 0,-110 0,0" startDistance="30"></layoutPath>
																						</pathLayout>
																						<generatorNPSource>do decompositions {
	foreach .(InOut* | PowerPort | *PinInOut) orderby x num {
		id newline
	}
}</generatorNPSource>
																						<librarySubsymbolSource>id_middle_subsymbol</librarySubsymbolSource>
																						<metaInfo></metaInfo>
																					</template>
																				</svg>
																			</objectSymbol>
																			<icon offset="56,111" xmlns="http://www.metacase.com/icon">
																				<svg baseProfile="tiny" height="191" version="1.2" width="159" xmlns="http://www.w3.org/2000/svg">
																					<rect fill="rgb(255,255,255)" height="80" rx="18" ry="14" stroke="rgb(0,0,0)" stroke-width="1" width="90" x="62" y="111"></rect>
																					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="74" font-style="normal" font-weight="bold" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="62" y="111">T</textArea>
																					<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="39" sym:width="14" sym:x="1.45e2" sym:y="1.46e2">
																						<rect fill="rgb(0,0,0)" height="13" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="14" x="145" y="146"></rect>
																						<rect fill="rgb(0,0,0)" height="13" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="14" x="145" y="172"></rect>
																					</g>
																					<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="39" sym:width="14" sym:x="5.6e1" sym:y="1.46e2">
																						<rect fill="rgb(0,0,0)" height="13" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="14" x="56" y="146"></rect>
																						<rect fill="rgb(0,0,0)" height="13" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="14" x="56" y="172"></rect>
																					</g>
																				</svg>
																			</icon>
																		</object>
																	</dataType>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="20,20 230,20 230,100 20,100 20,20" targetPointX="125" targetPointY="60" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="100" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="rgb(249,249,249)" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="20" y="20">
																		ReportTextSource:'&lt;&lt;EventFunction&gt;&gt;' newline
id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="20" y="20">
																		ReportTextSource:if :Function; then newline 'Function: ' :Function; endif
if :FunctionType; then newline 'FunctionType: ' :FunctionType; endif
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="28" subsymbolExtentY="28" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="20,20" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>EventFunction_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																	<polyline fill="none" points="30,20 20,20 20,100 30,100" stroke="rgb(128,128,128)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polyline>
																	<polyline fill="none" points="220,20 230,20 230,100 220,100" stroke="rgb(128,128,128)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polyline>
																</svg>
															</objectSymbol>
															<icon offset="181.0,72" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="109" version="1.2" width="218" xmlns="http://www.w3.org/2000/svg">
																	<defs>
																		<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
																			<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="1" stop-color="rgb(170,170,170)"></stop>
																		</radialGradient>
																	</defs>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="37" sym:width="29" sym:x="1.89e2" sym:y="7.2e1">
																		<polyline fill="none" points="189,72 189,109 218,109 218,79.8625 211.176,72.4625 211.176,74.775 211.176,79.8625 218,79.8625" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																		<line stroke="rgb(0,0,0)" stroke-width="1" x1="189" x2="211.176" y1="72" y2="72"></line>
																	</g>
																	<g fill="none" stroke="none" stroke-width="1" sym:height="20.9592" sym:width="29.0002" sym:x="1.809998e2" sym:y="8.1e1">
																		<g fill="none" stroke="none" stroke-width="1" sym:height="20.9592" sym:width="27.0004" sym:x="1.809998e2" sym:y="8.1e1">
																			<rect fill="url(#gradient1)" height="20.9592" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="15.5342" x="192.466" y="81"></rect>
																			<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="15.5102" sym:width="14.7945" sym:x="1.809998e2" sym:y="8.4898e1">
																				<ellipse cx="188.397" cy="92.6531" fill="rgb(255,255,255)" rx="7.39725" ry="7.7551" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																				<polyline fill="none" points="188.397,88.7755 188.397,92.6531 192.096,96.5306 192.096,96.5306" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																			</g>
																			<polygon fill="rgb(128,0,0)" points="203.192,82.9592 194.315,92.6531 198.753,92.6531 194.315,100.408 205.411,90.7143 200.973,90.7143" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
																		</g>
																		<rect fill="rgb(255,255,255)" height="4" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="4" x="206" y="89.9592"></rect>
																		<rect fill="rgb(255,255,255)" height="4" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="4" x="206" y="95.9592"></rect>
																	</g>
																	<rect fill="rgb(255,255,255)" height="4" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="4" x="206" y="83.9592"></rect>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_EventFunctionClientServerPort_sysadmin_3508669694" type="Object_EventFunctionClientServerPort_sysadmin_3508669694" typeName="EventFunctionClientServerPort">
															<description>Event that refers to the occurrence of data being sent or received at the client/server port, according to the attribute eventKind, i.e., when the input data is sent / received, or when the output data is produced / received.</description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<slot id="a0ysuv" name="EventKind" unique="false">
																<property type="Property_eventKind_sysadmin_3509529674" typeName="eventKind">
																	<description>sentRequest: Request sent from client.  
receivedResponse: Response arrived at client.  
receivedRequest: Request arrived at server.  
sentResponse: Response sent from server. </description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>sentRequest</string>
																	</defaultValue>
																	<widget>Fixed List</widget>
																	<listValues>
																		<string>sentRequest</string>
																		<string>receivedResponse</string>
																		<string>receivedRequest</string>
																		<string>sentResponse</string>
																	</listValues>
																</property>
															</slot>
															<slot id="a34d0w" name="Type" unique="false">
																<property id="Property_TimingExpression_sysadmin_3615040358" type="Property_TimingExpression_sysadmin_3615040358" typeName="TimingExpression">
																	<description></description>
																	<dataType>
																		<object href="#Object_TimingExpression_sysadmin_3615039938"></object>
																	</dataType>
																</property>
															</slot>
															<slot id="a2zl60" name="Port" unique="false">
																<property type="Property_port_sysadmin_3548179188" typeName="Port">
																	<description></description>
																	<dataType>
																		<object href="#Object__ClientServerPort_sysadmin_3615023373"></object>
																	</dataType>
																	<dataTypeSubtype>
																		<object href="#Object_OutPortGroup_user_3463131108"></object>
																	</dataTypeSubtype>
																	<dataTypeSubtype>
																		<object href="#Object_InPortGroup_user_3463130898"></object>
																	</dataTypeSubtype>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="30,20 240,20 240,100 30,100 30,20" targetPointX="135" targetPointY="60" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="100" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="rgb(249,249,249)" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="210" x="30" y="20">
																		ReportTextSource:'&lt;&lt;EventFunctionClientServerPort&gt;&gt;' 
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
																		ReportTextSource:if :EventKind; then newline 'Kind: ' :EventKind; endif
newline
'Type: ' 
if :Type; then :Type; else 'undefined' endif
if :Port; then newline 'Port: ' :Port; endif
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="35" subsymbolExtentY="35" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="30,20" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>EventFunctionCSPort_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
																		ReportTextSource:newline
id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<polyline fill="none" points="40,20 30,20 30,100 40,100" stroke="rgb(128,128,128)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polyline>
																	<polyline fill="none" points="230,20 240,20 240,100 230,100" stroke="rgb(128,128,128)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polyline>
																</svg>
															</objectSymbol>
															<icon offset="23,33" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="113" version="1.2" width="136" xmlns="http://www.w3.org/2000/svg">
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="80" sym:width="68" sym:x="4.0e1" sym:y="3.3e1">
																		<polyline fill="none" points="40,33 40,113 108,113 108,50 92,34 92,39 92,50 108,50" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																		<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="92" y1="33" y2="33"></line>
																	</g>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="40" sym:width="40" sym:x="2.3e1" sym:y="5.9e1">
																		<ellipse cx="43" cy="79" fill="rgb(255,255,255)" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																		<polyline fill="none" points="43,69 43,79 53,89 53,89" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																	<polygon fill="rgb(128,0,0)" points="83,54 59,79 71,79 59,99 89,74 77,74" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
																	<polyline fill="none" points="96,71 102,74 96,77" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	<line stroke="rgb(0,0,0)" stroke-width="1" x1="102" x2="89" y1="74" y2="74"></line>
																	<polyline fill="none" points="94,71 88,74 94,77" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	<ellipse cx="119.5" cy="75.5" fill="rgb(255,255,255)" rx="16.5" ry="15.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_EventFunctionFlowPort_sysadmin_3508669298" type="Object_EventFunctionFlowPort_sysadmin_3508669298" typeName="EventFunctionFlowPort">
															<description>Event that refers to the occurrence of data being sent (out port) or received (in port) at the flow port, i.e., when data is sent or received.</description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<slot id="a04cyp" name="Type" unique="false">
																<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
															</slot>
															<slot id="p26_5312" name="Port" unique="false">
																<property type="Property__FunctionFlowPort_sysadmin_3548244399" typeName="_FunctionFlowPort">
																	<description></description>
																	<dataType>
																		<object href="#Object__FunctionFlowPort_sysadmin_3548244399"></object>
																	</dataType>
																	<dataTypeSubtype>
																		<object href="#Object_ADLInFlowPort_user_3402566388"></object>
																	</dataTypeSubtype>
																	<dataTypeSubtype>
																		<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
																	</dataTypeSubtype>
																	<dataTypeSubtype>
																		<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
																	</dataTypeSubtype>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="30,20 240,20 240,100 30,100 30,20" targetPointX="135" targetPointY="60" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="100" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="rgb(249,249,249)" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
																		ReportTextSource:'&lt;&lt;EventFunctionFlowPort&gt;&gt;' newline
id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
																		ReportTextSource:'Type: ' 
if :Type; then :Type; else 'undefined' endif
newline
if :Port; then 'Port: ' :Port; endif
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="28" subsymbolExtentY="28" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="30,20" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>EventFunctionFlowPort_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																	<polyline fill="none" points="40,20 30,20 30,100 40,100" stroke="rgb(128,128,128)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polyline>
																	<polyline fill="none" points="230,20 240,20 240,100 230,100" stroke="rgb(128,128,128)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polyline>
																</svg>
															</objectSymbol>
															<icon offset="83,68" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="148" version="1.2" width="171" xmlns="http://www.w3.org/2000/svg">
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="80" sym:width="68" sym:x="9.9e1" sym:y="6.8e1">
																		<polyline fill="none" points="99,68 99,148 167,148 167,85 151,69 151,74 151,85 167,85" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																		<line stroke="rgb(0,0,0)" stroke-width="1" x1="99" x2="151" y1="68" y2="68"></line>
																	</g>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="40" sym:width="40" sym:x="8.3e1" sym:y="9.3e1">
																		<ellipse cx="103" cy="113" fill="rgb(255,255,255)" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																		<polyline fill="none" points="103,103 103,113 113,123 113,123" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																	<polygon fill="rgb(128,0,0)" points="143,88 119,113 131,113 119,133 149,108 137,108" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
																	<rect fill="rgb(255,255,255)" height="23" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="8" x="163" y="98"></rect>
																	<polyline fill="none" points="158,105 162,108 158,111" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	<line stroke="rgb(0,0,0)" stroke-width="1" x1="162" x2="149" y1="108" y2="108"></line>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_ExternalEvent_sysadmin_3615063424" type="Object_ExternalEvent_sysadmin_3615063424" typeName="ExternalEvent">
															<description>ExternalEvent instance stands for some particular form of state change.</description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="26,28" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="176.25,82.25 175.489,84.5461 173.321,86.4926 170.077,87.7933 166.25,88.25 36,88.25 32.1732,87.7933 28.9289,86.4926 26.7612,84.5461 26,82.25 26,34 26.7612,31.7039 28.9289,29.7574 32.1732,28.4567 36,28 166.25,28 170.077,28.4567 173.321,29.7574 175.489,31.7039 176.25,34 176.25,82.25" targetPointX="101.125" targetPointY="58.125" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="88" version="1.2" width="176" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(0,0,0)" height="60" rx="10" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="150" x="26" y="28">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<textArea display-align="center" fill="rgb(249,249,249)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="150" x="26" y="28">
																		ReportTextSource:id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(255,255,255)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="bold" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="2" sym:wordWrap="true" text-anchor="end" width="145" x="26" y="28">
																		ExternalEvent
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="28" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="26,28" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>Event_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																</svg>
															</objectSymbol>
															<icon offset="40,30" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="90" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(0,0,0)" height="60" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="40" y="30"></rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="41" sym:width="50" sym:x="5.0e1" sym:y="4.0e1">
																		<ellipse cx="75" cy="60.5" fill="rgb(255,255,255)" rx="25" ry="20.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																		<polyline fill="none" points="75,50.2499 75,60.5 87.5012,70.7499 87.5012,70.7499" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_ModeEvent_sysadmin_3615062968" type="Object_ModeEvent_sysadmin_3615062968" typeName="ModeEvent">
															<description>ModeEvent identifies when the mode starts or ends.</description>
															<superType>
																<object href="#Object_Event_sysadmin_3508668873"></object>
															</superType>
															<slot id="a4mot4" name="Start" unique="false">
																<property href="#Property_Modes_sysadmin_3543224568"></property>
															</slot>
															<slot id="a5moth" name="End" unique="false">
																<property href="#Property_Modes_sysadmin_3543224568"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="180,94 179.543,96.2961 178.243,98.2426 176.296,99.5433 174,100 45.75,100 43.4539,99.5433 41.5074,98.2426 40.2067,96.2961 39.75,94 39.75,35.75 40.2067,33.4539 41.5074,31.5074 43.4539,30.2067 45.75,29.75 174,29.75 176.296,30.2067 178.243,31.5074 179.543,33.4539 180,35.75 180,94" targetPointX="109.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="100" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(192,224,255)" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="140" x="40" y="30">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="40" y="30">
																		ReportTextSource:newline
id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="136" x="40" y="30">
																		ModeEvent
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="28" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="40,30" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="6"></layoutPath>
																		</pathLayout>
																		<noneNPSource></noneNPSource>
																		<librarySubsymbolSource>Event_symbol</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																	<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="140" x="40" y="30">
																		ReportTextSource:newline
newline
'Start: ' dowhile :Start { id ', '}
newline
'End: ' dowhile :End { id ', '}
newline
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="40,60" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="120" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(192,224,255)" height="60" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="40" y="60"></rect>
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="41" sym:width="50" sym:x="5.0e1" sym:y="7.0e1">
																		<ellipse cx="75" cy="90.5" fill="rgb(255,255,255)" rx="25" ry="20.5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																		<polyline fill="none" points="75,80.2499 75,90.5 87.5012,100.75 87.5012,100.75" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																</svg>
															</icon>
														</object>
													</contentsDataTypeSubtype>
												</property>
											</slot>
											<slot id="a1e4p7" name="occurredLogicalEvent" unique="false">
												<property type="Property_occurredLogicalEvent_sysadmin_3509887267" typeName="occurredLogicalEvent">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="a6znu5" name="occurredHazardousEvent" unique="false">
												<property type="Property_occurredHazardousEvent_sysadmin_3548180918" typeName="occurredHazardousEvent">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_HazardousEvent_sysadmin_3509260252" type="Object_HazardousEvent_sysadmin_3509260252" typeName="HazardousEvent">
															<description>The HazardousEvent denotes a combination of a Hazard and an operational situation. The controllability and severity attributes shall be consistent with the operational situation and operational scenario, and the Exposure shall reflect the likelihood of the operational situation and scenario.</description>
															<slot id="hxc8w9" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="hrrncp" name="Short name" unique="false">
																<property type="Property_HazardousEventName_sysadmin_3510202619" typeName="HazardousEventName">
																	<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="hyc8wl" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="hmn8yu" name="ClassificationAssumptions" unique="false">
																<property type="Property_Classification_sysadmin_3509260178" typeName="ClassificationAssumptions">
																	<description></description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="hon8zs" name="Severity" unique="false">
																<property type="Property_Severity_sysadmin_3509258416" typeName="Severity">
																	<description>The SeverityClassKind is an enumeration metaclass with enumeration literals indicating the severity attributes S0, S1, S2 or S3 in accordance with ISO26262. </description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>S0</string>
																	</defaultValue>
																	<widget>Fixed List</widget>
																	<listValues>
																		<string>S0</string>
																		<string>S1</string>
																		<string>S2</string>
																		<string>S3</string>
																	</listValues>
																</property>
															</slot>
															<slot id="hpn908" name="Exposure" unique="false">
																<property type="Property_Exposure_sysadmin_3509258513" typeName="Exposure">
																	<description>The ExposureClassKind is an enumeration  metaclass with enumeration literals indicating the probability attributes E1, E2, E3 or E4 in accordance with ISO26262.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>E1</string>
																	</defaultValue>
																	<widget>Fixed List</widget>
																	<listValues>
																		<string>E1</string>
																		<string>E2</string>
																		<string>E3</string>
																		<string>E4</string>
																	</listValues>
																</property>
															</slot>
															<slot id="hnn8zc" name="Controllability" unique="false">
																<property type="Property_Controllability_sysadmin_3509258474" typeName="ControllabilityClassKind">
																	<description>The ControllabilityClassKind is an enumeration metaclass with enumeration literals indicating controllability attributes C0, C1, C2 or C3 in accordance with ISO26262</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>C0</string>
																	</defaultValue>
																	<widget>Fixed List</widget>
																	<listValues>
																		<string>C0</string>
																		<string>C1</string>
																		<string>C2</string>
																		<string>C3</string>
																	</listValues>
																</property>
															</slot>
															<slot id="hqn92k" name="HazardClassification" unique="false">
																<property id="Property_ASIL_sysadmin_3509191183" type="Property_ASIL_sysadmin_3509191183" typeName="ASIL">
																	<description></description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string>A</string>
																	</defaultValue>
																	<widget>Fixed List</widget>
																	<listValues>
																		<string>A</string>
																		<string>B</string>
																		<string>C</string>
																		<string>D</string>
																		<string>QM</string>
																	</listValues>
																</property>
															</slot>
															<slot id="htzn4r" name="Traffic" unique="false">
																<property id="Property_operationalSituation_sysadmin_3524982302" type="Property_operationalSituation_sysadmin_3524982302" typeName="OperationalSituation">
																	<description></description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<object id="Object_OperationalSituation_sysadmin_3509602770" type="Object_OperationalSituation_sysadmin_3509602770" typeName="OperationalSituation">
																			<description>An operational situation is a state, condition or scenario in the environment that may influence the vehicle. The Operational Situation may be further detailed by a functional definition in the EnvironmentModel.</description>
																			<slot id="iac6bi" name="__UUID" unique="false">
																				<property href="#Property___UUID_sysadmin_3604668056"></property>
																			</slot>
																			<slot id="i81xm5" name="Short name" unique="false">
																				<property type="Property_OperationalSituationName_sysadmin_3509602742" typeName="OperationalSituationName">
																					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																					<dataType>
																						<simpleType>String</simpleType>
																					</dataType>
																					<defaultValue>
																						<string></string>
																					</defaultValue>
																					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																					<widget>Input Field</widget>
																				</property>
																			</slot>
																			<slot id="ibc6bz" name="Name" unique="false">
																				<property href="#Property_Name_sysadmin_3536998876"></property>
																			</slot>
																			<slot id="i91xnc" name="Description" unique="false">
																				<property href="#Property_2Description_user_3310902697"></property>
																			</slot>
																			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
																			<objectSymbol offset="90,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																				<defaultConnectable isSticky="true" points="230,80 229.239,83.8268 227.071,87.0711 223.827,89.2388 220,90 99.75,90 95.9232,89.2388 92.6789,87.0711 90.5112,83.8268 89.75,80 89.75,59.75 90.5112,55.9232 92.6789,52.6789 95.9232,50.5112 99.75,49.75 220,49.75 223.827,50.5112 227.071,52.6789 229.239,55.9232 230,59.75 230,80" targetPointX="159.875" targetPointY="69.875" usesGrid="true"></defaultConnectable>
																				<svg baseProfile="tiny" height="90" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
																					<rect fill="rgb(0,128,0)" height="40" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="140" x="90" y="50">
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</rect>
																					<textArea display-align="center" fill="rgb(255,255,255)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="90" y="50">
																						ReportTextSource:id
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																					<textArea display-align="before" fill="rgb(255,255,255)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="137" x="90" y="50">
																						OperationalSituation
																						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																					</textArea>
																				</svg>
																			</objectSymbol>
																		</object>
																	</contentsDataType>
																</property>
															</slot>
															<slot id="huzn57" name="Environment" unique="false">
																<property href="#Property_operationalSituation_sysadmin_3524982302"></property>
															</slot>
															<slot id="hwznbi" name="OperatingMode" unique="false">
																<property type="Property_operatingMode_sysadmin_3548180583" typeName="OperatingMode">
																	<description></description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<object href="#Object_Mode_sysadmin_3509262593"></object>
																	</contentsDataType>
																</property>
															</slot>
															<slot id="hsrnlu" name="Text" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="70,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="230,128.892 229.391,133.143 227.658,136.746 225.064,139.155 222.004,140 77.7458,140 74.686,139.155 72.0919,136.746 70.3587,133.143 69.75,128.892 69.75,50.858 70.3587,46.6072 72.0919,43.0034 74.686,40.5955 77.7458,39.75 222.004,39.75 225.064,40.5955 227.658,43.0034 229.391,46.6072 230,50.858 230,128.892" targetPointX="149.875" targetPointY="89.875" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="140" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,0)" height="100" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="70" y="40">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="160" x="70" y="40">
																		ReportTextSource:newline;
id; newline
:ClassificationAssumptions; newline
'Severity=' :Severity; newline
'Exposure=' :Exposure; newline
'Controllability=' :Controllability; newline
'ASIL=' :HazardClassification; newline

																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="228,138" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,-20" startDistance="7"></layoutPath>
																		</pathLayout>
																		<generatorNPSource>oid</generatorNPSource>
																		<librarySubsymbolSource>Hazard</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="159" x="70" y="40">
																		HazEvent
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="a7zo3z" name="occurredFeatureFlaw" unique="false">
												<property type="Property_occurredFeatureFlaw_sysadmin_3548181095" typeName="occurredFeatureFlaw">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="a8kvfj" name="occurredAnomaly_FaultIn" unique="false">
												<property type="Property_occurredAnomaly_FaultIn_sysadmin_3567151503" typeName="occurredAnomaly_FaultIn">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_FaultInPort_sysadmin_3509188722" type="Object_FaultInPort_sysadmin_3509188722" typeName="FaultInPort">
															<description>The FaultInPort represents a propagation point for faults that propagate to the containing ErrorModelType. The value range of a FaultInPort represents faults propagated from a FailureOutPort in another ErrorModel. The value range is defined by the FaultInPort's EADatatype.</description>
															<slot id="a298p7" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="a0k71r" name="Short name" unique="false">
																<property href="#Property_2ECUName_user_3310972947"></property>
															</slot>
															<slot id="a398pi" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="a1hoyq" name="Type" unique="false">
																<property href="#Property_isOfType_sysadmin_3537003179"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,255)" stroke-width="7" width="30" x="90" y="50">
																		<metaInfo xmlns="http://www.metacase.com/symbol">
																			<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :Show warnings;1 then
	_sym_trace()
endif</displayCondition>
																		</metaInfo>
																	</rect>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="0" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
																		ReportTextSource:id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<polygon fill="rgb(255,0,0)" points="97.5,54.5 97.5,75.5 114,65" stroke="rgb(255,0,0)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polygon>
																	<line stroke="rgb(255,0,0)" stroke-width="2" x1="110.25" x2="120" y1="65" y2="65">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</line>
																	<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13" x="107" y="50">
																		I
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
															<icon offset="31,15" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="45" version="1.2" width="61" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="31" y="15"></rect>
																	<polygon fill="rgb(255,0,0)" points="38.5,19.5 38.5,40.5 55,30" stroke="rgb(255,0,0)" stroke-width="1"></polygon>
																	<line stroke="rgb(255,0,0)" stroke-width="2" x1="51.25" x2="61" y1="30" y2="30"></line>
																	<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13" x="48" y="15">I</textArea>
																</svg>
															</icon>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="a9kvgw" name="occurredAnomaly_FailureOut" unique="false">
												<property type="Property_occurredAnomaly_FailureOut_sysadmin_3567151528" typeName="occurredAnomaly_FailureOut">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_FailureOutPort_sysadmin_3509188783" type="Object_FailureOutPort_sysadmin_3509188783" typeName="FailureOutPort">
															<description>The FailureOutPort represents a propagation point for failures that propagate out from the containing ErrorModelType.The value range of a FailureOutPort represents failures that can propagate to FaultInPorts in other ErrorModels. The value range is defined by the FailureOutPort's EADatatype.</description>
															<slot id="hk98tk" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="hdk6rv" name="Short name" unique="false">
																<property href="#Property_2ECUName_user_3310972947"></property>
															</slot>
															<slot id="hl98t6" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="hehohy" name="Type" unique="false">
																<property href="#Property_isOfType_sysadmin_3537003179"></property>
															</slot>
															<slot id="hi926n" name="functionTarget" unique="false">
																<property type="Property_functionTarget_user_3548400167" typeName="functionTarget">
																	<description></description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<object href="#Object_FunctionPort_user_3463141388"></object>
																	</contentsDataType>
																	<contentsDataTypeSubtype>
																		<object href="#Object_OutPowerPort_user_3461402381"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object__ClientServerPort_sysadmin_3615023373"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object__FunctionFlowPort_sysadmin_3548244399"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_OutPortGroup_user_3463131108"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_InPortGroup_user_3463130898"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_ADLInFlowPort_user_3402566388"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
																	</contentsDataTypeSubtype>
																</property>
															</slot>
															<slot id="hj928n" name="hwTarget" unique="false">
																<property type="Property_hwTarget_user_3548400203" typeName="hwTarget">
																	<description></description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<object href="#Object_HDAPort_user_3463141315"></object>
																	</contentsDataType>
																	<contentsDataTypeSubtype>
																		<object href="#Object_CommunicationHardwarePin_To_user_3461929103"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_CommunicationHardwarePin_From_user_3461928850"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_IOHardwarePin_To_user_3461931130"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_IOHardwarePin_From_user_3461930920"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_PowerHardwarePin_To_user_3461930006"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_PowerHardwarePin_From_user_3461930168"></object>
																	</contentsDataTypeSubtype>
																</property>
															</slot>
															<slot id="hffijf" name="Has error?" unique="false">
																<property id="Property_Has_error__sysadmin_3546871117" type="Property_Has_error__sysadmin_3546871117" typeName="Has error?">
																	<description></description>
																	<dataType>
																		<simpleType>Boolean</simpleType>
																	</dataType>
																	<defaultValue></defaultValue>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="89.75,49.75 120,49.75 120,80 89.75,80 89.75,49.75" targetPointX="104.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="120" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="60" y="80">
																		ReportTextSource:if :Has error?; then 'Error ' endif
id
$variableOid = oid
do explosions {
	' := '
	newline
	'{ '
	foreach .FaultFailure { 
		$variableFaultFailureValue = :faultFailureValue
		do &gt;Constrained.SafetyConstraint {	
			$variableAsilValue = :Safety level;
		}
		do ~()&gt;InstanceRef~()#FailureOutPort { 
			if oid = $variableOid then 
				variable 'faultFailureAssigned' append
					$variableFaultFailureValue '[ '
				close
				variable 'faultFailureAssigned' append
					$variableAsilValue ' '
				close
				variable 'faultFailureAssigned' append
					']' ' '
				close
			endif 
		}
	}
	
	variable 'faultFailureAssigned' read
	'}'
}
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="30" x="90" y="50">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<polygon fill="rgb(255,0,0)" points="99.75,54.5 99.75,75.5 116.25,65" stroke="rgb(255,0,0)" stroke-width="1">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</polygon>
																	<line stroke="rgb(255,0,0)" stroke-width="2" x1="90" x2="99.75" y1="65" y2="65">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</line>
																	<textArea display-align="center" fill="rgb(0,0,0)" font-family="#serif" font-size="14" font-style="normal" font-weight="normal" height="12" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="12" x="108" y="50">
																		O
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</objectSymbol>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="aakvq2" name="occurredAnomaly_Process" unique="false">
												<property type="Property_occurredAnomaly_Process_sysadmin_3567151693" typeName="occurredAnomaly_Process">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_ProcessFaultPrototype_user_3548398435" type="Object_ProcessFaultPrototype_user_3548398435" typeName="ProcessFaultPrototype">
															<description>The ProcessFaultPrototype represent general internal anomalies of a component that are introduced during design and implementation.</description>
															<slot id="js98iv" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="jp8zgd" name="Short name" unique="false">
																<property href="#Property_FaultName_sysadmin_3509186663"></property>
															</slot>
															<slot id="jt98il" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="jq8zhz" name="isOfType" unique="false">
																<property href="#Property_isOfType_sysadmin_3537003179"></property>
															</slot>
															<slot id="jr8zi6" name="Description" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="30,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="200,84 199.696,86.2961 198.828,88.2426 197.531,89.5433 196,90 33.75,90 32.2193,89.5433 30.9216,88.2426 30.0545,86.2961 29.75,84 29.75,45.75 30.0545,43.4539 30.9216,41.5074 32.2193,40.2067 33.75,39.75 196,39.75 197.531,40.2067 198.828,41.5074 199.696,43.4539 200,45.75 200,84" targetPointX="114.875" targetPointY="64.875" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="90" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,255)" height="50" rx="4" ry="6" stroke="rgb(255,0,0)" stroke-width="1" width="170" x="30" y="40">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="30" y="40">
																		ReportTextSource:id ': ' :isOfType;
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="22" subsymbolExtentY="22" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="200,40" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,20" startDistance="8"></layoutPath>
																		</pathLayout>
																		<generatorNPSource>oid</generatorNPSource>
																		<librarySubsymbolSource>FunctionBehavior</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																</svg>
															</objectSymbol>
															<icon offset="40,20" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="40" version="1.2" width="60" xmlns="http://www.w3.org/2000/svg">
																	<polygon fill="rgb(255,128,128)" points="50.2563,20 48.8889,20 48.547,21.9754 47.5214,22.3046 46.4957,20.8231 45.2991,21.3169 45.8119,23.1277 44.7863,23.9508 43.0769,22.9631 42.3932,23.7862 43.4188,25.2678 42.906,26.2555 40.8547,26.0908 40.5128,27.2432 42.2222,28.2309 42.0513,29.5478 40,30.2063 40.1709,31.194 42.2222,31.5232 42.5641,32.6756 40.8547,33.9925 41.3675,34.9802 43.4188,34.3217 44.1026,35.3094 43.0769,37.1202 43.9316,37.9433 45.641,36.6264 46.6667,37.4494 46.3248,39.2602 47.3504,39.7541 48.547,37.7787 49.7436,37.9433 50.3323,40 51.4531,39.9187 51.624,37.7787 52.6496,37.4494 54.017,39.2602 55.0427,38.6018 54.5299,36.6264 55.3847,35.9679 57.0941,37.1202 57.9486,36.1325 56.7521,34.3217 57.2649,33.334 59.1454,33.8279 59.4872,32.5109 57.7778,31.3586 57.7778,30.3709 60,29.877 59.8291,28.5601 57.7778,28.5601 57.4358,27.4078 59.1454,26.0908 58.6326,25.1031 56.5812,25.597 56.0684,24.6093 56.923,22.9631 56.0684,22.14 54.5299,23.2923 53.5042,22.6339 53.8462,20.8231 52.6496,20.3292 51.7948,22.14 50.4274,21.9754" stroke="rgb(255,0,0)" stroke-width="0"></polygon>
																</svg>
															</icon>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="abkw5x" name="occurredAnomaly_Internal" unique="false">
												<property type="Property_occurredAnomaly_Internal_sysadmin_3567151978" typeName="occurredAnomaly_Internal">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_InternalFaultPrototype_user_3548398352" type="Object_InternalFaultPrototype_user_3548398352" typeName="InternalFaultPrototype">
															<description>The system anomaly represented by an InternalFault, which when activated, can cause errors and failures of the target element.</description>
															<slot id="jp98f0" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="jm8zba" name="Short name" unique="false">
																<property href="#Property_FaultName_sysadmin_3509186663"></property>
															</slot>
															<slot id="jq98ej" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="jn8zcz" name="isOfType" unique="false">
																<property href="#Property_isOfType_sysadmin_3537003179"></property>
															</slot>
															<slot id="jo8zhb" name="Description" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<objectSymbol offset="11,27.2218" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="11,27.2218 181,27.2218 181,79.7218 11,79.7218 11,27.2218" targetPointX="96" targetPointY="53.4718" usesGrid="true"></defaultConnectable>
																<svg baseProfile="tiny" height="79.7218" version="1.2" width="181" xmlns="http://www.w3.org/2000/svg">
																	<rect fill="rgb(255,255,255)" height="52.5" rx="4" ry="6" stroke="rgb(255,0,0)" stroke-width="1" width="170" x="11" y="27.2218">
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</rect>
																	<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="52.5" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="11" y="27.2218">
																		ReportTextSource:id ': ' :isOfType;
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																	<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="22" subsymbolExtentY="22" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
																		<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="180,27.2218" startDistance="0">
																			<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,20" startDistance="8"></layoutPath>
																		</pathLayout>
																		<generatorNPSource>oid</generatorNPSource>
																		<librarySubsymbolSource>InternalFault</librarySubsymbolSource>
																		<metaInfo></metaInfo>
																	</template>
																</svg>
															</objectSymbol>
															<icon offset="70,40" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="60" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
																	<defs>
																		<radialGradient cx="0.35" cy="0.2" gradientUnits="objectBoundingBox" id="gradient1" r="1.03078" sym:correctGamma="true" sym:fillType="PathFill">
																			<stop offset="0" stop-color="rgb(255,255,255)"></stop>
																			<stop offset="1" stop-color="rgb(255,0,0)"></stop>
																		</radialGradient>
																	</defs>
																	<ellipse cx="80" cy="50" fill="url(#gradient1)" rx="10" ry="10" stroke="none" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
																	<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="18" font-style="normal" font-weight="bold" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="20" x="70" y="40">!</textArea>
																</svg>
															</icon>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
											<objectSymbol offset="40,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" targetPointX="130" targetPointY="50" usesGrid="true"></defaultConnectable>
												<svg baseProfile="tiny" height="78.9009" version="1.2" width="220" xmlns="http://www.w3.org/2000/svg">
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="48.9009" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="40" y="30">
														ReportTextSource:'&lt;&lt;TransitionEvent&gt;&gt;' newline
id; newline
$variableName = id
	do ~referred_from&gt;Reference~refer_to.FaultFailure
	{ 	
		variable 'faultFailureAssigned' append
   			id '  '
		close
	}
	do explosions 
	{	
		foreach .TransitionEvent; where id = $variableName
		{
			do ~referred_from&gt;Reference~refer_to.FaultFailure
			{ 	
				variable 'faultFailureAssigned' append
	   			id '  '
				close
			}
		}
	}
	do ~referred_from&gt;Reference~refer_to.FeatureFlaw
	{ 	
		variable 'FeatureFlawAssigned' append
  			id '  '
		close
	}
	do ~referred_from&gt;Reference~refer_to.HazardousEvent
	{ 	
		variable 'HazardousEventAssigned' append
  			id '  '
		close
	}
	do ~referred_from&gt;Reference~refer_to.LogicalEvent
	{ 	
		variable 'LogicalEventAssigned' append
  			id '  '
		close
	}
	do explosions 
	{	
		foreach .TransitionEvent; where id = $variableName
		{
			do ~referred_from&gt;Reference~refer_to.LogicalEvent
			{ 	
				variable 'LogicalEventAssigned' append
   				id '  '
				close
			}
		}
	}
	do ~referred_from&gt;Reference~refer_to.Event
	{ 	
		variable 'ExecutionEventAssigned' append
  			id '  '
		close
	}
	
if $faultFailureAssigned then 
	'occurredAnomaly' ' :={ '
	variable 'faultFailureAssigned' read 
	'}'
endif

if $FeatureFlawAssigned then 
	'occurredFeatureFlaw' ' :={ '
	variable 'FeatureFlawAssigned' read 
	'}'
endif 

if $HazardousEventAssigned then 
	'occurredHazardousEvent' ' :={ '
	variable 'HazardousEventAssigned' read 
	'}'
endif 

if $LogicalEventAssigned then 
	'occurredLogicalEvent' ' :={ '
	variable 'LogicalEventAssigned' read 
	'}'
endif 

if $ExecutionEventAssigned then 
	'occurredExecutionEvent' ' :={ '
	variable 'ExecutionEventAssigned' read 
	'}'
endif 
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<polygon fill="rgb(128,0,0)" points="138,10 130,19.4444 134,19.4444 130,27 140,17.5555 136,17.5555" stroke="rgb(128,0,0)" stroke-width="1">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</polygon>
												</svg>
											</objectSymbol>
											<icon offset="50,20" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="110" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
													<polygon fill="rgb(128,0,0)" points="90,20 50,70 70,70 50,110 100,60 80,60" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
												</svg>
											</icon>
										</object>
									</dataType>
									<dataTypeSubtype>
										<object id="Object_BehaviorConstraintBindingEvent_sysadmin_3537598343" type="Object_BehaviorConstraintBindingEvent_sysadmin_3537598343" typeName="BehaviorConstraintBindingEvent">
											<description></description>
											<superType>
												<object href="#Object_EventOccurrence__sysadmin_3508150778"></object>
											</superType>
											<slot id="a34ht" name="bindingThroughClampConnector" unique="false">
												<property id="Property_bindingThroughClampConnector_sysadmin_3548115927" type="Property_bindingThroughClampConnector_sysadmin_3548115927" typeName="bindingThroughClampConnector">
													<description></description>
													<dataType>
														<relationship id="Relationship_ClampConnector_sysadmin_3509625807" type="Relationship_ClampConnector_sysadmin_3509625807" typeName="ClampConnector">
															<description>ClampConnectors represents the interaction link between a functional model of the EE Architecture and the functional model of the plant.  The clamp connector connects ports across function boundaries and containment hierarchies.</description>
															<slot id="a1c0lb" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="a3u9xm" name="Short name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="a2c0ks" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="a41j3s" name="Description" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
															<relationshipSymbol offset="100,26" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
																<defaultConnectable isSticky="true" points="130,40 150,40 150,50 130,50 130,40" targetPointX="140" targetPointY="45" usesGrid="false"></defaultConnectable>
																<svg baseProfile="tiny" height="50" version="1.2" width="179" xmlns="http://www.w3.org/2000/svg">
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="10" sym:width="20" sym:x="1.3e2" sym:y="4.0e1">
																		<polygon fill="rgb(0,0,0)" points="150,43.3333 145,45 145,41.6667" stroke="rgb(0,0,0)" stroke-width="1">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</polygon>
																		<polyline fill="none" points="130,45 135,40 140,50 142.5,43.3333 145,43.3333" stroke="rgb(0,0,0)" stroke-width="1">
																			<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																		</polyline>
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</g>
																	<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="79" x="100" y="26">
																		ReportTextSource:id
																		<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
																	</textArea>
																</svg>
															</relationshipSymbol>
															<icon offset="40,40" xmlns="http://www.metacase.com/icon">
																<svg baseProfile="tiny" height="100" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
																	<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="60" sym:width="80" sym:x="4.0e1" sym:y="4.0e1">
																		<polygon fill="rgb(0,0,0)" points="120,60 100,70 100,50" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
																		<polyline fill="none" points="40,70 60,40 80,100 90,60 100,60" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
																	</g>
																</svg>
															</icon>
														</relationship>
													</dataType>
												</property>
											</slot>
											<slot id="a44qn" name="bindingThroughFlowConnector" unique="false">
												<property id="Property_bindingThroughFunctionFlowConnector_sysadmin_3548116432" type="Property_bindingThroughFunctionFlowConnector_sysadmin_3548116432" typeName="bindingThroughFlowConnector">
													<description></description>
													<dataType>
														<relationship href="#Relationship_Flow_user_3400497401"></relationship>
													</dataType>
												</property>
											</slot>
											<slot id="a54r1" name="bindingThroughClientServerConnector" unique="false">
												<property id="Property_bindingThroughClientServerConnector_sysadmin_3548116606" type="Property_bindingThroughClientServerConnector_sysadmin_3548116606" typeName="bindingThroughClientServerConnector">
													<description></description>
													<dataType>
														<relationship href="#Relationship_ADLConnectorPrototype_user_3400412933"></relationship>
													</dataType>
												</property>
											</slot>
											<slot id="a64ru" name="bindingThroughPowerConnector" unique="false">
												<property id="Property_bindingThroughPowerConnector_sysadmin_3548116550" type="Property_bindingThroughPowerConnector_sysadmin_3548116550" typeName="bindingThroughPowerConnector">
													<description></description>
													<dataType>
														<relationship href="#Relationship_Power_user_3461401495"></relationship>
													</dataType>
												</property>
											</slot>
											<slot id="a2e6k3" name="bindingThroughHardwareConnector" unique="false">
												<property id="Property_bindingThroughHardwareConnector_sysadmin_3524469171" type="Property_bindingThroughHardwareConnector_sysadmin_3524469171" typeName="bindingThroughHardwareConnector">
													<description></description>
													<dataType>
														<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
													</dataType>
												</property>
											</slot>
											<identProp slotID="ap2mpd"></identProp>
											<objectSymbol offset="85,87" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="85,108 327,108 327,196 85,196 85,108" targetPointX="206" targetPointY="152" usesGrid="true"></defaultConnectable>
												<svg baseProfile="tiny" height="196" version="1.2" width="328" xmlns="http://www.w3.org/2000/svg">
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="28.9009" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="186" x="112" y="108.099">
														&lt;&lt;TransitionEvent&gt;&gt;
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="16.1982" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="238" x="89" y="120.297">
														ReportTextSource:id

														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="58" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="238" x="89" y="138">
														ReportTextSource:newline
$variableName = id


	do ~referred_from&gt;Reference~refer_to.FaultFailure
	{ 	

		variable 'faultFailureAssigned' append
   			id '  '
		close

	}
	
	
	do explosions 
	{	
		foreach .TransitionEvent; where id = $variableName
		{
		
			do ~referred_from&gt;Reference~refer_to.FaultFailure
			{ 	

				variable 'faultFailureAssigned' append
   			id '  '
				close

			}
					
		}
	
	}



	do ~referred_from&gt;Reference~refer_to.FeatureFlaw
	{ 	

		variable 'FeatureFlawAssigned' append
   			id '  '
		close

	}



	do ~referred_from&gt;Reference~refer_to.HazardousEvent
	{ 	

		variable 'HazardousEventAssigned' append
   			id '  '
		close

	}

	do ~referred_from&gt;Reference~refer_to.LogicalEvent
	{ 	

		variable 'LogicalEventAssigned' append
   			id '  '
		close

	}

	
	do explosions 
	{	
		foreach .TransitionEvent; where id = $variableName
		{
		
			do ~referred_from&gt;Reference~refer_to.LogicalEvent
			{ 	

				variable 'LogicalEventAssigned' append
   				id '  '
				close

			}
					
		}
	
	}

	do ~referred_from&gt;Reference~refer_to.Event
	{ 	

		variable 'ExecutionEventAssigned' append
   			id '  '
		close

	}
	
	
if $faultFailureAssigned then 
	'occurredAnomaly' ' :={ '
	variable 'faultFailureAssigned' read 
	'}'
endif



if $FeatureFlawAssigned then 
	'occurredFeatureFlaw' ' :={ '
	variable 'FeatureFlawAssigned' read 
	'}'
endif 


if $HazardousEventAssigned then 
	'occurredHazardousEvent' ' :={ '
	variable 'HazardousEventAssigned' read 
	'}'
endif 

if $LogicalEventAssigned then 
	'occurredLogicalEvent' ' :={ '
	variable 'LogicalEventAssigned' read 
	'}'
endif 


if $ExecutionEventAssigned then 
	'occurredExecutionEvent' ' :={ '
	variable 'ExecutionEventAssigned' read 
	'}'
endif 


/*
if :occurredExecutionEvent 
 then 
	newline
	'occurredExecutionEvent' ' :={ '
		:occurredExecutionEvent
	' }'
endif 

if :occurredLogicalEvent 
 then 
	newline
	'occurredLogicalEvent' ' :={ '
		:occurredLogicalEvent
	' }'
endif 


if :occurredFeatureFlaw 
 then 
	newline
	'occurredFeatureFlaw' ' :={ '
		:occurredFeatureFlaw
	' }'
endif


if :occurredAnomaly
 then 
	newline
	'occurredAnomaly' ' :={ '
		:occurredAnomaly
		
		foreach .FaultFailurePort;
		{	
		:assignedFaultFailure
		}
		
		
endif 
*/	
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<rect fill="none" height="23" rx="0" ry="0" stroke="none" stroke-width="1" width="36" x="93" y="114">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<line stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="0" x1="85" x2="328" y1="137" y2="137">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</line>
													<polygon fill="rgb(128,0,0)" points="215,87 207,96.4444 211,96.4444 207,104 217,94.5556 213,94.5556" stroke="rgb(128,0,0)" stroke-width="1">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</polygon>
												</svg>
											</objectSymbol>
											<icon offset="234,114" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="132" version="1.2" width="272.416" xmlns="http://www.w3.org/2000/svg">
													<g fill="none" stroke="none" stroke-width="1" sym:height="18" sym:width="38.4161" sym:x="2.34e2" sym:y="1.14e2">
														<polygon fill="rgb(128,0,0)" points="256.188,114 248.706,122.111 252.447,122.111 248.706,128.6 258.059,120.489 254.318,120.489" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
														<g fill="none" stroke="none" stroke-width="1" sym:height="12.5714" sym:width="13.4161" sym:x="2.34e2" sym:y="1.194286e2">
															<rect fill="none" height="12.5714" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="234" y="119.429"></rect>
															<ellipse cx="240.61" cy="126.062" fill="rgb(0,128,128)" rx="4.9544" ry="4.84035" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
															<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="10.3764" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="234.32" y="120.325">B</textArea>
														</g>
														<g fill="none" stroke="none" stroke-width="1" sym:height="12.5714" sym:width="13.4161" sym:x="2.59e2" sym:y="1.194286e2">
															<rect fill="none" height="12.5714" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="259" y="119.429"></rect>
															<ellipse cx="265.61" cy="126.062" fill="rgb(0,128,128)" rx="4.95439" ry="4.84035" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
															<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="10.3764" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="259.32" y="120.325">B</textArea>
														</g>
														<line stroke="rgb(0,0,0)" stroke-width="1" x1="247" x2="259" y1="127.429" y2="127.429"></line>
													</g>
												</svg>
											</icon>
										</object>
									</dataTypeSubtype>
								</property>
							</slot>
							<slot id="a5ma26" name="endPointReference" unique="false">
								<property type="Property_endPointReference_sysadmin_3508397751" typeName="endPointReference">
									<description></description>
									<dataType>
										<object href="#Object_EventOccurrence__sysadmin_3508150778"></object>
									</dataType>
									<dataTypeSubtype>
										<object href="#Object_BehaviorConstraintBindingEvent_sysadmin_3537598343"></object>
									</dataTypeSubtype>
								</property>
							</slot>
							<slot id="a9vhud" name="consecutiveTimeCondition" unique="false">
								<property type="Property_consecutiveTimeCondition_sysadmin_3527928330" typeName="consecutiveTimeCondition">
									<description></description>
									<dataType>
										<object href="#Object_LogicalTimeCondition_sysadmin_3508139785"></object>
									</dataType>
								</property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="40,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="40,40 240,40 260,60 260,150 40,150 40,40" targetPointX="150" targetPointY="95" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="150" version="1.2" width="260" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="1" x2="1" y1="0.483333" y2="1">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="1" stop-color="rgb(213,213,213)"></stop>
										</linearGradient>
									</defs>
									<polygon fill="url(#gradient1)" points="40,40 40,150 260,150 260,60 240,40" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="40" y="40">
										ReportTextSource:'LogicalTimeCondition' newline
id

										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="17.1982" sym:width="17" sym:x="4.3e1" sym:y="4.3e1">
										<ellipse cx="51.5" cy="51.5991" fill="none" rx="8.5" ry="8.5991" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</ellipse>
										<polyline fill="none" points="51.5,47.2996 51.5,51.5991 55.75,55.8987 55.75,55.8987" stroke="rgb(0,0,0)" stroke-width="1">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polyline>
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</g>
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="220" x="40" y="80">
										ReportTextSource:if :upper 
then 
'upper := ':upper
newline
endif

if :lower 
then 
'lower := '  :lower
newline
endif

 
if :width 
then 
'width := ' :width
newline
endif
 
if :logicalTimeCondition 
then 
'logicalTimeCondition := ' 
	:logicalTimeCondition
newline
endif 

if :startPointReference 
then 
'startPointReference := ' 
	:startPointReference
newline
endif 

if :endPointReference
then 
'endPointReference := ' 
	:endPointReference
newline
endif 

if :consecutiveTimeCondition
then 
'consecutiveTimeCondition := ' 
	:consecutiveTimeCondition
newline
endif 
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="none" height="23" rx="0" ry="0" stroke="none" stroke-width="1" width="36" x="50" y="40">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<line stroke="rgb(128,128,128)" stroke-width="0" x1="40" x2="260" y1="80" y2="80">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="none" points="240,40 240,60 260,60" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
								</svg>
							</objectSymbol>
							<icon offset="60,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="90" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
									<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="40" sym:width="40" sym:x="6.0e1" sym:y="5.0e1">
										<ellipse cx="80" cy="70" fill="rgb(255,255,255)" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
										<polyline fill="none" points="80,60 80,70 90,80 90,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
									</g>
								</svg>
							</icon>
						</object>
					</contentsDataType>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="30,35" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="277.25,112.25 276.489,116.077 274.321,119.321 271.077,121.489 267.25,122.25 39.25,122.25 35.4232,121.489 32.1789,119.321 30.0112,116.077 29.25,112.25 29.25,44.25 30.0112,40.4232 32.1789,37.1789 35.4232,35.0112 39.25,34.25 267.25,34.25 271.077,35.0112 274.321,37.1789 276.489,40.4232 277.25,44.25 277.25,112.25" targetPointX="153.25" targetPointY="78.25" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="122" version="1.2" width="277" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.993927" x2="1" y1="0.41954" y2="1">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(242,242,242)"></stop>
						</linearGradient>
					</defs>
					<rect fill="url(#gradient1)" height="87" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="2" width="247" x="30" y="35">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="86" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="247" x="30" y="36">
						ReportTextSource:'&lt;&lt;Quantification&gt;&gt;' newline
id

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="87" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="246" x="31" y="35">
						ReportTextSource:newline newline
to '%null' newline '* $' endto

$operandCount='0'
$operandList=''

$subQuantificationCount='0'
$subQuantificationList=''


do ~referred_from&gt;()~refer_to.Attribute
   { 
		variable 'operandList' append	
      	:Short name; '; '
			$operandCount++%null
		close
   }

if not ($operandCount = '0') then
		'operand' ' := { ' 
		$operandList
		'}'
		newline
endif

do ~referred_from&gt;()~refer_to.(Quantification | LogicalEvent)
  { 
		variable 'subQuantificationList' append	
      	:Short name; '; '
			$subQuantificationCount++%null
		close
   }

if not ($subQuantificationCount = '0') then
		'subQuantification' ' := { ' 
		$subQuantificationList
		'}'
		newline
endif		

if :expression 
then 
'expression' ' := { '  
  :expression
' }'
endif

/*
if :subQuantification
then 
 newline
'subexpression' ' := { '  
  
	do :subQuantification
	{	
		:Short name; '; '
	}


'}'
endif
*/

if :timeCondition
then 
 newline
'timeCondition' ' := { '  
  :timeCondition
' }'
endif 

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<image height="12" ns:href="Object_Quantification_sysadmin_3508139708-1.png" sym:scale="0.113636,0.131868" width="30" x="37" y="38">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</image>
				</svg>
			</objectSymbol>
			<icon offset="11,15" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="24" version="1.2" width="34" xmlns="http://www.w3.org/2000/svg">
					<image height="9" ns:href="Object_Quantification_sysadmin_3508139708-Icon-1.png" sym:scale="0.234694,0.257143" width="23" x="11" y="15"></image>
				</svg>
			</icon>
		</object>
		<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
		<object id="Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279" type="Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279" typeName="BehaviorConstraintBindingAttribute">
			<description></description>
			<superType>
				<object href="#Object_Attribute_sysadmin_3508150739"></object>
			</superType>
			<slot id="a4zi6j" name="bindingThroughClampConnector" unique="false">
				<property href="#Property_bindingThroughClampConnector_sysadmin_3548115927"></property>
			</slot>
			<slot id="a6zijm" name="bindingThroughFlowConnector" unique="false">
				<property href="#Property_bindingThroughFunctionFlowConnector_sysadmin_3548116432"></property>
			</slot>
			<slot id="a7zijx" name="bindingThroughClientServerConnector" unique="false">
				<property href="#Property_bindingThroughClientServerConnector_sysadmin_3548116606"></property>
			</slot>
			<slot id="a8zikm" name="bindingThroughPowerConnector" unique="false">
				<property href="#Property_bindingThroughPowerConnector_sysadmin_3548116550"></property>
			</slot>
			<slot id="a2e6i4" name="bindingThroughHardwareConnector" unique="false">
				<property href="#Property_bindingThroughHardwareConnector_sysadmin_3524469171"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="30,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="114,14 132,14 132,31 114,31 114,14" targetPointX="122.809" targetPointY="22.1852" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="80" version="1.2" width="220" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(0,0,0)" height="17" rx="0" ry="0" stroke="none" stroke-width="1" width="19" x="110" y="10">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :isExternVisible; then 'T' endif</displayCondition>
						</metaInfo>
					</rect>
					<rect fill="rgb(255,255,255)" height="17" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="2" width="18" x="114" y="14">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :isExternVisible; then 'T' endif
</displayCondition>
						</metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="190" x="30" y="30">
						ReportTextSource:'&lt;&lt;BehaviorConstraintBindingAttribute&gt;&gt;' newline
id; ' : ' 
if :type; then 
	:type	
else
	'&lt;undefined type&gt;'	
endif 
newline
if :isExternVisible; then
	if :visibleThroughFunctionPort; then 
		'visibleThroughFunctionPort' ' =: { '	
		:visibleThroughFunctionPort
		'  }'
		newline
	endif 
	if :visibleThroughHardwarePin; then 
		'visibleThroughHardwarePin' ' =: { ' 
				:visibleThroughHardwarePin
		'  }'
		newline
	endif 
else
	'isExternVisible := ' 'FALSE'
	newline
endif
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<rect fill="rgb(255,255,255)" height="17" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="18" x="114" y="14">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if not :isExternVisible; then 'T' endif</displayCondition>
						</metaInfo>
					</rect>
					<image height="10" ns:href="Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279-1.png" sym:scale="0.107527,0.116279" width="10" x="118" y="17">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</image>
				</svg>
			</objectSymbol>
			<icon offset="125,130" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="151" version="1.2" width="163.416" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="none" stroke-width="1" sym:height="21" sym:width="38.4161" sym:x="1.25e2" sym:y="1.3e2">
						<g fill="none" stroke="none" stroke-width="1" sym:height="11" sym:width="13.4161" sym:x="1.25e2" sym:y="1.4e2">
							<rect fill="none" height="11" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="125" y="140"></rect>
							<ellipse cx="131.61" cy="145.804" fill="rgb(0,128,128)" rx="4.9544" ry="4.2353" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
							<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="9.0793" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="125.32" y="140.784">B</textArea>
						</g>
						<g fill="none" stroke="none" stroke-width="1" sym:height="11" sym:width="13.4161" sym:x="1.5e2" sym:y="1.4e2">
							<rect fill="none" height="11" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="150" y="140"></rect>
							<ellipse cx="156.61" cy="145.804" fill="rgb(0,128,128)" rx="4.9544" ry="4.2353" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
							<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="9.0793" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="150.32" y="140.784">B</textArea>
						</g>
						<line stroke="rgb(0,0,0)" stroke-width="1" x1="138" x2="150" y1="147" y2="147"></line>
						<textArea display-align="center" fill="rgb(0,0,0)" font-family="magneto" font-size="20" font-style="normal" font-weight="normal" height="17" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="17" x="136" y="130">X</textArea>
					</g>
				</svg>
			</icon>
		</object>
		<relationship id="Relationship_reference_sysadmin_3524947284" type="Relationship_reference_sysadmin_3524947284" typeName="Reference">
			<description>Reference denotes a reference link between two model elements.</description>
			<icon offset="67,44" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="70" version="1.2" width="93" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="82,49.5263 93,44 88.4167,55" stroke="rgb(0,0,0)" stroke-width="2"></polyline>
					<line stroke="rgb(0,0,0)" stroke-width="2" x1="93" x2="67" y1="44" y2="70"></line>
				</svg>
			</icon>
		</relationship>
		<role id="Role_referred_from_sysadmin_3524947545" type="Role_referred_from_sysadmin_3524947545" typeName="referred_from">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(128,128,128)" stroke-dasharray="8,2" stroke-width="0">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_refer_to_sysadmin_3524947529" type="Role_refer_to_sysadmin_3524947529" typeName="refer_to">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(128,128,128)" stroke-dasharray="8,2" stroke-width="0">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="140,76 150,80 140,84" stroke="rgb(128,128,128)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
				<object href="#Object_Quantification_sysadmin_3508139708"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<object href="#Object_Attribute_sysadmin_3508150739"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
				<object href="#Object_Quantification_sysadmin_3508139708"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
				<object href="#Object_Quantification_sysadmin_3508139708"></object>
			</connection>
		</binding>
		<explosion>
			<object href="#Object_Attribute_sysadmin_3508150739"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
			<graph id="Graph_HardwareDesignArchitecture_user_3400132575" type="Graph_HardwareDesignArchitecture_user_3400132575" typeName="HardwareComponentType">
				<description>EAST-ADL version M2.1.12
HardwareModeling contains the elements to model physical entities of the embedded electrical/electronic system.</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="achzy0" name="Type" unique="false">
					<property type="Property_HardwareComponentType_user_3483103644" typeName="HardwareComponentType">
						<description>Type is a mandatory field.</description>
						<dataType>
							<object id="Object_HardwareComponentType_user_3462791051" type="Object_HardwareComponentType_user_3462791051" typeName="HardwareComponentType">
								<description>The HardwareComponentType represents hardware element on an abstract level, allowing preliminary engineering activities related to hardware.</description>
								<superType>
									<object type="Object_HardwareComponentType_user_3460789585" typeName="_HardwareComponents">
										<description>The HardwareComponentType is a structural entity that defines a part of an electrical architecture.</description>
										<slot id="f1cb1p" name="__UUID" unique="false">
											<property href="#Property___UUID_sysadmin_3604668056"></property>
										</slot>
										<slot id="f03d9p" name="Short name" unique="false">
											<property type="Property_HardwareComponentName_sysadmin_3555825654" typeName="HardwareComponentName">
												<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
												<dataType>
													<simpleType>String</simpleType>
												</dataType>
												<defaultValue>
													<string></string>
												</defaultValue>
												<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
												<widget>Input Field</widget>
											</property>
										</slot>
										<slot id="f2cb1f" name="Name" unique="false">
											<property href="#Property_Name_sysadmin_3536998876"></property>
										</slot>
										<slot id="ezgo1l" name="Description" unique="false">
											<property href="#Property_2Description_user_3310902697"></property>
										</slot>
										<identProp slotID="f03d9p"></identProp>
									</object>
								</superType>
								<identReport>:Short name;  ' &lt;' type '&gt;'</identReport>
								<icon offset="20,20" xmlns="http://www.metacase.com/icon">
									<svg baseProfile="tiny" height="139" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
										<rect fill="none" height="119" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="4" width="180" x="20" y="20"></rect>
									</svg>
								</icon>
							</object>
						</dataType>
						<dataTypeSubtype>
							<object type="Object_ActuatorType_user_3483103559" typeName="ActuatorType">
								<description>The Actuator is the element that represents electrical actuators, such as valves, motors, lamps, brake units, etc. Non-electrical actuators such as the engine, hydraulics, etc. are considered part of the plant model (environment). Plant models are not part of the Hardware Design Architecture. </description>
								<superType>
									<object href="#Object_HardwareComponentType_user_3462791051"></object>
								</superType>
								<identReport>:Short name;  ' &lt;' type '&gt;'</identReport>
								<icon offset="31,16" xmlns="http://www.metacase.com/icon">
									<svg baseProfile="tiny" height="136.25" version="1.2" width="211" xmlns="http://www.w3.org/2000/svg">
										<rect fill="rgb(255,255,255)" height="120" rx="0" ry="0" stroke="rgb(0,0,255)" stroke-width="4" width="180" x="31" y="16.25"></rect>
										<line stroke="rgb(0,0,255)" stroke-width="4" x1="50.75" x2="50.75" y1="16" y2="136"></line>
										<line stroke="rgb(0,0,255)" stroke-width="4" x1="190.75" x2="190.75" y1="16" y2="136"></line>
									</svg>
								</icon>
							</object>
						</dataTypeSubtype>
						<dataTypeSubtype>
							<object type="Object_PowerSupplyType_user_3483103447" typeName="ElectricalComponentType">
								<description>ElectricalComponent represents a hardware element as e.g. relays, batteries, capacitors and other non-computational, non-interactional (with plant) elements.</description>
								<superType>
									<object href="#Object_HardwareComponentType_user_3462791051"></object>
								</superType>
								<slot id="a3hzm7" name="IsActive" unique="false">
									<property id="Property_IsActive_user_3400153841" type="Property_IsActive_user_3400153841" typeName="IsActive">
										<description>Indicates if the PowerSupply is active or passive.</description>
										<dataType>
											<simpleType>String</simpleType>
										</dataType>
										<defaultValue>
											<string>True</string>
										</defaultValue>
										<widget>Radio Button Set</widget>
										<listValues>
											<string>True</string>
											<string>False</string>
										</listValues>
									</property>
								</slot>
								<identReport>:Short name; ' &lt;' type '&gt;'</identReport>
								<icon offset="20,30" xmlns="http://www.metacase.com/icon">
									<svg baseProfile="tiny" height="150" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
										<rect fill="rgb(255,255,255)" height="120" rx="0" ry="0" stroke="rgb(170,170,170)" stroke-width="4" width="180" x="20" y="30"></rect>
									</svg>
								</icon>
							</object>
						</dataTypeSubtype>
						<dataTypeSubtype>
							<object type="Object_NodeType_user_3483103336" typeName="NodeType">
								<description>NodeType represents the computer nodes of the embedded electrical/electronic system. Nodes consist of processor(s) and may be connected to sensors, actuators and other ECUs via a BusConnector. Node denotes an electronic control unit that acts as a computing element executing Functions. In case a single CPU-single core ECU is represented, it is sufficient to have a single, non-hierarchical Node. </description>
								<superType>
									<object href="#Object_HardwareComponentType_user_3462791051"></object>
								</superType>
								<slot id="a0hyr4" name="ExecutionRate" unique="false">
									<property type="Property_ExecutionRate_user_3460790027" typeName="ExecutionRate">
										<description>ExecutionRate is used to compute an approximate execution time. A nominal execution time divided by executionRate provides the actual execution time to be used e.g. for timing analysis in feasibility studies.</description>
										<dataType>
											<simpleType>String</simpleType>
										</dataType>
										<defaultValue>
											<string>1.0</string>
										</defaultValue>
										<widget>Input Field</widget>
									</property>
								</slot>
								<identReport>:Short name;  ' &lt;' type '&gt;'</identReport>
								<icon offset="10,20" xmlns="http://www.metacase.com/icon">
									<svg baseProfile="tiny" height="140" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
										<rect fill="rgb(255,255,255)" height="120" rx="10" ry="6" stroke="rgb(0,128,128)" stroke-width="4" width="180" x="10" y="20"></rect>
									</svg>
								</icon>
							</object>
						</dataTypeSubtype>
						<dataTypeSubtype>
							<object type="Object_SensorType_user_3483103494" typeName="SensorType">
								<description>SensorType represents a hardware entity for digital or analog sensor elements. The Sensor is connected electrically to the electrical entities of the Hardware Design Architecture. </description>
								<superType>
									<object href="#Object_HardwareComponentType_user_3462791051"></object>
								</superType>
								<identReport>:Short name;  ' &lt;' type '&gt;'</identReport>
								<icon offset="10,20" xmlns="http://www.metacase.com/icon">
									<svg baseProfile="tiny" height="140" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
										<rect fill="rgb(255,255,255)" height="120" rx="58" ry="33" stroke="rgb(255,128,0)" stroke-width="4" width="180" x="10" y="20"></rect>
									</svg>
								</icon>
							</object>
						</dataTypeSubtype>
						<regex>.+</regex>
					</property>
				</slot>
				<slot id="aef5sq" name="Show report" unique="false">
					<property type="Property_Show_report_user_3505712269" typeName="Show report">
						<description>Choosing the LiveCheck output choise (bottom pane of the diagram editor)</description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string>Checking</string>
						</defaultValue>
						<widget>Fixed List</widget>
						<listValues>
							<string>Checking</string>
							<string>Unconnected pins</string>
						</listValues>
					</property>
				</slot>
				<slot id="afmndi" name="Show allocated prototypes" unique="false">
					<property type="Property_Show_allocated_prototypes_sysadmin_3558794859" typeName="Show allocated prototypes">
						<description></description>
						<dataType>
							<simpleType>Boolean</simpleType>
						</dataType>
						<defaultValue></defaultValue>
					</property>
				</slot>
				<identReport>do :Type {:Short name}</identReport>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_LogicalBus_user_3460790250"></object>
				<object href="#Object_CommunicationHardwarePin_To_user_3461929103"></object>
				<object href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></object>
				<object href="#Object_CommunicationHardwarePin_From_user_3461928850"></object>
				<object href="#Object_PowerHardwarePin_To_user_3461930006"></object>
				<object href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></object>
				<object href="#Object_PowerHardwarePin_From_user_3461930168"></object>
				<object href="#Object_IOHardwarePin_To_user_3461931130"></object>
				<object href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></object>
				<object href="#Object_IOHardwarePin_From_user_3461930920"></object>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
				<object href="#Object_QualityRequirement_user_3400822352"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_Joker_user_3399887441"></object>
				<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
				<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
				<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
				<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
				<relationship id="Relationship_ReqRelation_user_3401014914" type="Relationship_ReqRelation_user_3401014914" typeName="RequirementsLink">
					<description>The RequirementsLink defines a relation from a set of source and target requirements. The Bidirectional attribute defines whether the relation is bidirectional. </description>
					<slot id="af3naz" name="Name" unique="false">
						<property type="Property_Link_name_user_3462613469" typeName="Link name">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="aer3so" name="Bidirectional" unique="false">
						<property type="Property_Bidirectional_user_3401014908" typeName="Bidirectional">
							<description>When set to true, the semantic relation represented by this instance of RequirementRelation does not only apply to the direction from source to target (as always) but also in the opposite direction. </description>
							<dataType>
								<simpleType>Boolean</simpleType>
							</dataType>
							<defaultValue></defaultValue>
						</property>
					</slot>
					<identProp slotID="af3naz"></identProp>
					<relationshipSymbol offset="73,53" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" targetPointX="125" targetPointY="70" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="71" version="1.2" width="176" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="18" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="103" x="73" y="53">
								PropertyTextSource:af3naz
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="105,42" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="67" version="1.2" width="134" xmlns="http://www.w3.org/2000/svg">
							<polygon fill="rgb(0,0,128)" points="134,42 112,51.5 123,51.5 123,61" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="127" x2="105" y1="48" y2="67"></line>
						</svg>
					</icon>
				</relationship>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role href="#Role_Comment_user_3460793566"></role>
				<role id="Role_CommunicationHwPort_user_3400146070" type="Role_CommunicationHwPort_user_3400146070" typeName="CommunicationHardwarePin_From">
					<description>CommunicationHardwarePin represents an electrical connection point that can be used to define how the wire harness is logically defined. </description>
					<superType>
						<role id="Role_ADLHwPort_user_3400146051" type="Role_ADLHwPort_user_3400146051" typeName="HardwarePin">
							<description>HardwarePin represents electrical connection points in the hardware architecture. Depending on modeling style, the actual wire or a logical connection can be considered.</description>
						</role>
					</superType>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:_sym_PinInOutRoleLabel()
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(255,255,255)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,128)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,128)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_CommunicationHardwarePin_To_user_3460791089" type="Role_CommunicationHardwarePin_To_user_3460791089" typeName="CommunicationHardwarePin_To">
					<description>CommunicationHardwarePin represents an electrical connection point that can be used to define how the wire harness is logically defined. </description>
					<superType>
						<role href="#Role_ADLHwPort_user_3400146051"></role>
					</superType>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:_sym_PinInOutRoleLabel()
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(255,255,255)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,128)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,128)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_IoHwPort_user_3400146620" type="Role_IoHwPort_user_3400146620" typeName="IOHardwarePin_From">
					<description>IOHardwarePin represents an electrical connection point for digital or analog I/O.</description>
					<superType>
						<role href="#Role_ADLHwPort_user_3400146051"></role>
					</superType>
					<identProp slotID="a5xikg"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(25,25,203)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:_sym_PinInOutRoleLabel()
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(255,255,255)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,255)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,255)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_IOHardwarePin_To_user_3460791518" type="Role_IOHardwarePin_To_user_3460791518" typeName="IOHardwarePin_To">
					<description>IOHardwarePin represents an electrical connection point for digital or analog I/O.</description>
					<superType>
						<role href="#Role_ADLHwPort_user_3400146051"></role>
					</superType>
					<identProp slotID="a5xikg"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(25,25,203)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:_sym_PinInOutRoleLabel()
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(255,255,255)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,255)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(128,128,255)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_PowerHwPort_user_3400146890" type="Role_PowerHwPort_user_3400146890" typeName="PowerHardwarePin_From">
					<description>PowerHardwarePin represents a pin that is primarily intended for power supply, either providing or consuming energy.</description>
					<superType>
						<role href="#Role_ADLHwPort_user_3400146051"></role>
					</superType>
					<identProp slotID="a5xikg"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:_sym_PinInOutRoleLabel()
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(224,255,224)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,128,0)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,128,0)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_PowerHardwarePin_To_user_3460793336" type="Role_PowerHardwarePin_To_user_3460793336" typeName="PowerHardwarePin_To">
					<description>PowerHardwarePin represents a pin that is primarily intended for power supply, either providing or consuming energy.</description>
					<superType>
						<role href="#Role_ADLHwPort_user_3400146051"></role>
					</superType>
					<identProp slotID="a5xikg"></identProp>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="104" version="1.2" width="163.5" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="74">
								ReportTextSource:_sym_PinInOutRoleLabel()
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(224,255,224)" points="163.5,80 163.155,85.2139 158.749,84.924 154.875,84.3301 152.347,81.7101 152.347,78.2899 154.875,75.6699 158.749,75.076 163,75" stroke="none" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,128,0)" points="156,76 152,80 156,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
							<polygon fill="rgb(0,128,0)" points="158,76 162,80 158,84" stroke="rgb(0,0,0)" stroke-width="0">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:_symShowInOutPinIcons()</displayCondition>
								</metaInfo>
							</polygon>
						</svg>
					</roleSymbol>
				</role>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<role id="Role_PortFrom_user_3461409536" type="Role_PortFrom_user_3461409536" typeName="IOPort_To">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(25,25,203)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_PortTo_user_3461409547" type="Role_PortTo_user_3461409547" typeName="CommunicationPort_From">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_CommunicationPortFrom_user_3463037336" type="Role_CommunicationPortFrom_user_3463037336" typeName="CommunicationPort_To">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role href="#Role_PowerPortFrom_user_3463037350"></role>
				<role id="Role_IOPortTo_user_3463038024" type="Role_IOPortTo_user_3463038024" typeName="IOPort_From">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(213,213,213)" stroke-width="5">
							<metaInfo shouldRotate="false">
								<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:subreport '_sym LogicalBus' run</displayCondition>
							</metaInfo>
						</rolelineGOs>
						<rolelineGOs stroke="rgb(25,25,203)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role href="#Role_PowerPortTo_user_3463037978"></role>
				<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
				<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
				<role href="#Role_Derived_user_3401339852"></role>
				<role href="#Role_DerivedFrom_user_3401339830"></role>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<object href="#Object_LogicalBus_user_3460790250"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_HDAPort_user_3463141315"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<object href="#Object_LogicalBus_user_3460790250"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_HDAPort_user_3463141315"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_DerivedFrom_user_3401339830"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Derived_user_3401339852"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_CommunicationHwPort_user_3400146070"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></port>
						<port href="#Object_CommunicationHardwarePin_From_user_3461928850"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_CommunicationHardwarePin_To_user_3460791089"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_CommunicationHardwarePin_To_user_3461929103"></port>
						<port href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_CommunicationHwPort_user_3400146070"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></port>
						<port href="#Object_CommunicationHardwarePin_From_user_3461928850"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_CommunicationPortFrom_user_3463037336"></role>
						<object href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></object>
						<object href="#Object_CommunicationHardwarePin_From_user_3461928850"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PortTo_user_3461409547"></role>
						<object href="#Object_CommunicationHardwarePin_To_user_3461929103"></object>
						<object href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_CommunicationHardwarePin_To_user_3460791089"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_CommunicationHardwarePin_To_user_3461929103"></port>
						<port href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerPortTo_user_3463037978"></role>
						<object href="#Object_PowerHardwarePin_To_user_3461930006"></object>
						<object href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerHardwarePin_To_user_3460793336"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_PowerHardwarePin_To_user_3461930006"></port>
						<port href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_IoHwPort_user_3400146620"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></port>
						<port href="#Object_IOHardwarePin_From_user_3461930920"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_IOHardwarePin_To_user_3460791518"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_IOHardwarePin_To_user_3461931130"></port>
						<port href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_IoHwPort_user_3400146620"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></port>
						<port href="#Object_IOHardwarePin_From_user_3461930920"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PortFrom_user_3461409536"></role>
						<object href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></object>
						<object href="#Object_IOHardwarePin_From_user_3461930920"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_IOPortTo_user_3463038024"></role>
						<object href="#Object_IOHardwarePin_To_user_3461931130"></object>
						<object href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_IOHardwarePin_To_user_3460791518"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_IOHardwarePin_To_user_3461931130"></port>
						<port href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerHwPort_user_3400146890"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></port>
						<port href="#Object_PowerHardwarePin_From_user_3461930168"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerPortFrom_user_3463037350"></role>
						<object href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></object>
						<object href="#Object_PowerHardwarePin_From_user_3461930168"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerHwPort_user_3400146890"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></port>
						<port href="#Object_PowerHardwarePin_From_user_3461930168"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_PowerHardwarePin_To_user_3460793336"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<port href="#Object_PowerHardwarePin_To_user_3461930006"></port>
						<port href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Base_Realization_user_3400739113"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_2FunctionalDevice_user_3311233351"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
					</connection>
				</binding>
				<decomposition>
					<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
					<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
				</decomposition>
				<report>
					Report '!Check'
/* Checking generator for EAST-ADL HardwareModels */
Check()
endreport
					<icon offset="80,32" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="128" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="80" y="40"></rect>
							<polygon fill="url(#gradient1)" points="89.3,44.5714 85,50.8571 85,57.1429 97.9,76 102.2,76 128,44.5714 128,38.2857 123.7,32 119.4,32 101.34,60.9143 93.6,44.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>Report 'Check'
subreport '_translators' run
subreport '_EAST-ADL specific translators' run
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

/* Checking for legal path hierarchy */
_LegalTypePath()

if $legal &lt;&gt; 'F' then
	subreport '_checkings' run 
endif

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif

endreport</report>
				<report>TypeDeclaration()
/* Reports graphs in which type is declared: EAType referring to this HardwareComponentType */
_TypeDeclaration()</report>
				<report>TypeUsers()
/* Reports prototypes using the selected type in type-prototype hierarchy */
do graphs where type = 'HardwareComponentType' or type = 'SystemModel' {
	foreach .HardwareComponentPrototype {
		do decompositions where oid = oid;3 {
			id;1 ' &lt;' type;1 '&gt; in ' id;2 ' uses ' id newline
		}
	}
}</report>
				<report>Report 'Unconnected pins'
subreport '_translators' run
/* Reports the unconnected pins */
foreach .HardwareComponentPrototype
{
	$pins = ' '
	$found = 'F'
	$unused_pins = ''
	/* Set the pins variable to include all the connected pins */
	do #() { 
		variable 'pins' append oid ' ' close
	}
	/* Compares all the pins the the connected pins (pins variable) */
	do decompositions {
		foreach .(*Pin*) {
			if not $pins =~ oid%wildsp then
				variable 'unused_pins' append '- ' id ' &lt;' type '&gt;' newline close
				$found = 'T'
			endif
		}
	}
	/* Report all the unconnected pins */
	if $found = 'T' then
		id ' &lt;' type '&gt; has unconnected pin(s): 'newline
		$unused_pins 
	endif
}
endreport</report>
				<report>Report '_all checks'
subreport '_translators' run
subreport '_EAST-ADL specific translators' run
$warnings = '0'
$LiveCheck = 'T'

subreport '_checkings' run 

if $warnings = '0' then
	'No warnings' newline
endif
endreport</report>
				<report>_ARActuatorType()
'SensorActuatorSWComponentType: ' :Short name;2 newline</report>
				<report>_ARHardwareComponentType()
'ApplicationSWComponentType: ' :Short name;2 newline</report>
				<report>Report '_ARNodeType'
'EcuAbstractionComponentType: ' :Short name;2 newline
endreport</report>
				<report>_ARSensorType()
'SensorActuatorSWComponentType: ' :Short name;2 newline</report>
				<report>Report '_checkings'
/* Checkings generator for EAST-ADL Hardware models */

/* Checkings for Objects */
subreport '_checkings for the objects' run

/* Checkings for Roles */
subreport '_checkings for the roles' run

/* Checkings for relationships */
subreport '_checkings for the relationships' run

/* Checkings for the Model */
subreport '_checkings for the graph' run

endreport</report>
				<report>Report '_checkings for the graph'
/* Checkings for the model */
if not id; then
	_reportWarnings()
	'Warning: There is no identifier for model &lt;' type '&gt;' newline
else
	do :Type 
	{
		if not :Short name; =/ '[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?' then
			_reportWarnings()
			'Warning: There are illegal character(s) in graph''s name ' :Short name; ' &lt;' type '&gt;' newline
		endif
	}
endif
endreport</report>
				<report>Report '_connectors'
/* Relationships */
/* First excluding all the connectors listed in HardwarePortConnector */
variable 'hardwarePortConnectors' write ' '
	foreach .HardwarePortConnector { do :Connectors { oid ' ' } }
close
'&lt;CONNECTORS&gt;'
foreach &gt;HardwareConnector
{	if not $hardwarePortConnectors =~ oid%wildsp And not $reported_relationships =~ oid%wildsp then
		variable 'reported_relationships' append oid ' ' close
		newline
		'&lt;!-- HARDWARE-CONNECTOR name: ' 
		if :Name; then 
			:Name; 
		else 
			if :Short name; then 
				:Short name; 
			endif 
		endif 
		' --&gt;' newline 
		'&lt;!--  path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;HARDWARE-CONNECTOR UUID="' :__UUID '"&gt;' newline
		if not :Short name; then 
			'&lt;SHORT-NAME&gt;' type;%var '_' oid '&lt;/SHORT-NAME&gt;' newline
		else
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		endif		
		if :Name; then 
			'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
		endif
		subreport '_description' run
		'&lt;PORT-IREFS&gt;' newline
			do ~(^Comment) 
			{
				variable 'pin' write do #(){ oid } close 
				do .() { subreport '_port irefs' run }
			}
		'&lt;/PORT-IREFS&gt;' newline 
		'&lt;/HARDWARE-CONNECTOR&gt;'
	endif
} 
'&lt;/CONNECTORS&gt;'
endreport</report>
				<report>_DesignLevel\ with\ package\ structure()
newline
local 'type_name' write 'HARDWARE-DESIGN-ARCHITECTURE' close 
local 'nameValue' write :Name;1%xml close 
local 'descriptionValue' write :Description;1%xml close 
'&lt;!-- ' @type_name ' name: ' 
if @nameValue &lt;&gt; '' then
	@nameValue ' (' :Short name;1 ')'
else
	:Short name;1%var
endif
' --&gt;' newline
'&lt;' @type_name ' UUID="' :__UUID;1 '"&gt;' newline	
'&lt;SHORT-NAME&gt;' :Short name;1;%var '&lt;/SHORT-NAME&gt;' newline
if @nameValue &lt;&gt; '' then
	'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
endif
if @descriptionValue &lt;&gt; '' then
	'&lt;OWNED-COMMENTS&gt;' newline
	'&lt;COMMENT&gt;' newline
	'&lt;BODY&gt;' @descriptionValue '&lt;/BODY&gt;' newline
	'&lt;/COMMENT&gt;' newline
	'&lt;/OWNED-COMMENTS&gt;' newline
endif
local 'HW_type_name' write do :Type { type;%minus%upper } close 
'&lt;!-- TYPE-TREF name: ' do :Type { :Short name; } ' --&gt;' newline
'&lt;TYPE-TREF TYPE="' @HW_type_name '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline
'&lt;/' @type_name '&gt;'</report>
				<report>Report '_direction'
/* Generating the direction property for the pin */
'&lt;DIRECTION&gt;'
if type =~ '*PinInOut' then
	'INOUT'
else
	if type =~ '*In' then	
		'IN'
	else
		'OUT'
	endif 
endif
'&lt;/DIRECTION&gt;' newline
endreport</report>
				<report>Report '_electricalComponent'
/* Generating the ElectricalComponent specific information */
do :Type { 
	if type = 'ElectricalComponentType' then
		'&lt;IS-ACTIVE&gt;' 
		if :IsActive; then 'true' else 'false' endif
		'&lt;/IS-ACTIVE&gt;' newline
	endif
}
endreport</report>
				<report>Report '_HardwareComponentPrototype'
/* Generating the HardwareComponentPrototype information */
local 'HWPTName' write :Short name; close
local 'HWPTShortName' write @HWPTName%toShortName close
local 'nameValue' write	:Name;%xml close 
newline
'&lt;!-- ' type%minus%upper ' name: ' 
if @nameValue &lt;&gt; '' then
	@nameValue ' (' @HWPTShortName ')'
else
	@HWPTShortName
endif
' --&gt;' newline
'&lt;!-- Path: ' variable oid '_path' read ' --&gt;' newline
'&lt;' type%minus%upper ' UUID="' :__UUID '"&gt;' newline
'&lt;SHORT-NAME&gt;' @HWPTShortName '&lt;/SHORT-NAME&gt;' newline
if :Name; then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
subreport '_description' run

do decompositions 
{
	do :Type 
		{	
			'&lt;!-- TYPE-TREF: ' :Short name; ' --&gt;' newline
			'&lt;TYPE-TREF TYPE="' type%minus%upper '"&gt;' variable oid;1 '_path' read '&lt;/TYPE-TREF&gt;' newline 
		}
}
'&lt;/' type%minus%upper '&gt;'
endreport</report>
				<report>Report '_HardwareComponentType'
/* Generating the HardwareComponentType information */
if $EAXMLoids =~oid%wildsp then
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write do :Type{ type%minus%upper } close
		variable 'model_name' write do :Type { :Short name; } close
		local 'nameValue' write	 do :Type { :Name;%xml } close 
		local 'descriptionValue' write do :Type { :Description;%xml } close 
		newline
		'&lt;!-- ' $type_name ' name: ' 
		if @nameValue &lt;&gt; '' then 
			@nameValue ' (' $model_name ')'
		else 
			$model_name 
		endif
		' --&gt;' newline
		'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
		'&lt;SHORT-NAME&gt;' $model_name '&lt;/SHORT-NAME&gt;' newline
		if @nameValue &lt;&gt; '' then
			'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
		endif
		if @descriptionValue &lt;&gt; '' then
			'&lt;OWNED-COMMENTS&gt;' newline
			'&lt;COMMENT&gt;' newline
			'&lt;BODY&gt;' @descriptionValue '&lt;/BODY&gt;' newline
			'&lt;/COMMENT&gt;' newline
			'&lt;/OWNED-COMMENTS&gt;' newline
		endif
		subreport '_owned-relationships' run 
		subreport '_connectors' run newline
		subreport '_pins' run newline;
		subreport '_parts' run newline
		subreport '_HardwarePortConnector' run

		/* Node object type */
		subreport '_node' run 

		/* ElectricalComponentType */
		subreport '_electricalComponent' run 

		'&lt;/' $type_name '&gt;'
	endif
	
	/* Reporting other types */
	foreach .()
	{	
	/* Requirements objects */
	/*	
	if type =~'*Requirement' then
			subreport '_requirement' run
		endif
	*/
	}
endif
endreport</report>
				<report>_HardwareComponentType\ with\ package\ structure()
subreport '_HardwareComponentType' run

</report>
				<report>Report '_HardwarePortConnector'
/* Creating the HardwarePortConnector information */
'&lt;PORT-CONNECTORS&gt;'
foreach .HardwarePortConnector
{
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		newline
		local 'HWPCName' write :Short name; close
		local 'HWPCShortName' write @HWPCName%toShortName close
		'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' (' @HWPCShortName ') --&gt;' newline
		'&lt;' type%minus%upper ' UUID="' :__UUID '"&gt;' newline
		'&lt;SHORT-NAME&gt;' @HWPCShortName '&lt;/SHORT-NAME&gt;' newline
		if :Name; then		
			'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
		endif
		subreport '_description' run
		'&lt;BUS-TYPE&gt;' :BusType%upper '&lt;/BUS-TYPE&gt;' newline
		'&lt;BUS-SPEED&gt;' :BusSpeed;%xml '&lt;/BUS-SPEED&gt;' newline
		'&lt;CONNECTORS&gt;'
		do :Connectors; unique {
			subreport '_HWPortConnector' run
		}
		newline
		'&lt;/CONNECTORS&gt;' newline
		'&lt;!-- HardwarePortConnectors PORT-IREFs should be listed next, this sections still under development --&gt;' newline
		'&lt;PORT-IREFS&gt;' newline
		/* Generating the Port irefs */
		'&lt;PORT-IREF&gt;' newline
		/* Generates the Hardware-Component-prototype reference */
		'&lt;HARDWARE-COMPONENT-PROTOTYPE-REF TYPE="HARDWARE-COMPONENT-PROTOTYPE"&gt;' variable oid '_path' read '/undefined&lt;/HARDWARE-COMPONENT-PROTOTYPE-REF&gt;' newline
		'&lt;HARDWARE-PORT-REF TYPE="HARDWARE-PORT"&gt;' variable oid '_path' read '/undefined&lt;/HARDWARE-PORT-REF&gt;' newline
		'&lt;/PORT-IREF&gt;' newline
		'&lt;PORT-IREF&gt;' newline
		'&lt;HARDWARE-COMPONENT-PROTOTYPE-REF TYPE="HARDWARE-COMPONENT-PROTOTYPE"&gt;' variable oid '_path' read '/undefined&lt;/HARDWARE-COMPONENT-PROTOTYPE-REF&gt;' newline
		'&lt;HARDWARE-PORT-REF TYPE="HARDWARE-PORT"&gt;' variable oid '_path' read '/undefined&lt;/HARDWARE-PORT-REF&gt;' newline
		'&lt;/PORT-IREF&gt;' newline
		'&lt;/PORT-IREFS&gt;' newline
		$logicalbus_oid=oid
		'&lt;/' type%minus%upper '&gt;'
	endif
}
'&lt;/PORT-CONNECTORS&gt;' newline
endreport</report>
				<report>_hardwarePortConnectorCheck()
/* Checks is there a wires (HarwareConnectors) listed in the model which are not used in the same model */
do :Connectors 
{	@connector_found = 'F'
	@connector_oid = oid
	foreach &gt;HardwareConnector 
	{	if oid = @connector_oid then
			@connector_found = 'T'
		endif
	}
	if @connector_found = 'F' then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; listed in ' id;1 ' &lt;' type;1 '&gt; is not defined anywhere in the model ' id;2 
		if $extendedCheck = 'T' then
			' &lt;' type;2 '&gt;'
		endif
newline
	endif
}
if :BusSpeed = '' then 
	_reportWarnings()
	'Warning: Undefined BusSpeed property for ' id newline
endif

</report>
				<report>Report '_HWPortConnector'
/* Generating the HardwareConnectors in HardwarePortConnector element */
newline
'&lt;!-- ' type ' name: ' :Short name; ' (' type;%var '_' oid ') --&gt;' newline 
'&lt;' type%minus%upper ' UUID="' :__UUID '"&gt;' newline
'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
if :Name; then 
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
subreport '_description' run
'&lt;PORT-IREFS&gt;' newline
do ~(^Comment) {
	variable 'pin' write do #(){ oid } close 
	do .() { subreport '_port irefs' run }
}
'&lt;/PORT-IREFS&gt;' newline
'&lt;/HARDWARE-CONNECTOR&gt;'
endreport</report>
				<report>Report '_inCorrectPinTypes'
/* Checking incompatable pin types for IO relationship */
$fromtype = ''
$totype = ''
/* separate checks for ports and prototypes */
do ~(IOPort_To).() {
	$totype = :Type; 
}
do ~(IO*_To)#() {
	$totype = :Type; 
}
do ~(IOPort_From).() {
	$fromtype = :Type;
}
do ~(IO*_From)#() {
	$fromtype = :Type;
}
endreport</report>
				<report>Report '_node'
/* Generating the node specific information */
do :Type { 
	if type = 'NodeType' then
		'&lt;EXECUTION-RATE&gt;' 
		if :ExecutionRate; &lt;&gt; '' then :ExecutionRate;%xml else '0' endif 
		'&lt;/EXECUTION-RATE&gt;' newline
	endif
}
endreport</report>
				<report>Report '_parts'
/* Creating the HardwareComponentPrototypes */
'&lt;PARTS&gt;'
foreach .HardwareComponentPrototype
{	
	if not $reported_elements =~ oid%wildsp then
		variable 'reported_elements' append oid ' ' close
		subreport '_HardwareComponentPrototype' run 
	endif
}
'&lt;/PARTS&gt;'
endreport</report>
				<report>Report '_pins'
/* Generating the ports information */
'&lt;PINS&gt;'
foreach .( *In | *Out) { subreport '_port data' run } newline
'&lt;/PINS&gt;' 
endreport</report>
				<report>Report '_port data'
/* Generating the Pin information */
if $EAXMLoids =~oid%wildsp then
	 newline
	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
	'&lt;!--  path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' type%minus%upper ' UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	subreport '_port properties' run 
	'&lt;/' type%minus%upper '&gt;'
endif
endreport</report>
				<report>Report '_port irefs'
/* Generating the Port irefs */
'&lt;PORT-IREF&gt;' newline
/* Generates the Hardware-Component-Prototype reference */
local 'prototypeName' write type%minus%upper close
local 'HWPTName' write :Short name; close
local 'hwcpt_name' write @HWPTName%toShortName close
if type = 'HardwareComponentPrototype' then
	'&lt;!-- ' @prototypeName ' name: ' @hwcpt_name ' --&gt;' newline
	'&lt;HARDWARE-COMPONENT-PROTOTYPE-REF TYPE="HARDWARE-COMPONENT-PROTOTYPE"&gt;' 
	variable oid '_path' read 
	'&lt;/HARDWARE-COMPONENT-PROTOTYPE-REF&gt;' newline
endif

/* Comment line starts */
'&lt;!-- ' 
if ((type =~ 'IOHardwarePin*') or (type =~ 'CommunicationHardwarePin*') or (type =~ 'PowerHardwarePin*')) then
	type ': ' :Short name; 
else
	if type =~ '*Prototype' then
		do decompositions {
			foreach .(*PinIn | *PinOut | *PinInOut) {
				if oid = $pin then
					type ' name: ' :Short name;
				endif
			}
		}
	else
		type ': ' :Short name; 
	endif
endif
' --&gt;' newline
/* Comment line ends */

/* Generates the Hardware-Pin reference */
if ((type =~ 'IOHardwarePin*') or (type =~ 'CommunicationHardwarePin*') or (type =~ 'PowerHardwarePin*')) then
	if type=~'CommunicationHardware*' then
		'&lt;HARDWARE-PIN-REF TYPE="COMMUNICATION-HARDWARE-PIN"&gt;' 
		variable oid '_path' read 
		'&lt;/HARDWARE-PIN-REF&gt;' newline
	endif
	if type=~'IOHardware*' then
		'&lt;HARDWARE-PIN-REF TYPE="IO-HARDWARE-PIN"&gt;' 
		variable oid '_path' read 
		'&lt;/HARDWARE-PIN-REF&gt;' newline
	endif
	if type=~'PowerHardware*' then
		'&lt;HARDWARE-PIN-REF TYPE="POWER-HARDWARE-PIN"&gt;' 
		variable oid '_path' read 
		'&lt;/HARDWARE-PIN-REF&gt;' newline
	endif
else
	if type;1=~'CommunicationHardware*' then
		'&lt;HARDWARE-PIN-REF TYPE="COMMUNICATION-HARDWARE-PIN"&gt;'
	endif
	if type;1=~'IOHardware*' then
		'&lt;HARDWARE-PIN-REF TYPE="IO-HARDWARE-PIN"&gt;'
	endif
	if type;1=~'PowerHardware*' then
		'&lt;HARDWARE-PIN-REF TYPE="POWER-HARDWARE-PIN"&gt;'
	endif
	do decompositions {
		foreach .(*Pin*) {
			if oid = $pin then
				variable oid '_path' read 
			endif
		}
	}
	if type = 'HardwarePortConnector' then '/undefined' endif
	'&lt;/HARDWARE-PIN-REF&gt;' newline
endif
'&lt;/PORT-IREF&gt;' newline
endreport</report>
				<report>Report '_port properties'
/* Generating the port properties */
if :Name; then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
subreport '_description' run
subreport '_direction' run
'&lt;IS-GROUND&gt;' If :IsGround; then 'true' else 'false' endif '&lt;/IS-GROUND&gt;' newline
if type =~ 'IOHardwarePin*' then 
	'&lt;TYPE&gt;' :Type;%upper '&lt;/TYPE&gt;' newline
endif

endreport</report>
				<report>_sensorsAndActuatorsInSeries()
/* Finding the sensors and actuators connected in series */
local 'object_type1' write
	subreport '_type of object' run
close
if (@object_type1 = 'SensorType') or (@object_type1 = 'ActuatorType') then
	do ~(*Pin_To)~(*Pin_From).() 
	{	local 'object_type2' write
			subreport '_type of object' run
		close
		if @object_type1 = @object_type2; then 
			_reportWarnings()
			'Warning: ' @object_type1%legal 's connected in series: ' id ' and ' id;1 ' '
			_extendedCheckOutput_level2()
			newline 
		endif
	}	
endif</report>
				<report>Report '_sym LogicalBus'
/*Generator for checking the LogicalBus usage in HDA */
$found = 'F'
do &gt;HardwareConnector {
	$connectorOID = oid
	foreach .HardwarePortConnector
	{	
		do :Connectors 
		{
			if oid = $connectorOID; then 
				$found = 'T' 
			endif
		}
	}
}
$found
endreport</report>
				<report>_SymAllocatedFunctions()
do graphs; where type = 'SystemModel' {
	foreach .Allocations {
		do explosions {
			foreach .(Hardware*); where oid = oid;4 {
				do &gt;FunctionAllocation.(DesignFunctionPrototype | FunctionConnector*) {
					id newline
				}
			}
		} 
	}
}
</report>
				<report>Report '_sym_isactive'
do decompositions {
	do :Type {
		if :IsActive = 'True'; then
			'Active'
		endif
	}
}
endreport</report>
				<report>_sym_PinInOutRoleLabel()
/* shows pin name for in and out pins in the role */
do #() {
	if type =~ '*PinInOut' then
		id
	endif
}
</report>
				<report>Report '_type of object'
/* Returns the type of the decomposed submodel (HardwareComponentType) */
do decompositions {
	do :Type { type }
}
endreport</report>
				<report>Report '__LiveCheck'
/* LiveCheck reports to be run at the LiveCheck pane */
if :Show report; ='Checking' then
	subreport '_all checks' run
else
	subreport 'Unconnected pins' run
endif

endreport</report>
				<constraints>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_CommunicationHardwarePin_To_user_3461929103"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_CommunicationHardwarePin_From_user_3461928850"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_LogicalBus_user_3460790250"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_IOHardwarePin_To_user_3461931130"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_IOHardwarePin_From_user_3461930920"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_PowerHardwarePin_To_user_3461930006"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_PowerHardwarePin_From_user_3461930168"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
				<icon offset="30,20" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="90" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
						<rect fill="rgb(255,255,255)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="30" y="20"></rect>
					</svg>
				</icon>
			</graph>
		</explosion>
		<explosion>
			<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
			<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
		</explosion>
	</graph>
	<graph id="Graph_ComputationConstraint_user_3506856566" type="Graph_ComputationConstraint_user_3506856566" typeName="BehaviorConstraintComputationConstraint">
		<description>Computation constraints provide the language support for specifying the restrictions on data processing, especially when the details of design are not available (e.g. for the reasons of software component IP-protection). The descriptions can be related both to the expected logical transformations of data and to the expected cause-effect flow of events.</description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="b0s6gl" name="Short name" unique="false">
			<property href="#Property_2ECUName_user_3310972947"></property>
		</slot>
		<slot id="b2jx8p" name="Name" unique="false">
			<property href="#Property_Name_sysadmin_3536998876"></property>
		</slot>
		<slot id="b1gn94" name="Description" unique="false">
			<property href="#Property_2Description_user_3310902697"></property>
		</slot>
		<identReport>_name()</identReport>
		<object id="Object_LogicalTransformation_sysadmin_3508139808" type="Object_LogicalTransformation_sysadmin_3508139808" typeName="LogicalTransformation">
			<description>LogicalTransformation is a set of restrictions on the computation activity for some data. That is, given some in-&amp;local-data that meet certain preconditions, such a computation activity always maps such data to some out-data that meet the related postconditions if the time-&amp;value-invariants are not violated during the computation.</description>
			<superType>
				<object href="#Object_Identifiable_sysadmin_3507928462"></object>
			</superType>
			<slot id="a6gia7" name="preCondition" unique="false">
				<property type="Property_PreCondition_user_3506851081" typeName="preCondition">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Quantification_sysadmin_3508139708"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a3gi4l" name="in" unique="false">
				<property type="Property_in_sysadmin_3509102818" typeName="in">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Attribute_sysadmin_3508150739"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a5gi7r" name="contained" unique="false">
				<property type="Property_contained_sysadmin_3509102875" typeName="contained">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Attribute_sysadmin_3508150739"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a4gi61" name="out" unique="false">
				<property type="Property_out_sysadmin_3509102844" typeName="out">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Attribute_sysadmin_3508150739"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a7gim0" name="postCondition" unique="false">
				<property type="Property_postCondition_sysadmin_3509103132" typeName="postCondition">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Quantification_sysadmin_3508139708"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a2mami" name="timeInvariant" unique="false">
				<property id="Property_timeInvariant_sysadmin_3508397976" type="Property_timeInvariant_sysadmin_3508397976" typeName="timeInvariant">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_LogicalTimeCondition_sysadmin_3508139785"></object>
					</contentsDataType>
				</property>
			</slot>
			<slot id="a8ginx" name="quantificationInvariant" unique="false">
				<property id="Property_quantificationInvariant_sysadmin_3508396709" type="Property_quantificationInvariant_sysadmin_3508396709" typeName="quantificationInvariant">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Quantification_sysadmin_3508139708"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a1m9kf" name="isClientServerInterface" unique="false">
				<property type="Property_isClientServerInterface_user_3506855850" typeName="isClientServerInterface">
					<description></description>
					<dataType>
						<simpleType>Boolean</simpleType>
					</dataType>
					<defaultValue></defaultValue>
				</property>
			</slot>
			<slot id="aatgvq" name="subComputationConstraint" unique="false">
				<property type="Property_subComputationConstraint_sysadmin_3509808379" typeName="subComputationConstraint">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object id="Object_ComputationConstraint_sysadmin_3508101199" type="Object_ComputationConstraint_sysadmin_3508101199" typeName="ComputationConstraint">
							<description>ComputationConstraint provide the language support for specifying the restrictions on data processing, especially when the details of design are not available (e.g. for the reasons of software component IP-protection). The descriptions can be related both to the expected logical transformations of data and to the expected cause-effect flow of events.</description>
							<superType>
								<object href="#Object_Identifiable_sysadmin_3507928462"></object>
							</superType>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="10,10 310,10 310,90 10,90 10,10" targetPointX="160" targetPointY="50" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="90" version="1.2" width="310" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="80" rx="0" ry="0" stroke="rgb(128,128,128)" stroke-width="1" width="300" x="10" y="10">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="300" x="10" y="10">
										ReportTextSource:'&lt;&lt;ComputationConstraint&gt;&gt;' newline
id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="300" x="10" y="10">
										ReportTextSource:newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
newline
do decompositions {
	' logicalTransformation' 
	' :={ '
	foreach .(LogicalTransformation) 
		{	
			 id ' '
	       }
	'}'
	newline
	' logicalPath' 
	' := { ' 
		foreach .(LogicalPath) 
		{	
			id	' ' 
	       }
 	'}'
}
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="12" sym:width="20" sym:x="1.2e1" sym:y="1.3e1">
										<rect fill="rgb(128,128,128)" height="12" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="9.4339" x="17.6604" y="13">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</rect>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="23.3208" x2="21.0566" y1="15.8572" y2="18.7143">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</line>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="21.0566" x2="23.3208" y1="18.7143" y2="22.7143">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</line>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="12" x2="21.0566" y1="18.7143" y2="18.7143">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</line>
										<polyline fill="none" points="13.5094,17 17.283,18.7143 13.5094,20.4286" stroke="rgb(0,0,0)" stroke-width="1">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</polyline>
										<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="3.42857" sym:width="8.67924" sym:x="2.33208e1" sym:y="2.1e1">
											<line stroke="rgb(0,0,0)" stroke-width="1" x1="23.3208" x2="31.3057" y1="22.7143" y2="22.7143">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</line>
											<polyline fill="none" points="28.5283,21 32,22.7143 28.5283,24.4286" stroke="rgb(0,0,0)" stroke-width="1">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</polyline>
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</g>
										<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="3.42857" sym:width="8.67924" sym:x="2.29434e1" sym:y="1.414285e1">
											<line stroke="rgb(0,0,0)" stroke-width="1" x1="22.9434" x2="30.9283" y1="15.8572" y2="15.8572">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</line>
											<polyline fill="none" points="28.1509,14.1428 31.6226,15.8572 28.1509,17.5714" stroke="rgb(0,0,0)" stroke-width="1">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</polyline>
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</g>
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</g>
								</svg>
							</objectSymbol>
							<icon offset="27,15" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="36" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
									<g fill="none" stroke="none" stroke-width="1" sym:height="21" sym:width="53" sym:x="2.7e1" sym:y="1.5e1">
										<rect fill="none" height="21" rx="0" ry="0" stroke="rgb(0,0,128)" stroke-width="1" width="25" x="42" y="15"></rect>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="57" x2="51" y1="20" y2="25"></line>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="51" x2="57" y1="25" y2="32"></line>
										<line stroke="rgb(0,0,0)" stroke-width="1" x1="27" x2="51" y1="25" y2="25"></line>
										<polyline fill="none" points="31,22 41,25 31,28" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
										<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="6" sym:width="23" sym:x="5.7e1" sym:y="2.9e1">
											<line stroke="rgb(0,0,0)" stroke-width="1" x1="57" x2="78.16" y1="32" y2="32"></line>
											<polyline fill="none" points="70.8,29 80,32 70.8,35" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
										</g>
										<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="6" sym:width="23" sym:x="5.6e1" sym:y="1.7e1">
											<line stroke="rgb(0,0,0)" stroke-width="1" x1="56" x2="77.16" y1="20" y2="20"></line>
											<polyline fill="none" points="69.8,17 79,20 69.8,23" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
										</g>
									</g>
								</svg>
							</icon>
						</object>
					</contentsDataType>
				</property>
			</slot>
			<slot id="a0m9js" name="expression" unique="false">
				<property href="#Property_Expression_user_3506854805"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="50,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="330,121 329.543,124.444 328.243,127.364 326.296,129.315 324,130 55.75,130 53.4539,129.315 51.5074,127.364 50.2067,124.444 49.75,121 49.75,38.75 50.2067,35.3058 51.5074,32.386 53.4539,30.4351 55.75,29.75 324,29.75 326.296,30.4351 328.243,32.386 329.543,35.3058 330,38.75 330,121" targetPointX="189.875" targetPointY="79.875" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="133" version="1.2" width="332" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="1.00355" x2="1" y1="0.214286" y2="1">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(213,213,213)"></stop>
						</linearGradient>
					</defs>
					<rect fill="rgb(0,0,0)" height="103" rx="6" ry="9" stroke="rgb(0,0,0)" stroke-width="1" width="282" x="50" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="url(#gradient1)" height="100" rx="6" ry="9" stroke="rgb(0,0,0)" stroke-width="1" width="280" x="50" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="270" x="60" y="30">
						ReportTextSource:'LogicalTransformation' newline
if :Short name; then 
		if :out; then
				'[ '
				:out
				' '
				'] = '
			else
				'void '
		endif 
		:Short name
		'('
		
		if :in; then
				:in
			else
				'void'
		endif 
		')'

	else
		'Note undefined transformation name'	
endif 


						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="arial" font-size="12" font-style="normal" font-weight="bold" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="true" text-anchor="start" width="270" x="50" y="30">
						f(x)
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="270" x="60" y="30">
						ReportTextSource:newline
newline
newline
if :preCondition 
	then 
		'preCondition' ':={ '
				:preCondition
		' '	 	
	'}'
newline
endif 

if :postCondition 
		then
		'postCondition' ':={ '
				:postCondition
		' '	 	
'}'
newline
endif 

if :timeInvariant 
		then 
	'timeInvariant' ':={ '
				:timeInvariant
		' '	 	

	'}'
	newline
endif

if :quantificationInvariant
		then 
		'quantificationInvariant' ':={'

		do :quantificationInvariant
		{	 
			 ' ' id ';'
		}
		
	' }'
	newline
endif 

if :contained; then
		'contained' ' := { '		
			:contained
			' }'
endif 
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="280" x="50" y="30">
						ReportTextSource:newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="40,40" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="70" version="1.2" width="76.3333" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="30" rx="4" ry="0" stroke="none" stroke-width="1" width="35" x="40" y="40"></rect>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="arial" font-size="22" font-style="normal" font-weight="bold" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="33.3333" x="43" y="40">f(x)</textArea>
				</svg>
			</icon>
		</object>
		<object href="#Object_LogicalTimeCondition_sysadmin_3508139785"></object>
		<object id="Object_LogicalPath_sysadmin_3509106642" type="Object_LogicalPath_sysadmin_3509106642" typeName="LogicalPath">
			<description>LogicalPath is a set of restrictions on the cause-effect flows of some observable logical and executional events. It provides the modeling support for annotating the expected cause-effect traces across a system or a component.</description>
			<superType>
				<object href="#Object_Identifiable_sysadmin_3507928462"></object>
			</superType>
			<slot id="a2gtqb" name="precedingExecutionEventChain" unique="false">
				<property type="Property_precedingExecutionEventChain_sysadmin_3509110336" typeName="precedingExecutionEventChain">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object id="Object_EventChain_sysadmin_3509108715" type="Object_EventChain_sysadmin_3509108715" typeName="EventChain">
							<description>An EventChain is a container for a pair of events that must be causally related.</description>
							<superType>
								<object href="#Object_TimingDescription_sysadmin_3508668831"></object>
							</superType>
							<slot id="a3yu42" name="Segment" unique="false">
								<property type="Property_eventChain_sysadmin_3509530475" typeName="eventChain">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object href="#Object_EventChain_sysadmin_3509108715"></object>
									</contentsDataType>
								</property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="50,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="50,10 230,10 230,120 50,120 50,10" targetPointX="140" targetPointY="65" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="120" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="rgb(249,249,249)" sym:textboxStroke="rgb(213,213,213)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="50" y="20">
										ReportTextSource:'-&gt; ' do ~Stimulus~Stimulus.() {id }; newline
'&lt;- ' do ~Response~Response.() {id }; newline
if :Segment; then 
	'[ '
	dowhile :Segment {id '-'}
	' ]'
endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="50" y="20">
										ReportTextSource:'&lt;EventChain&gt;' newline
id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="50,20" startDistance="0">
											<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 30,0" startDistance="15"></layoutPath>
										</pathLayout>
										<noneNPSource></noneNPSource>
										<librarySubsymbolSource>EventChain_symbol</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
									<polyline fill="none" points="60,20 50,20 50,120 60,120" stroke="rgb(128,128,128)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polyline>
									<polyline fill="none" points="220,20 230,20 230,120 220,120" stroke="rgb(128,128,128)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polyline>
								</svg>
							</objectSymbol>
							<icon offset="40,30" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="50" version="1.2" width="70" xmlns="http://www.w3.org/2000/svg">
									<g fill="none" stroke="rgb(0,0,0)" sym:height="20" sym:width="30" sym:x="4.0e1" sym:y="3.0e1">
										<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="20" sym:width="12" sym:x="4.0e1" sym:y="3.0e1">
											<polyline fill="none" points="40,30 40,50 52,50 52,34.25 49.1765,30.25 49.1765,31.5 49.1765,34.25 52,34.25" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
											<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="49.1765" y1="30" y2="30"></line>
										</g>
										<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="20" sym:width="12" sym:x="5.8e1" sym:y="3.0e1">
											<polyline fill="none" points="58,30 58,50 70,50 70,34.25 67.1765,30.25 67.1765,31.5 67.1765,34.25 70,34.25" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
											<line stroke="rgb(0,0,0)" stroke-width="1" x1="58" x2="67.1765" y1="30" y2="30"></line>
										</g>
										<ellipse cx="55" cy="40" fill="rgb(255,255,255)" rx="9" ry="3.33333" stroke="rgb(0,0,0)" stroke-width="3" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
									</g>
								</svg>
							</icon>
						</object>
					</contentsDataType>
				</property>
			</slot>
			<slot id="a3gtrr" name="correspondingExecutionEventChain" unique="false">
				<property type="Property_correspondingExecutionEventChain_sysadmin_3509110363" typeName="correspondingExecutionEventChain">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
					</contentsDataType>
				</property>
			</slot>
			<slot id="a4gtt2" name="succeedingExecutionEventChain" unique="false">
				<property type="Property_succeedingExecutionEventChain_sysadmin_3509110386" typeName="succeedingExecutionEventChain">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
					</contentsDataType>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="255,20 275,62.8829 255,110 21,110 43,62.8829 20,20.0643 255,20" targetPointX="147.5" targetPointY="65" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="110" version="1.2" width="275" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(240,240,240)" points="255,20 275,62.8829 255,110 21,110 43,62.8829 20,20.0643" stroke="rgb(240,240,240)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="220" x="40" y="20">
						ReportTextSource:newline; newline
if :precedingExecutionEnentChain; then
	'precedingExecutionEventChain' ' := {'  
   :precedingExecutionEventChain 
	' }'
	newline
endif

 'TransformationOccurrence' ' := {' 
do ~from_LogicalPath&gt;()~to_transformationOccurrence.TransformationOccurrence
   { 
      id;
		' '
   }
'}'
newline

if :ExecutionEnentChain; then
	'correspondingExecutionEventChain' ':= {'
   :correspondingExecutionEventChain
	' }'
	newline
endif

if :ExecutionEnentChain; then
	'succeedingExecutionEventChain' ':= {'
   :succeedingExecutionEventChain
	' }'
	newline
endif

do decompositions {
	' Segment' 
	' := { '
	foreach &gt;(Segment) {
				newline
				'      '			
					do ~from_segment.()
						{	
	 						 id;
							'-&gt;'
						}	
					do ~to_segment.()
						{	
							'&gt;-'
	 						 id;
						}

			'; '
      }

	'}'
		newline
	
	' Strand' 
	' := { '
	foreach &gt;(Strand) {
				newline
				'      '			
					do ~from_strand.()
						{	
	 						id;
							'-/'
						}	
					do ~to_strand.()
						{	
							'/-'
	 						id;
						}

			'; '
      }

	'}'
	
}




						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="230" x="30" y="20">
						ReportTextSource:'LogicalPath' newline
id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="29.7458,38" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="75" version="1.2" width="86.4577" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="37" rx="4" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="19.9322" x="66.5255" y="38"></rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="arial" font-size="8" font-style="normal" font-weight="bold" height="21.5556" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="15.5028" x="68.7402" y="38">f(x2)</textArea>
					<rect fill="rgb(255,255,255)" height="37" rx="4" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="19.9322" x="29.7458" y="38"></rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="arial" font-size="8" font-style="normal" font-weight="bold" height="23.1111" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="22.7796" x="32.5933" y="38">f(x1)</textArea>
					<polygon fill="rgb(0,0,0)" points="63,45 79.2882,55.2469 63,63.4445" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
					<rect fill="rgb(0,0,0)" height="9" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="24" x="47" y="50"></rect>
				</svg>
			</icon>
		</object>
		<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
		<object id="Object_TransformationOccurrance_sysadmin_3508139833" type="Object_TransformationOccurrance_sysadmin_3508139833" typeName="TransformationOccurrence">
			<description>TransformationOccurrence denotes the activations of logical transformations due to state transitions or logical paths. A transformation occurrence can also have a time condition (timeCondition), stating the time instances when the invocation happens. If a logical transformation is invoked, its in-data will be assigned with particular values by the invocation context (inQuantification). </description>
			<superType>
				<object href="#Object_Identifiable_sysadmin_3507928462"></object>
			</superType>
			<slot id="a3m9f9" name="timeCondition" unique="false">
				<property type="Property_timeCondition_sysadmin_3508397337" typeName="timeCondition">
					<description></description>
					<dataType>
						<object href="#Object_LogicalTimeCondition_sysadmin_3508139785"></object>
					</dataType>
				</property>
			</slot>
			<slot id="a4i56b" name="inQuantification" unique="false">
				<property type="Property_inQuantification_sysadmin_3509141081" typeName="inQuantification">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Quantification_sysadmin_3508139708"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a0m915" name="outQuantification" unique="false">
				<property type="Property_outQuantification_sysadmin_3508397083" typeName="outQuantification">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Quantification_sysadmin_3508139708"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<slot id="a5ejr7" name="expression" unique="false">
				<property href="#Property_Expression_user_3506854805"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="21,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="36,21 21,36.8 21,84.2 36,100 231,100 246,84.2 246,36.8 231,21 36,21" targetPointX="133.5" targetPointY="60.5" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="103" version="1.2" width="249" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(64,64,64)" points="39,24 24,39.8 24,87.2 39,103 234,103 249,87.2 249,39.8 234,24" stroke="rgb(64,64,64)" stroke-width="2">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<polygon fill="rgb(255,255,224)" points="36,21 21,36.8 21,84.2 36,100 231,100 246,84.2 246,36.8 231,21" stroke="rgb(96,96,96)" stroke-width="2">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
						ReportTextSource:'TransformationOccurrance' newline
id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="200" x="40" y="20">
						ReportTextSource:newline newline
if :outQuantification
		then
		'outQuantification' ':={ '
		:outQuantification
		' }'
endif 

if :inQuantification
			then
			newline
			'inQuantification' ':={ '
				:inQuantification 
				
			' }'
endif 

newline
'invokedTransformation' ':={ '
do ~from_transformationOccurrence&gt;()~to_LogicalTransformation.LogicalTransformation
   { 	
     :Short name;
		'()'
   }

' }'

if :timeCondition; then
	newline
	'timeCondition' ':={ ' 
	:timeCondition
	' }'	 	
endif 



						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<g fill="none" stroke="none" stroke-width="1" sym:height="10.1579" sym:width="17.4375" sym:x="3.7e1" sym:y="2.3e1">
						<polygon fill="rgb(255,255,255)" points="38.5109,23 37.3733,25.0072 37.3733,31.0288 38.5109,33.036 53.2999,33.036 54.4375,31.0288 54.4375,25.0072 53.2999,23" stroke="rgb(96,96,96)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<textArea display-align="center" fill="rgb(0,0,0)" font-family="arial" font-size="11" font-style="normal" font-weight="bold" height="10.1579" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="17.4109" x="37" y="23">
							f(x)
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</textArea>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
				</svg>
			</objectSymbol>
			<icon offset="44.5625,23" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="41.1579" version="1.2" width="71" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,224)" points="46.7333,23 45,26.6 45,37.4 46.7333,41 69.2667,41 71,37.4 71,26.6 69.2667,23" stroke="rgb(96,96,96)" stroke-width="0"></polygon>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="arial" font-size="16" font-style="normal" font-weight="bold" height="18.1579" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="26.4063" x="44.5625" y="23">f(x)</textArea>
				</svg>
			</icon>
		</object>
		<relationship id="Relationship_link_transformationOccurrence_sysadmin_3524523524" type="Relationship_link_transformationOccurrence_sysadmin_3524523524" typeName="LogicalPathToTransformationOccurrenceLink">
			<description></description>
			<slot id="a3jxh5" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="a29zhh" name="Short name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="a4jxae" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="a11isy" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<relationshipSymbol offset="47,54" scaleFilter="0,0" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="47,54 71,54 71,66 47,66 47,54" targetPointX="59" targetPointY="60" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="66" version="1.2" width="71" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="8" sym:width="9.14285" sym:x="5.3e1" sym:y="5.7e1">
						<path d="M54.5238,57 L58.5333,57.26 L59.4762,58.2 L58.6396,58.7697 L57.372,59.4425 L55.9238,60.17 L54.5454,60.9042 L53.4874,61.5969 L53,62.2 L54.2228,63.0395 L57.6354,63.5116 L62.1429,63.8" fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:controlPoints="54.5238,57 59.4762,58.2 53,62.2 62.1429,63.8">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</path>
						<line stroke="rgb(0,0,0)" stroke-width="1" x1="59.4762" x2="62.1429" y1="62.2" y2="63.8">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</line>
						<line stroke="rgb(0,0,0)" stroke-width="1" x1="62.1429" x2="59.4762" y1="63.8" y2="65">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</line>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
					<rect fill="rgb(255,255,255)" height="5" rx="4" ry="1" stroke="rgb(0,0,0)" stroke-width="0" width="9" x="47" y="54">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(255,255,255)" height="5" rx="4" ry="1" stroke="rgb(0,0,0)" stroke-width="0" width="9" x="62" y="61">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
				</svg>
			</relationshipSymbol>
			<icon offset="66,82" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="94" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="8" sym:width="9.14285" sym:x="7.2e1" sym:y="8.5e1">
						<path d="M73.5238,85 L77.5333,85.26 L78.4762,86.2 L77.6396,86.7698 L76.372,87.4425 L74.9238,88.17 L73.5454,88.9042 L72.4874,89.5969 L72,90.2 L73.2228,91.0395 L76.6354,91.5116 L81.1429,91.8" fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:controlPoints="73.5238,85 78.4762,86.2 72,90.2 81.1429,91.8"></path>
						<line stroke="rgb(0,0,0)" stroke-width="1" x1="78.4762" x2="81.1429" y1="90.2" y2="91.8"></line>
						<line stroke="rgb(0,0,0)" stroke-width="1" x1="81.1429" x2="78.4762" y1="91.8" y2="93"></line>
					</g>
					<rect fill="rgb(255,255,255)" height="5" rx="4" ry="1" stroke="rgb(0,0,0)" stroke-width="0" width="9" x="66" y="82"></rect>
					<rect fill="rgb(255,255,255)" height="5" rx="4" ry="1" stroke="rgb(0,0,0)" stroke-width="0" width="9" x="81" y="89"></rect>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_segment_logicalPath_sysadmin_3524654557" type="Relationship_segment_logicalPath_sysadmin_3524654557" typeName="Segment">
			<description></description>
			<relationshipSymbol offset="90,50" scaleFilter="0,0" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="90,50 120,50 120,70 90,70 90,50" targetPointX="105" targetPointY="60" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="70" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
					<g fill="rgb(0,0,0)" stroke="rgb(0,0,0)" stroke-width="1" sym:height="20" sym:width="30" sym:x="9.0e1" sym:y="5.0e1">
						<polygon fill="rgb(0,0,0)" points="90,50 105,60 90,70" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="105,50 120,60 105,70" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
				</svg>
			</relationshipSymbol>
			<icon offset="34,44" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="74" version="1.2" width="91" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(96,96,96)"></stop>
						</radialGradient>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient2" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(96,96,96)"></stop>
						</radialGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="30" rx="0" ry="0" stroke="none" stroke-width="1" width="57" x="34" y="44"></rect>
					<rect fill="url(#gradient1)" height="8" rx="0" ry="0" stroke="none" stroke-width="1" width="11" x="39" y="56"></rect>
					<polygon fill="rgb(96,96,96)" points="50,50 64,60 50,70" stroke="none" stroke-width="1"></polygon>
					<rect fill="url(#gradient2)" height="8" rx="0" ry="0" stroke="none" stroke-width="1" width="11" x="63" y="56"></rect>
					<polygon fill="rgb(96,96,96)" points="74,50 88,60 74,70" stroke="none" stroke-width="1"></polygon>
					<rect fill="rgb(0,0,0)" height="28" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="87" y="46"></rect>
					<rect fill="rgb(0,0,0)" height="28" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="35" y="46"></rect>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_strand_sysadmin_3524656062" type="Relationship_strand_sysadmin_3524656062" typeName="Strand">
			<description></description>
			<relationshipSymbol offset="72,46" scaleFilter="0,0" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="72,46 89,46 89,61 72,61 72,46" targetPointX="80.5" targetPointY="53.5" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="61" version="1.2" width="89" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="rgb(0,0,0)" stroke-width="3" sym:height="15" sym:width="17" sym:x="7.2e1" sym:y="4.6e1">
						<line stroke="rgb(0,0,0)" stroke-width="3" x1="82.5517" x2="72" y1="46" y2="60.3182">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</line>
						<line stroke="rgb(0,0,0)" stroke-width="3" x1="89" x2="78.4483" y1="46.6818" y2="61">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</line>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
				</svg>
			</relationshipSymbol>
			<icon offset="47,27" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="51" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(96,96,96)"></stop>
						</radialGradient>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient2" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(96,96,96)"></stop>
						</radialGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="24" rx="0" ry="0" stroke="none" stroke-width="1" width="33" x="47" y="27"></rect>
					<rect fill="url(#gradient1)" height="6" rx="0" ry="0" stroke="none" stroke-width="1" width="11" x="52" y="30"></rect>
					<polygon fill="rgb(96,96,96)" points="63,28 77,33 63,38" stroke="none" stroke-width="1"></polygon>
					<rect fill="url(#gradient2)" height="6" rx="0" ry="0" stroke="none" stroke-width="1" width="11" x="52" y="40"></rect>
					<polygon fill="rgb(96,96,96)" points="63,38 77,43 63,48" stroke="none" stroke-width="1"></polygon>
					<rect fill="rgb(0,0,0)" height="22" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="76" y="28"></rect>
					<rect fill="rgb(0,0,0)" height="22" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="3" x="48" y="28"></rect>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_LogicalResponse_sysadmin_3524729752" type="Relationship_LogicalResponse_sysadmin_3524729752" typeName="LogicalResponse">
			<description></description>
		</relationship>
		<relationship id="Relationship_LogicalStimuli_sysadmin_3524729776" type="Relationship_LogicalStimuli_sysadmin_3524729776" typeName="LogicalStimulus">
			<description></description>
		</relationship>
		<relationship id="Relationship_TranformationOccurrenceToTransformationLink_sysadmin_3524738242" type="Relationship_TranformationOccurrenceToTransformationLink_sysadmin_3524738242" typeName="TranformationOccurrenceToTransformationLink">
			<description></description>
			<relationshipSymbol offset="74,62" scaleFilter="0,0" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="74,62 104.683,62 104.683,75 74,75 74,62" targetPointX="89.3417" targetPointY="68.5" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="75" version="1.2" width="104.683" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="none" stroke-width="1" sym:height="13" sym:width="30.6834" sym:x="7.4e1" sym:y="6.2e1">
						<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="8" sym:width="13" sym:x="7.4e1" sym:y="6.2e1">
							<path d="M76.1667,62 L79.2897,62.0875 L81.8677,62.26 L83.3556,62.6025 L83.2083,63.2 L82.3876,63.6158 L81.172,64.0962 L79.7118,64.6211 L78.1573,65.17 L76.6586,65.7227 L75.366,66.2588 L74.4297,66.758 L74,67.2 L74,67.2 L74.9513,67.8713 L77.8729,68.31 L82.1081,68.5937 L87,68.8 L87,68.8" fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:controlPoints="76.1667,62 83.2083,63.2 74,67.2 87,68.8">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</path>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="83.2083" x2="87" y1="67.2" y2="68.8">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="87" x2="83.2083" y1="68.8" y2="70">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</line>
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</g>
						<g fill="none" stroke="none" stroke-width="1" sym:height="13" sym:width="17.2667" sym:x="8.74167e1" sym:y="6.2e1">
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="arial" font-size="11" font-style="normal" font-weight="bold" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="17.2667" x="87.4167" y="62">
								f(x)
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</g>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
				</svg>
			</relationshipSymbol>
			<icon offset="92,73" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="90" version="1.2" width="125" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="17" rx="0" ry="0" stroke="none" stroke-width="1" width="33" x="92" y="73"></rect>
					<g fill="none" stroke="none" stroke-width="1" sym:height="13" sym:width="30.6834" sym:x="9.3e1" sym:y="7.5e1">
						<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="8" sym:width="13" sym:x="9.3e1" sym:y="7.5e1">
							<path d="M95.1667,75 L98.2897,75.0875 L100.868,75.26 L102.356,75.6025 L102.208,76.2 L101.388,76.6158 L100.172,77.0963 L98.7118,77.6211 L97.1573,78.17 L95.6586,78.7227 L94.366,79.2588 L93.4297,79.758 L93,80.2 L93,80.2 L93.9513,80.8713 L96.8729,81.31 L101.108,81.5937 L106,81.8" fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:controlPoints="95.1667,75 102.208,76.2 93,80.2 106,81.8"></path>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="102.208" x2="106" y1="80.2" y2="81.8"></line>
							<line stroke="rgb(0,0,0)" stroke-width="1" x1="106" x2="102.208" y1="81.8" y2="83"></line>
						</g>
						<g fill="none" stroke="none" stroke-width="1" sym:height="13" sym:width="17.2667" sym:x="1.064167e2" sym:y="7.5e1">
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="arial" font-size="11" font-style="normal" font-weight="bold" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="17.2666" x="106.417" y="75">f(x)</textArea>
						</g>
					</g>
				</svg>
			</icon>
		</relationship>
		<role id="Role_inLogicalPath_sysadmin_3524523799" type="Role_inLogicalPath_sysadmin_3524523799" typeName="from_LogicalPath">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_invokedLogicalTransformation_sysadmin_3524523826" type="Role_invokedLogicalTransformation_sysadmin_3524523826" typeName="to_transformationOccurrence">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,128,0)" stroke-width="0">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_from_segment_sysadmin_3524655122" type="Role_from_segment_sysadmin_3524655122" typeName="from_segment">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="1,1" stroke-width="2">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_to_segment_sysadmin_3524655141" type="Role_to_segment_sysadmin_3524655141" typeName="to_segment">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="1,1" stroke-width="2">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_to_strand_sysadmin_3524656242" type="Role_to_strand_sysadmin_3524656242" typeName="to_strand">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="1,1" stroke-width="2">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_from_strand_sysadmin_3524656225" type="Role_from_strand_sysadmin_3524656225" typeName="from_strand">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="1,1" stroke-width="2">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_LogicalResponse_from_sysadmin_3524729873" type="Role_LogicalResponse_from_sysadmin_3524729873" typeName="LogicalResponse_from">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_LogicalResponse_to_sysadmin_3524729882" type="Role_LogicalResponse_to_sysadmin_3524729882" typeName="LogicalResponse_to">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="90" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="130,70 150,80 130,90" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_LogicalStimulus_from_sysadmin_3524729841" type="Role_LogicalStimulus_from_sysadmin_3524729841" typeName="LogicalStimulus_from">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_LogicalStimulus_to_sysadmin_3524729853" type="Role_LogicalStimulus_to_sysadmin_3524729853" typeName="LogicalStimulus_to">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="90" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="130,70 150,80 130,90" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_from_transformationOccurrence_sysadmin_3524738366" type="Role_from_transformationOccurrence_sysadmin_3524738366" typeName="from_transformationOccurrence">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_to_transformation_sysadmin_3524738385" type="Role_to_transformation_sysadmin_3524738385" typeName="to_LogicalTransformation">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="90" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="130,70 150,80 130,90" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<binding>
			<relationship href="#Relationship_link_transformationOccurrence_sysadmin_3524523524"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_inLogicalPath_sysadmin_3524523799"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_invokedLogicalTransformation_sysadmin_3524523826"></role>
				<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_LogicalResponse_sysadmin_3524729752"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_LogicalResponse_from_sysadmin_3524729873"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_LogicalResponse_to_sysadmin_3524729882"></role>
				<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_LogicalStimuli_sysadmin_3524729776"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_LogicalStimulus_from_sysadmin_3524729841"></role>
				<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_LogicalStimulus_to_sysadmin_3524729853"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_segment_logicalPath_sysadmin_3524654557"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_from_segment_sysadmin_3524655122"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_to_segment_sysadmin_3524655141"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_strand_sysadmin_3524656062"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_from_strand_sysadmin_3524656225"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_to_strand_sysadmin_3524656242"></role>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_TranformationOccurrenceToTransformationLink_sysadmin_3524738242"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_from_transformationOccurrence_sysadmin_3524738366"></role>
				<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_to_transformation_sysadmin_3524738385"></role>
				<object href="#Object_LogicalTransformation_sysadmin_3508139808"></object>
			</connection>
		</binding>
		<explosion>
			<object href="#Object_LogicalTimeCondition_sysadmin_3508139785"></object>
			<graph id="Graph_Timing_user_3506250345" type="Graph_Timing_user_3506250345" typeName="TimingModel">
				<description>EAST-ADL version M2.1.12
The collection of timing descriptions, namely events and event chains, and the timing constraints imposed on these events and event chains. This collection can be done across the EAST-ADL abstraction levels.</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="a0s455" name="Short name" unique="false">
					<property href="#Property_2ECUName_user_3310972947"></property>
				</slot>
				<slot id="a3c70z" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="a1uocq" name="Description" unique="false">
					<property href="#Property_2Description_user_3310902697"></property>
				</slot>
				<identReport>_name()</identReport>
				<object href="#Object_EventChain_sysadmin_3509108715"></object>
				<object href="#Object_EventFunction_sysadmin_3508673141"></object>
				<object href="#Object_EventFunctionClientServerPort_sysadmin_3508669694"></object>
				<object href="#Object_EventFunctionFlowPort_sysadmin_3508669298"></object>
				<object href="#Object_ModeEvent_sysadmin_3615062968"></object>
				<object href="#Object_EventFeatureFlaw_sysadmin_3615063161"></object>
				<object href="#Object_EventFaultFailure_sysadmin_3615063368"></object>
				<object href="#Object_ExternalEvent_sysadmin_3615063424"></object>
				<object type="Object_PrecedenceConstraint_user_3605873576" typeName="PrecedenceConstraint">
					<description>PrecedenceConstraint defines an association relationship between Functions, indicating the association relationship such that all predecessors have completed before the successors are started.</description>
					<superType>
						<object id="Object_TimingConstraint_sysadmin_3509530000" type="Object_TimingConstraint_sysadmin_3509530000" typeName="_TimingConstraint">
							<description>This abstract element references a mode in order to indicate that the corresponding TimingConstraint is only valid when the specified mode is active. A timing constraint does not describe what is classically referred to as a "design" constraint but has the role of a property, requirement, or a validation result.</description>
							<superType>
								<object href="#Object_Identifiable_sysadmin_3507928462"></object>
							</superType>
							<slot id="aalm31" name="Mode" unique="false">
								<property id="Property_modeDeclaration_sysadmin_3548182021" type="Property_modeDeclaration_sysadmin_3548182021" typeName="modeDeclaration">
									<description></description>
									<dataType>
										<object href="#Object_Mode_sysadmin_3509262593"></object>
									</dataType>
								</property>
							</slot>
							<slot id="azuvb" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identProp slotID="ap2mpd"></identProp>
						</object>
					</superType>
					<slot id="a8oroy" name="Preceding" unique="false">
						<property type="Property_Preceding_user_3605873561" typeName="Preceding">
							<description>Preceding is a mandatory field.</description>
							<dataType>
								<object href="#Object_FunctionPrototype_sysadmin_3548175745"></object>
							</dataType>
							<dataTypeSubtype>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							</dataTypeSubtype>
							<regex>.+</regex>
						</property>
					</slot>
					<slot id="a9oryc" name="Successive" unique="false">
						<property type="Property_Successive_user_3605873729" typeName="Successive">
							<description>Successive collction should have one or more values.</description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<regex>.+</regex>
							<contentsDataType>
								<object href="#Object_FunctionPrototype_sysadmin_3548175745"></object>
							</contentsDataType>
							<contentsDataTypeSubtype>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							</contentsDataTypeSubtype>
						</property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="20,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,30 240,30 240,110 30,110 30,30" targetPointX="135" targetPointY="70" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="30">
								ReportTextSource:'&lt;&lt;PrecedenceConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="30,30 25,37.9997 25,62.0001 20,70 25,77.9998 25,102.0 30,110 30,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="30">
								ReportTextSource:if :Mode; then 'Mode: ' :Mode; newline endif
do :Preceding { id }
' =&gt; '
dowhile :Successive { id ', ' }
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="240,30 245,37.9997 245,62.0001 250,70 245,77.9998 245,102.0 240,110 240,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="79,31" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="91" version="1.2" width="159" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="89,31 84,37 84,55 79,61 84,67 84,85 89,91 89,91" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="149,31 154,37 154,55 159,61 154,67 154,85 149,91 149,91" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="50" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="70" x="80" y="31">PS</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_ReactionConstraint_sysadmin_3509532069" typeName="ReactionConstraint">
					<description>A ReactionConstraint defines how long after the occurrence of a stimulus a corresponding response must occur.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="a0lqgc" name="Scope" unique="false">
						<property id="Property_scope_sysadmin_3509532026" type="Property_scope_sysadmin_3509532026" typeName="Scope">
							<description></description>
							<dataType>
								<object href="#Object_EventChain_sysadmin_3509108715"></object>
							</dataType>
						</property>
					</slot>
					<slot id="a1lqgr" name="Minimum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a2lqh3" name="Maximum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,16" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="20,16 230,16 230,96 20,96 20,16" targetPointX="125" targetPointY="56" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="96" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="20" y="16">
								ReportTextSource:'&lt;&lt;ReactionConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="20,16 15,23.9997 15,48.0002 10,56 15,63.9998 15,88.0002 20,96 20,96" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="20" y="16">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Scope; then newline 'Scope: ' :Scope; endif
if :Minimum; then newline 'Min: ' :Minimum; endif
if :Maximum; then newline 'Max: ' :Maximum; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="230,16 235,23.9997 235,48.0002 240,56 235,63.9998 235,88.0002 230,96 230,96" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="52,40" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="100" version="1.2" width="132" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="62,40 57,46 57,64 52,70 57,76 57,94 62,100 62,100" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="122,40 127,46 127,64 132,70 127,76 127,94 122,100 122,100" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="62" y="40">R</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_AgeTimingConstraint_sysadmin_3509532093" typeName="AgeConstraint">
					<description>An AgeConstraint defines how long before each response a corresponding stimulus must have occurred.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="a2lqab" name="Scope" unique="false">
						<property href="#Property_scope_sysadmin_3509532026"></property>
					</slot>
					<slot id="a3lq4e" name="Minimum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a1lpzg" name="Maximum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="20,10 230,10 230,90 20,90 20,10" targetPointX="125" targetPointY="50" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="90" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="20" y="10">
								ReportTextSource:'&lt;&lt;AgeConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="20,10 15,17.9997 15,42.0001 10,50 15,57.9998 15,82.0002 20,90 20,90" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="20" y="10">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Scope; then newline 'Scope: ' :Scope; endif
if :Minimum; then newline 'Min: ' :Minimum; endif 
if :Maximum; then newline 'Max: ' :Maximum; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="230,10 235,17.9997 235,42.0001 240,50 235,57.9998 235,82.0002 230,90 230,90" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="50,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="60,20 55,26 55,44 50,50 55,56 55,74 60,80 60,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="120,20 125,26 125,44 130,50 125,56 125,74 120,80 120,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="60" y="20">A</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_InputSynchronizationConstraint_sysadmin_3509532141" typeName="InputSynchronizationConstraint">
					<description>An InputSynchronizationConstraint defines how far apart the responses that belong to a certain stimulus may occur.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="a3lrn4" name="Scope" unique="false">
						<property id="Property_Scopes_sysadmin_3615041432" type="Property_Scopes_sysadmin_3615041432" typeName="Scopes">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object href="#Object_EventChain_sysadmin_3509108715"></object>
							</contentsDataType>
						</property>
					</slot>
					<slot id="a2lqjy" name="Tolerance" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="20,10 230,10 230,90 20,90 20,10" targetPointX="125" targetPointY="50" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="90" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="20" y="10">
								ReportTextSource:'&lt;&lt;InputSynchronizationConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="20,10 15,17.9997 15,42.0001 10,50 15,57.9998 15,82.0002 20,90 20,90" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="20" y="10">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Scope; then newline 'Scope: ' dowhile :Scope; { id ', ' } endif
if :Tolerance; then newline 'Tolerance: ' :Tolerance; endif 
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="230,10 235,17.9997 235,42.0001 240,50 235,57.9998 235,82.0002 230,90 230,90" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="79,49" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="109" version="1.2" width="159" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="89,49 84,55 84,73 79,79 84,85 84,103 89,109 89,109" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="149,49 154,55 154,73 159,79 154,85 154,103 149,109 149,109" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="89" y="49">I</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_OutputSynchronizationConstraint_sysadmin_3509532216" typeName="OutputSynchronizationConstraint">
					<description>An OutputSynchronizationConstraint defines how far apart the responses that belong to a certain stimulus may occur.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="a3lrok" name="Scope" unique="false">
						<property href="#Property_Scopes_sysadmin_3615041432"></property>
					</slot>
					<slot id="a2lqm8" name="Tolerance" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="1,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="10,10 220,10 220,90 10,90 10,10" targetPointX="115" targetPointY="50" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="90" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="5" y="10">
								ReportTextSource:'&lt;&lt;OutputSynchronizationConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="11,10 6,17.9997 6,42.0001 1,50 6,57.9998 6,82.0002 11,90 11,90" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="10" y="10">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Scope; then newline 'Scope: ' dowhile :Scope; { id ', ' } endif
if :Tolerance; then newline 'Tolerance: ' :Tolerance; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="220,10 225,17.9997 225,42.0001 230,50 225,57.9998 225,82.0002 220,90 220,90" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="77,53" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="113" version="1.2" width="157" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="87,53 82,59 82,77 77,83 82,89 82,107 87,113 87,113" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="147,53 152,59 152,77 157,83 152,89 152,107 147,113 147,113" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="87" y="53">O</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_RepetitionConstraint_sysadmin_3615042331" typeName="RepetitionConstraint">
					<description>A RepetitionConstraint describes the distribution of the occurrences of a single event, including the allowance for jitter.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="allsxl" name="Span" unique="false">
						<property type="Property_Span_sysadmin_3615042268" typeName="Span">
							<description></description>
							<dataType>
								<simpleType>Number</simpleType>
							</dataType>
							<defaultValue>
								<int>1</int>
							</defaultValue>
						</property>
					</slot>
					<slot id="amlsxy" name="Event" unique="false">
						<property id="Property_Event_sysadmin_3509531009" type="Property_Event_sysadmin_3509531009" typeName="Event">
							<description></description>
							<dataType>
								<object href="#Object_Event_sysadmin_3508668873"></object>
							</dataType>
							<dataTypeSubtype>
								<object href="#Object_EventFaultFailure_sysadmin_3615063368"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_EventFeatureFlaw_sysadmin_3615063161"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_EventFunction_sysadmin_3508673141"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_EventFunctionClientServerPort_sysadmin_3508669694"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_EventFunctionFlowPort_sysadmin_3508669298"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_ExternalEvent_sysadmin_3615063424"></object>
							</dataTypeSubtype>
							<dataTypeSubtype>
								<object href="#Object_ModeEvent_sysadmin_3615062968"></object>
							</dataTypeSubtype>
						</property>
					</slot>
					<slot id="anlsyy" name="Lower" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="aolsz4" name="Upper" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="aplszb" name="Jitter" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identProp slotID="ap2mpd"></identProp>
					<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="20,110 230,110 230,10 20,10 20,110" targetPointX="125" targetPointY="60" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="20" y="10">
								ReportTextSource:'&lt;&lt;RepetitionConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="20,10 15,19.9997 15,50.0002 10,60 15,69.9997 15,100.0 20,110 20,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="20" y="10">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Span; then newline 'Span: ' :Span; endif
if :Event; then newline 'Event: ' :Event; endif
if :Lower; then newline 'Lower: ' :Lower; endif
if :Upper; then newline 'Upper: ' :Upper; endif
if :Jitter; then newline 'Jitter: ' :Jitter; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="230,10 235,19.9997 235,50.0002 240,60 235,69.9997 235,100.0 230,110 230,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="2" sym:height="12" sym:width="10" sym:x="2.2e1" sym:y="1.2e1">
								<ellipse cx="27" cy="19" fill="none" rx="5" ry="5" stroke="rgb(0,0,0)" stroke-width="2" sym:startAngle="1.917902e1" sym:sweepAngle="2.413586e2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</ellipse>
								<polygon fill="rgb(0,0,0)" points="31,14 27,12 27,16" stroke="rgb(0,0,0)" stroke-width="2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</polygon>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
					<icon offset="30,10" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="70" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="40,10 35,16 35,34 30,40 35,46 35,64 40,70 40,70" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="100,10 105,16 105,34 110,40 105,46 105,64 100,70 100,70" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="4" sym:height="45" sym:width="40" sym:x="5.2e1" sym:y="1.7e1">
								<ellipse cx="72" cy="42" fill="none" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="4" sym:startAngle="1.917901e1" sym:sweepAngle="2.413586e2"></ellipse>
								<polygon fill="rgb(0,0,0)" points="78,22 68,17 68,27" stroke="rgb(0,0,0)" stroke-width="4"></polygon>
							</g>
						</svg>
					</icon>
				</object>
				<object type="Object_DelayConstraint_sysadmin_3509531973" typeName="DelayConstraint">
					<description>A DelayConstraint imposes limits between the occurrences of an event called source and an event called target. A StrongDelayConstraint imposes limits between each indexed occurrence of an event called source and the identically indexed occurrence of an event called target.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="a5ltcq" name="StrongDelay" unique="false">
						<property id="Property_StrongDelay_sysadmin_3615042541" type="Property_StrongDelay_sysadmin_3615042541" typeName="Strong">
							<description></description>
							<dataType>
								<simpleType>Boolean</simpleType>
							</dataType>
							<defaultValue>
								<bool>false</bool>
							</defaultValue>
						</property>
					</slot>
					<slot id="a1lssw" name="Source" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="a2lst3" name="Target" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="a3lstc" name="Lower" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a4lstl" name="Upper" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="20,100 230,100 230,10 20,10 20,100" targetPointX="125" targetPointY="55" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="100" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="20" y="10">
								ReportTextSource:if :StrongDelay = 'F' then
'&lt;&lt;DelayConstraint&gt;&gt;' 
else
'&lt;&lt;StrongDelayConstraint&gt;&gt;'
endif
newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="20,10 15,18.9997 15,46.0002 10,55 15,63.9997 15,91.0002 20,100 20,100" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="20" y="10">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Source; then newline 'Source: ' :Source; endif
if :Target; then newline 'Target: ' :Target; endif
if :Upper; then newline 'Upper: ' :Upper; endif
if :Lower; then newline 'Lower: ' :Lower; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="230,10 235,18.9997 235,46.0002 240,55 235,63.9997 235,91.0002 230,100 230,100" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="10" sym:width="10" sym:x="2.2e1" sym:y="1.2e1">
								<ellipse cx="27" cy="17" fill="rgb(255,255,255)" rx="5" ry="5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</ellipse>
								<ellipse cx="27" cy="17" fill="rgb(0,0,0)" rx="5" ry="5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.096376e1" sym:sweepAngle="2.503462e2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</ellipse>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
					<icon offset="20,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="30,20 25,26 25,44 20,50 25,56 25,74 30,80 30,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="90,20 95,26 95,44 100,50 95,56 95,74 90,80 90,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="50" sym:width="50" sym:x="3.5e1" sym:y="2.5e1">
								<ellipse cx="60" cy="50" fill="rgb(255,255,255)" rx="25" ry="25" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
								<ellipse cx="60" cy="50" fill="rgb(0,0,0)" rx="25" ry="25" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.096376e1" sym:sweepAngle="2.503462e2"></ellipse>
							</g>
						</svg>
					</icon>
				</object>
				<object type="Object_SynchronizationConstraint_sysadmin_3615042709" typeName="SynchronizationConstraint">
					<description>A SynchronizationConstraint describes how tightly the occurrences of a group of events follow each other. A StrongSynchronizationConstraint describes how tightly the occurrences of a group of events follow each other.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="aqltk8" name="StrongSyncronization" unique="false">
						<property href="#Property_StrongDelay_sysadmin_3615042541"></property>
					</slot>
					<slot id="arltia" name="Event" unique="false">
						<property id="Property_Event_sysadmin_3509530253" type="Property_Event_sysadmin_3509530253" typeName="Event">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object href="#Object_Event_sysadmin_3508668873"></object>
							</contentsDataType>
							<contentsDataTypeSubtype>
								<object href="#Object_EventFaultFailure_sysadmin_3615063368"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_EventFeatureFlaw_sysadmin_3615063161"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_EventFunction_sysadmin_3508673141"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_EventFunctionClientServerPort_sysadmin_3508669694"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_EventFunctionFlowPort_sysadmin_3508669298"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_ExternalEvent_sysadmin_3615063424"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_ModeEvent_sysadmin_3615062968"></object>
							</contentsDataTypeSubtype>
						</property>
					</slot>
					<slot id="aslt4h" name="Tolerance" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identProp slotID="ap2mpd"></identProp>
					<objectSymbol offset="5,5" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="15,85 225,85 225,5 15,5 15,85" targetPointX="120" targetPointY="45" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="85" version="1.2" width="235" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="10" y="5">
								ReportTextSource:if :StrongSyncronization; = 'F' then 
	'&lt;&lt;SynchronizationConstraint&gt;&gt;' 
else
	'&lt;&lt;StrongSynchronizationConstraint&gt;&gt;'
endif
newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="15,5 10,12.9997 10,37.0002 5,45 10,52.9998 10,77.0002 15,85 15,85" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="15" y="5">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Event; then newline 'Event: ' dowhile :Event; {id ', '}endif
if :Tolerance; then newline 'Tolerance: ' :Tolerance; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="225,5 230,12.9997 230,37.0002 235,45 230,52.9998 230,77.0002 225,85 225,85" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="2" sym:height="10" sym:width="15" sym:x="1.4e1" sym:y="8.0e0">
								<line stroke="rgb(0,0,0)" stroke-width="2" x1="14" x2="29" y1="15.5" y2="15.5">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</line>
								<line stroke="rgb(0,0,0)" stroke-width="2" x1="14" x2="29" y1="10.5" y2="10.5">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</line>
								<polyline fill="none" points="24,8 29,10.5 24,13" stroke="rgb(0,0,0)" stroke-width="2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</polyline>
								<polyline fill="none" points="19,13 14,15.5 19,18" stroke="rgb(0,0,0)" stroke-width="2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</polyline>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
					<icon offset="10,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
							<line stroke="rgb(0,0,0)" stroke-width="5" x1="20" x2="80" y1="60" y2="60"></line>
							<polyline fill="none" points="20,20 15,26 15,44 10,50 15,56 15,74 20,80 20,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="80,20 85,26 85,44 90,50 85,56 85,74 80,80 80,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<line stroke="rgb(0,0,0)" stroke-width="5" x1="20" x2="80" y1="40" y2="40"></line>
							<polyline fill="none" points="60,30 80,40 60,50" stroke="rgb(0,0,0)" stroke-width="5"></polyline>
							<polyline fill="none" points="40,50 20,60 40,70" stroke="rgb(0,0,0)" stroke-width="5"></polyline>
						</svg>
					</icon>
				</object>
				<object type="Object_ExecutionTimeConstraint_sysadmin_3615042854" typeName="ExecutionTimeConstraint">
					<description>An ExecutionTimeConstraint limits the time between the starting and stopping of an executable entity (function), not counting the intervals when the execution of such an executable entity (function) has been interrupted.</description>
					<superType>
						<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
					</superType>
					<slot id="atltom" name="Start" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="aultox" name="Stop" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="avltpy" name="Preemption" unique="false">
						<property href="#Property_Event_sysadmin_3509530253"></property>
					</slot>
					<slot id="awltpc" name="Resume" unique="false">
						<property href="#Property_Event_sysadmin_3509530253"></property>
					</slot>
					<slot id="axltsj" name="Lower" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="ayltso" name="Upper" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identProp slotID="ap2mpd"></identProp>
					<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,110 240,110 240,20 30,20 30,110" targetPointX="135" targetPointY="65" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
								ReportTextSource:'&lt;&lt;ExecutionTimeConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="30,20 25,28.9997 25,56.0002 20,65 25,73.9997 25,101.0 30,110 30,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Start; then newline 'Start: ' :Start; endif
if :Stop; then newline 'Stop: ' :Stop; endif
if :Lower; then newline 'Lower: ' :Lower; endif
if :Upper; then newline 'Upper: ' :Upper; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="240,20 245,28.9997 245,56.0002 250,65 245,73.9997 245,101.0 240,110 240,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="30,30" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="90" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="40,30 35,36 35,54 30,60 35,66 35,84 40,90 40,90" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="100,30 105,36 105,54 110,60 105,66 105,84 100,90 100,90" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="40" y="30">X</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_SporadicEventConstraint_sysadmin_3509531323" typeName="SporadicConstraint">
					<description>A SporadicConstraint describes an event that occurs sporadically.</description>
					<superType>
						<object id="Object_EventConstraint_sysadmin_3509531018" type="Object_EventConstraint_sysadmin_3509531018" typeName="__EventConstraint">
							<description></description>
							<superType>
								<object href="#Object_TimingConstraint_sysadmin_3509530000"></object>
							</superType>
							<identProp slotID="ap2mpd"></identProp>
						</object>
					</superType>
					<slot id="a4lr28" name="Event" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="a5lr18" name="Lower" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a6lr1f" name="Upper" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a7lr1j" name="Jitter" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a8lr1o" name="Minimum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,120 240,120 240,20 30,20 30,120" targetPointX="135" targetPointY="70" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="120" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
								ReportTextSource:'&lt;&lt;SporadicConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="30,20 25,29.9997 25,60.0002 20,70 25,79.9997 25,110.0 30,120 30,120" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Event; then newline 'Event: ' :Event; endif
if :Lower; then newline 'Lower: ' :Lower; endif
if :Upper; then newline 'Upper: ' :Upper; endif
if :Jitter; then newline 'Jitter: ' :Jitter; endif
if :Minimum; then newline 'Min: ' :Minimum; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="240,20 245,29.9997 245,60.0002 250,70 245,79.9997 245,110.0 240,120 240,120" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="79,88" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="148" version="1.2" width="159" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="89,88 84,94 84,112 79,118 84,124 84,142 89,148 89,148" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="149,88 154,94 154,112 159,118 154,124 154,142 149,148 149,148" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="89" y="88">S</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_PatternEventConstraint_sysadmin_3509531432" typeName="PatternConstraint">
					<description>A PatternConstraint describes an event that exhibits a known pattern relative to the occurrences of an imaginary event.</description>
					<superType>
						<object href="#Object_EventConstraint_sysadmin_3509531018"></object>
					</superType>
					<slot id="a4lr61" name="Event" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="a5lr6k" name="Period" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a6lr9m" name="Offset" unique="false">
						<property id="Property_TimingExpressions_sysadmin_3615041189" type="Property_TimingExpressions_sysadmin_3615041189" typeName="TimingExpressions">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object href="#Object_TimingExpression_sysadmin_3615039938"></object>
							</contentsDataType>
						</property>
					</slot>
					<slot id="a7lr79" name="Jitter" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="a8lr7l" name="Minimum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,120 240,120 240,20 30,20 30,120" targetPointX="135" targetPointY="70" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="120" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
								ReportTextSource:'&lt;&lt;PatternConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="30,20 25,29.9997 25,60.0002 20,70 25,79.9997 25,110.0 30,120 30,120" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Event; then newline 'Event: ' :Event; endif
if :Period; then newline 'Period: ' :Period; endif
if :Offset; then newline 'Offset: ' dowhile :Offset { id; ', ' } endif
if :Jitter; then newline 'Jitter: ' :Jitter; endif
if :Minimum; then newline 'Min: ' :Minimum; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="240,20 245,29.9997 245,60.0002 250,70 245,79.9997 245,110.0 240,120 240,120" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="79,86" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="146" version="1.2" width="159" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="89,86 84,92 84,110 79,116 84,122 84,140 89,146 89,146" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="149,86 154,92 154,110 159,116 154,122 154,140 149,146 149,146" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="70" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="89" y="86">P</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_PeriodicEventConstraint_sysadmin_3509531292" typeName="PeriodicConstraint">
					<description>A PeriodicConstraint describes an event that occurs periodically.</description>
					<superType>
						<object href="#Object_EventConstraint_sysadmin_3509531018"></object>
					</superType>
					<slot id="a8lrgo" name="Event" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="a9lrhz" name="Period" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="aalri8" name="Jitter" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="ablrij" name="Minimum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,110 240,110 240,20 30,20 30,110" targetPointX="135" targetPointY="65" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="10" sym:width="20" sym:x="3.0e1" sym:y="2.0e1">
								<path d="M30,30 L30.7143,25.7851 L31.4285,22.2561 L32.1428,20.0991 L32.8571,20 L33.1746,20.7632 L33.492,21.9318 L33.8095,23.3695 L34.127,24.9396 L34.4445,26.5057 L34.7619,27.9313 L35.0794,29.0799 L35.3968,29.815 L35.7143,30 L35.974,29.6736 L36.2338,28.9735 L36.4935,27.9852 L36.7532,26.7946 L37.0129,25.4875 L37.2727,24.1496 L37.5324,22.8667 L37.7921,21.7245 L38.0519,20.8089 L38.3116,20.2054 L38.5714,20 L38.8312,20.2494 L39.091,20.8946 L39.3507,21.8477 L39.6105,23.0207 L39.8703,24.3256 L40.1301,25.6744 L40.3899,26.9793 L40.6497,28.1523 L40.9095,29.1054 L41.1692,29.7506 L41.429,30 L41.6888,29.7946 L41.9485,29.1911 L42.2082,28.2755 L42.468,27.1333 L42.7277,25.8504 L42.9874,24.5125 L43.2471,23.2054 L43.5069,22.0148 L43.7666,21.0265 L44.0263,20.3264 L44.286,20 L44.6034,20.185 L44.9209,20.9201 L45.2383,22.0687 L45.5558,23.4943 L45.8732,25.0604 L46.1907,26.6305 L46.5081,28.0682 L46.8255,29.2368 L47.143,30 L47.8573,29.9009 L48.5715,27.7439 L49.2857,24.2149 L50,20" fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:controlPoints="30,30 32.8571,20 35.7143,30 38.5714,20 41.429,30 44.286,20 47.143,30 50,20">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</path>
								<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="30" y1="25" y2="25">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</line>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
								ReportTextSource:'&lt;&lt;PeriodicConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="30,20 25,28.9997 25,56.0002 20,65 25,73.9997 25,101.0 30,110 30,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Event; then newline 'Event: ' :Event; endif
if :Period; then newline 'Period: ' :Period; endif
if :Jitter; then newline 'Jitter: ' :Jitter; endif
if :Minimum; then newline 'Min: ' :Minimum; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="240,20 245,28.9997 245,56.0002 250,65 245,73.9997 245,101.0 240,110 240,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="79,90" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="100" version="1.2" width="99" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="10" sym:width="20" sym:x="7.9e1" sym:y="9.0e1">
								<path d="M79,100 L79.7143,95.7851 L80.4285,92.2561 L81.1428,90.0991 L81.8571,90 L82.1746,90.7632 L82.492,91.9318 L82.8095,93.3695 L83.127,94.9396 L83.4444,96.5057 L83.7619,97.9313 L84.0794,99.0799 L84.3968,99.815 L84.7143,100 L84.974,99.6736 L85.2338,98.9734 L85.4935,97.9852 L85.7532,96.7946 L86.013,95.4875 L86.2727,94.1496 L86.5325,92.8667 L86.7922,91.7245 L87.0519,90.8088 L87.3117,90.2054 L87.5714,90 L87.8311,90.2494 L88.0909,90.8946 L88.3506,91.8477 L88.6104,93.0206 L88.8701,94.3256 L89.1299,95.6744 L89.3896,96.9793 L89.6494,98.1523 L89.9091,99.1054 L90.1689,99.7506 L90.4286,100 L90.6883,99.7946 L90.9481,99.1911 L91.2078,98.2755 L91.4675,97.1333 L91.7273,95.8504 L91.987,94.5125 L92.2467,93.2054 L92.5065,92.0148 L92.7662,91.0266 L93.0259,90.3264 L93.2857,90 L93.6032,90.185 L93.9206,90.9201 L94.2381,92.0687 L94.5556,93.4943 L94.873,95.0604 L95.1905,96.6305 L95.508,98.0682 L95.8254,99.2368 L96.1429,100 L96.8572,99.9009 L97.5715,97.7439 L98.2857,94.2149 L99,90" fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:controlPoints="79,100 81.8571,90 84.7143,100 87.5714,90 90.4286,100 93.2857,90 96.1429,100 99,90"></path>
								<line stroke="rgb(0,0,0)" stroke-width="1" x1="99" x2="79" y1="95" y2="95"></line>
							</g>
						</svg>
					</icon>
				</object>
				<object type="Object_ArbitraryEventConstraint_sysadmin_3509531845" typeName="ArbitraryConstraint">
					<description>An ArbitraryConstraint describes an event that occurs irregularly.</description>
					<superType>
						<object href="#Object_EventConstraint_sysadmin_3509531018"></object>
					</superType>
					<slot id="a2lrui" name="Event" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="a3lrxg" name="Minimum" unique="false">
						<property href="#Property_TimingExpressions_sysadmin_3615041189"></property>
					</slot>
					<slot id="a4lrxn" name="Maximum" unique="false">
						<property href="#Property_TimingExpressions_sysadmin_3615041189"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="20,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="30,110 240,110 240,20 30,20 30,110" targetPointX="135" targetPointY="65" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="110" version="1.2" width="250" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="30" y="20">
								ReportTextSource:'&lt;&lt;ArbitraryConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="30,20 25,28.9997 25,56.0002 20,65 25,73.9997 25,101.0 30,110 30,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="30" y="20">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :Event; then newline 'Event: ' :Event; endif
if :Minimum; then newline 'Min: ' dowhile :Minimum; {id ', '} endif
if :Maximum; then newline 'Max: ' dowhile :Maximum; {id ', '} endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="240,20 245,28.9997 245,56.0002 250,65 245,73.9997 245,101.0 240,110 240,110" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="80,77" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="137" version="1.2" width="160" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="90,77 85,83 85,101 80,107 85,113 85,131 90,137 90,137" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="150,77 155,83 155,101 160,107 155,113 155,131 150,137 150,137" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="60" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="80" y="77">Ar</textArea>
						</svg>
					</icon>
				</object>
				<object type="Object_BurstConstraint_sysadmin_3615041770" typeName="BurstConstraint">
					<description>A BurstConstraint expresses the maximum number of event occurrences that may appear in any interval of a given length, which is equivalent to constraining the same number of repeat spans (which count one extra occurrence at the end) to have a minimum width of length.</description>
					<superType>
						<object href="#Object_EventConstraint_sysadmin_3509531018"></object>
					</superType>
					<slot id="acls5n" name="MaxOccurences" unique="false">
						<property type="Property_MaxOccurences_sysadmin_3615041765" typeName="MaxOccurences">
							<description></description>
							<dataType>
								<simpleType>Number</simpleType>
							</dataType>
							<defaultValue>
								<int>0</int>
							</defaultValue>
						</property>
					</slot>
					<slot id="adls0d" name="Event" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="aelrzn" name="Length" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<slot id="afls03" name="Minimum" unique="false">
						<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
					</slot>
					<identProp slotID="ap2mpd"></identProp>
					<objectSymbol offset="1,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="10,100 220,100 220,10 10,10 10,100" targetPointX="115" targetPointY="55" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="100" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="10" y="10">
								ReportTextSource:'&lt;&lt;BurstConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="11,10 6,18.9997 6,46.0002 1,55 6,63.9997 6,91.0002 11,100 11,100" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="10" y="10">
								ReportTextSource:if :Mode; then newline 'Mode: ' :Mode; endif
if :MaxOccurences; then newline 'MaxOccur: ' :MaxOccurences; endif
if :Event; then newline 'Event: ' :Event; endif
if :Length; then newline 'Length: ' :Length; endif
if :Minimum; then newline 'Min: ' :Minimum; endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="220,10 225,18.9997 225,46.0002 230,55 225,63.9997 225,91.0002 220,100 220,100" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<polygon fill="rgb(128,128,255)" points="16.75,15.25 18,13 19.25,15.25 21.75,14.125 20.5,16.375 23,17.5 20.5,18.625 21.75,20.875 19.25,19.75 18,22 16.75,19.75 14.25,20.875 15.5,18.625 13,17.5 15.5,16.375 14.25,14.125" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
						</svg>
					</objectSymbol>
					<icon offset="35,29" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="90" version="1.2" width="115" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="45,29 40,35 40,53 35,59 40,65 40,83 45,89 45,89" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="105,29 110,35 110,53 115,59 110,65 110,83 105,89 105,89" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polygon fill="rgb(128,128,255)" points="66.25,45 75,30 83.75,45 101.25,37.5 92.5,52.5 110,60 92.5,67.5 101.25,82.5 83.75,75 75,90 66.25,75 48.75,82.5 57.5,67.5 40,60 57.5,52.5 48.75,37.5" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</object>
				<object type="Object_OrderConstraint_sysadmin_3615041845" typeName="OrderConstraint">
					<description>An OrderConstraint imposes an order between the occurrences of an event called source and an event called target. </description>
					<superType>
						<object href="#Object_EventConstraint_sysadmin_3509531018"></object>
					</superType>
					<slot id="agls8b" name="Source" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<slot id="ahls8l" name="Target" unique="false">
						<property href="#Property_Event_sysadmin_3509531009"></property>
					</slot>
					<identProp slotID="ap2mpd"></identProp>
					<objectSymbol offset="15,15" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="25,95 235,95 235,15 25,15 25,95" targetPointX="130" targetPointY="55" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="95" version="1.2" width="245" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="25" y="15">
								ReportTextSource:'&lt;&lt;OrderConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="25,15 20,22.9997 20,47.0001 15,55 20,62.9998 20,87.0002 25,95 25,95" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="210" x="25" y="15">
								ReportTextSource:if :Mode; then 'Mode: ' :Mode; newline endif
:Source;
'
 =&gt; 
'
:Target;
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polyline fill="none" points="235,15 240,22.9997 240,47.0001 245,55 240,62.9998 240,87.0002 235,95 235,95" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
							<polyline fill="none" points="25,22 30.3333,27 33,17" stroke="rgb(0,128,0)" stroke-width="2">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</objectSymbol>
					<icon offset="30,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="40,20 35,26 35,44 30,50 35,56 35,74 40,80 40,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="100,20 105,26 105,44 110,50 105,56 105,74 100,80 100,80" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
							<polyline fill="none" points="50,50 70,70 80,30" stroke="rgb(0,128,0)" stroke-width="6"></polyline>
						</svg>
					</icon>
				</object>
				<object href="#Object_TimeDuration_sysadmin_3508592970"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_Joker_user_3399887441"></object>
				<relationship id="Relationship_Stimulus_user_3617353536" type="Relationship_Stimulus_user_3617353536" typeName="Stimulus">
					<description></description>
					<relationshipSymbol offset="70,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="70,40 130,40 130,54 70,54 70,40" targetPointX="100" targetPointY="47" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="54" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="70" y="40">
								Stimulus
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="91,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="69" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.806122" x2="0.265306" y1="0.308511" y2="0.914894">
									<stop offset="0" stop-color="rgb(255,255,224)"></stop>
									<stop offset="1" stop-color="rgb(255,255,0)"></stop>
								</linearGradient>
								<linearGradient gradientUnits="objectBoundingBox" id="gradient2" sym:correctGamma="true" x1="0.741379" x2="0" y1="0.142857" y2="0.761904">
									<stop offset="0" stop-color="rgb(255,255,224)"></stop>
									<stop offset="1" stop-color="rgb(255,255,0)"></stop>
								</linearGradient>
							</defs>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="49" sym:width="49" sym:x="9.1e1" sym:y="2.0e1">
								<polygon fill="rgb(255,255,0)" points="91,47.0597 91,61.6866 111.0,69 111.0,54.3731" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<polygon fill="url(#gradient1)" points="140,20 105.0,30.2387 114.0,33.164 91,47.0597 111.0,54.3731 131.0,38.2838 140,41.9403" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<polygon fill="url(#gradient2)" points="131.0,38.2838 111.0,54.3731 111.0,68.2688 131.0,46.3285 140,49.985 140,41.9403" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<line stroke="rgb(0,0,0)" stroke-width="1" x1="131.0" x2="131.0" y1="38.2838" y2="47.0597"></line>
							</g>
						</svg>
					</icon>
				</relationship>
				<relationship id="Relationship_Response_user_3617353592" type="Relationship_Response_user_3617353592" typeName="Response">
					<description></description>
					<relationshipSymbol offset="50,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="50,40 110,40 110,54 50,54 50,40" targetPointX="80" targetPointY="47" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="54" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="60" x="50" y="40">
								Response
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="60,30" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="79" version="1.2" width="111" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.747298" x2="0.0300119" y1="0.948546" y2="0.0712117">
									<stop offset="0" stop-color="rgb(0,128,0)"></stop>
									<stop offset="1" stop-color="rgb(224,255,224)"></stop>
								</linearGradient>
								<linearGradient gradientUnits="objectBoundingBox" id="gradient2" sym:correctGamma="true" x1="0.0787757" x2="0.894514" y1="0.109507" y2="0.995354">
									<stop offset="0" stop-color="rgb(179,255,179)"></stop>
									<stop offset="1" stop-color="rgb(0,128,0)"></stop>
								</linearGradient>
							</defs>
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="49" sym:width="51" sym:x="6.0e1" sym:y="3.0e1">
								<polygon fill="rgb(0,128,0)" points="111,57.0597 111,71.6866 90.184,79 90.184,64.3731" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<polygon fill="url(#gradient1)" points="60,30 96.4282,40.2387 87.0611,43.164 111,57.0597 90.184,64.3731 69.3672,48.2838 60,51.9403" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<polygon fill="url(#gradient2)" points="69.3672,48.2838 90.184,64.3731 90.184,78.2688 69.3672,56.3285 60,59.985 60,51.9403" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<line stroke="rgb(0,0,0)" stroke-width="1" x1="69.3672" x2="69.3672" y1="48.2838" y2="57.0597"></line>
							</g>
						</svg>
					</icon>
				</relationship>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role href="#Role_Comment_user_3460793566"></role>
				<role id="Role_Stimulus_user_3617354009" type="Role_Stimulus_user_3617354009" typeName="Stimulus">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(192,192,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_Response_user_3617354044" type="Role_Response_user_3617354044" typeName="Response">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Identifiable_sysadmin_3507928462"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Identifiable_sysadmin_3507928462"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Response_user_3617353592"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Response_user_3617354044"></role>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Response_user_3617354044"></role>
						<object href="#Object_Event_sysadmin_3508668873"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Response_user_3617353592"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Response_user_3617354044"></role>
						<object href="#Object_Event_sysadmin_3508668873"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Response_user_3617354044"></role>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Stimulus_user_3617353536"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Stimulus_user_3617354009"></role>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Stimulus_user_3617354009"></role>
						<object href="#Object_Event_sysadmin_3508668873"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Stimulus_user_3617353536"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Stimulus_user_3617354009"></role>
						<object href="#Object_Event_sysadmin_3508668873"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Stimulus_user_3617354009"></role>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
					</connection>
				</binding>
				<report>
					Report '!Check'
Check()
endreport
					<icon offset="79,68" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
							<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>Check()
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

_checkings()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif</report>
				<report>_ArbitraryCheck()
/* ArbitraryConstraint checkings */
/* At least one min and max value should be defined */
foreach .ArbitraryConstraint 
{	@minimums = '0'
	@maximums = '0'
	if not :Minimum; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have any Minimum expressions defined. At least one Minimum expected.' newline
	else
		do :Minimum { @minimums++%null }
	endif
	
	if not :Maximum; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have any Maximum expressions defined. At least one Minimum expected.' newline
	else
		do :Maximum { @maximums++%null }
	endif
	
	if @minimums &lt;&gt; @maximums then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; has mismatching number of elements in Minimum and Maximum. Number of these elements must be equal.' newline
	endif
}
</report>
				<report>_BurstCheck()
/* BurstConstraint checkings */
foreach .BurstConstraint 
{	if :Length = '' then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Length defined.' newline
	endif
}</report>
				<report>_checkings()
/* Checkings for the TimingModel */
_EventChecks()
_ConstraintChecks()</report>
				<report>_CompleteEventChain()
/* EventChain checkings */
foreach .EventChain 
{	if not ~Stimulus;  then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Stimulus defined. Create a Stimulus relationships between ' type ' and Event!' newline
	endif

	if not ~Response;  then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Response defined. Create a Response relationships between ' type ' and Event!' newline
	endif
}</report>
				<report>_ConstraintChecks()
/* performs checks for constraints defined */
_MandatoryEvents()
_OrderCheck()
_PatternCheck()
_PeriodicCheck()
_ArbitraryCheck()
_BurstCheck()
_MandatoryScopes()</report>
				<report>_constraints()
foreach .(*Constraint) 
{	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- ' 
	if :StrongDelay; or :StrongSyncronization; then 'Strong-'%upper endif
	type%time%upper ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' 
	if :StrongDelay; or :StrongSyncronization; then 'STRONG-' endif
	type%time 
	' UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' 
	if @nameValue &lt;&gt; '' then
		newline '&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	_mode()
	if type = 'PeriodicConstraint' or type = 'SporadicConstraint' then
		_event()
		_jitter()
		_lower()
		_upper()
	endif
	_period()
	if type = 'RepetitionConstraint' then
		_span()
		_eventref()
		_lower()
		_upper()	
	endif
	if type = 'DelayConstraint' or type = 'ExecutionTimeConstraint' then
		_lower()
		_upper()	
	endif
	if type = 'OrderConstraint' then
		_source()
		_target()
	else
		_target()
		_source()
	endif
	_resumerefs()
	_startref()
	_preemptionrefs()
	_stopref()
	_maxoccur()
	if type &lt;&gt; 'RepetitionConstraint' then
		_span()
	endif
	if type = 'ArbitraryConstraint' then
		_maximums()
		_minimums()
	endif
	if type &lt;&gt; 'PeriodicConstraint' and type &lt;&gt; 'RepetitionConstraint' and type &lt;&gt; 'SporadicConstraint' then
		_event()
	endif
	_length()
	_min()
	_max()
	_tolerance()
	_scope()
	_offset()
	if type &lt;&gt; 'PeriodicConstraint' and type &lt;&gt; 'SporadicConstraint' then
		_jitter()
	endif
	_precedings()
	_successives()
	_eventrefs()
	newline
	'&lt;/' 
	if :StrongDelay; or :StrongSyncronization; then 'STRONG-' endif
	type%time 
	'&gt;'
}</report>
				<report>_descriptions()
/* Generator for TimingModel Events */
foreach .(*Event*) 
{	local 'nameValue' write :Name;%xml close 
	newline
	'&lt;!-- ' type%time ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' type%time ' UUID="' :__UUID '"&gt;' newline
	_isOfType()
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' 
	if @nameValue &lt;&gt; '' then
		newline
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' 
	endif
	_segment()
	if type = 'EventChain' then
		_stimulus()
		_response()
	endif
	_functionType()
	_function()
	_EventKind()
	_Port()
	_Start()
	_End()
	_FeatureFlaw()
	_FaultFailure()
	newline
	'&lt;/' type%time '&gt;'		
}</report>
				<report>_elements()
_timingTranslators()
'&lt;ELEMENTS&gt;'
if type = 'TimingModel' AND (not $reported_models =~ oid%wildsp) then
	variable 'reported_models' append oid ' ' close
	newline
	'&lt;!-- TIMING name: '
	if :Name &lt;&gt; '' then
		:Name ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;TIMING UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' 
	if :Name; then newline '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline endif
	
	'&lt;DESCRIPTIONS&gt;'
	_descriptions() newline
	'&lt;/DESCRIPTIONS&gt;' newline
	
	'&lt;CONSTRAINTS&gt;'
	_constraints() newline
	'&lt;/CONSTRAINTS&gt;' newline
	
	'&lt;/TIMING&gt;' newline
endif
'&lt;/ELEMENTS&gt;' newline</report>
				<report>_End()
if :End; then
	newline
	'&lt;END-REFS&gt;'
	do :End; 
	{	newline
		'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
		'&lt;END-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/END-REF&gt;'
	}
	newline
	'&lt;/END-REFS&gt;'
endif</report>
				<report>_event()
if type &lt;&gt; 'SynchronizationConstraint' then
	_eventref()
endif</report>
				<report>_EventChecks()
/* Performs checks for events */
_CompleteEventChain()
_LegalFunctionType()
_FailureAndFlawLinks()
_EventPortReferences()
</report>
				<report>_EventKind()
if :EventKind; then
	newline
	'&lt;EVENT-KIND&gt;' :EventKind%upper '&lt;/EVENT-KIND&gt;'
endif</report>
				<report>_EventPortReferences()
/* Event port checkings */
foreach .(EventFunctionClientServerPort | EventFunctionFlowPort) 
{	if not :Port; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Port defined.' newline
	endif
	if not :Type; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Type defined.' newline
	endif
}</report>
				<report>_eventref()
do :Event 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;EVENT-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/EVENT-REF&gt;'
}
</report>
				<report>_eventrefs()
if type = 'SynchronizationConstraint' then
	if :Event; then
		newline
     '&lt;EVENT-REFS&gt;'
		_eventref()
		newline
		'&lt;/EVENT-REFS&gt;'
	endif
endif</report>
				<report>_FailureAndFlawLinks()
/* EventFaultFailure and EventFeatureFlaw checkings */
foreach .EventFaultFailure 
{	if not :FaultFailure; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have FaultFailure defined.' newline
	endif
}

foreach .EventFeatureFlaw 
{	if not :FeatureFlaw; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have FeatureFlaw defined.' newline
	endif
}</report>
				<report>_FaultFailure()
do :FaultFailure 
{	newline
	'&lt;!-- FAULT-FAILURE name: ' :Short name; ' --&gt;' newline
	'&lt;FAULT-FAILURE-REF TYPE="FAULT-FAILURE"&gt;' variable oid '_path' read '&lt;/FAULT-FAILURE-REF&gt;'
}</report>
				<report>_FeatureFlaw()
do :FeatureFlaw 
{	newline
	'&lt;!-- FEATURE-FLAW name: ' :Short name; ' --&gt;' newline
	'&lt;FEATURE-FLAW-REF TYPE="FEATURE-FLAW"&gt;' variable oid '_path' read '&lt;/FEATURE-FLAW-REF&gt;'
}</report>
				<report>_function()
if :Function; then
	newline
	'&lt;FUNCTION-IREF&gt;'
	do :Function 
	{	newline
		'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
		'&lt;FUNCTION-PROTOTYPE-TARGET-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-TARGET-REF&gt;'
	}
	newline
	'&lt;/FUNCTION-IREF&gt;'
endif</report>
				<report>_functionType()
do :FunctionType 
{	if decompositions then
		newline
		do decompositions 
		{	'&lt;!-- ' type%time ' name: ' :FunctionName; ' --&gt;' newline
			'&lt;FUNCTION-TYPE-REF TYPE="'  type%time '"&gt;' variable oid '_path' read '&lt;/FUNCTION-TYPE-REF&gt;'
		}
	endif
}</report>
				<report>_isOfType()
do :Type { _typetref() }</report>
				<report>_jitter()
do :Jitter 
{	newline
	'&lt;JITTER&gt;' newline
	_typetref()
	'&lt;/JITTER&gt;'
}</report>
				<report>_LegalFunctionType()
/* Event function should refer to only function types */
foreach .EventFunction 
{	do :FunctionType 
	{	do decompositions 
		{	if type &lt;&gt; 'AnalysisFunctionType' and type &lt;&gt; 'DesignFunctionType' then
				_reportWarnings()
				'Warning: EventFunction ' id;2 ' &lt;' type;2 '&gt; refers to a FunctionType ' id ' &lt;' type '&gt;. Choose AnalysisFunctionType or DesignFunctionType instead.' newline
			endif
		}		
	}
	if not :Function; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Function defined.' newline
	endif
}
</report>
				<report>_length()
do :Length 
{	newline
	'&lt;LENGTH&gt;' newline
	_typetref()
	'&lt;/LENGTH&gt;'
}</report>
				<report>_lower()
do :Lower 
{	newline
	'&lt;LOWER&gt;' newline
	_typetref()	
	'&lt;/LOWER&gt;'
}</report>
				<report>_MandatoryEvents()
foreach .(RepetitionConstraint | PatternConstraint | SporadicConstraint | ArbitraryConstraint | BurstConstraint | PeriodicConstraint) 
{	if not :Event; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Event defined.' newline
	endif
}

foreach .SynchronizationConstraint 
{	@no = '0'
	do :Event {	@no++%null }
	if @no &lt; '2' then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; should have at least two Events defined.' newline
	endif
}

foreach .DelayConstraint 
{	if not :Source; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Source defined.' newline
	endif
	if not :Target; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Target defined.' newline
	endif
}

foreach .ExecutionTimeConstraint 
{	if not :Start; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Start defined.' newline
	endif
	if not :Stop; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Stop defined.' newline
	endif
}</report>
				<report>_MandatoryScopes()
foreach .(InputSynchronizationConstraint | OutputSynchronizationConstraint) 
{	@no = '0'
	do :Scope {	@no++%null }
	if @no &lt; '2' then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; should have at least two Scopes defined.' newline
	endif
}

foreach .(ReactionConstraint | AgeConstraint) 
{	if not :Scope; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Scope defined.' newline
	endif
}
</report>
				<report>_max()
if type &lt;&gt; 'ArbitraryConstraint' then
	do :Maximum 
	{	newline
		'&lt;MAXIMUM&gt;' newline
		_typetref()
		'&lt;/MAXIMUM&gt;'
	}
endif</report>
				<report>_maximums()
newline 
'&lt;MAXIMUMS&gt;' 
do :Maximum 
{	newline
	_timingExpression() 
}
newline
'&lt;/MAXIMUMS&gt;'</report>
				<report>_maxoccur()
if :MaxOccurences; then
	newline
	'&lt;MAX-OCCURENCES&gt;':MaxOccurences'&lt;/MAX-OCCURENCES&gt;'
endif</report>
				<report>_min()
if type &lt;&gt; 'ArbitraryConstraint' then
	do :Minimum 
	{	newline
		'&lt;MINIMUM&gt;' newline
		_typetref()
		'&lt;/MINIMUM&gt;'
	}
endif</report>
				<report>_minimums()
newline 
'&lt;MINIMUMS&gt;' 
do :Minimum 
{	newline
	_timingExpression() 
}
newline
'&lt;/MINIMUMS&gt;'</report>
				<report>_mode()
do :Mode 
{	
	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
	'&lt;MODE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/MODE-REF&gt;' 
}</report>
				<report>_offset()
if :Offset; &lt;&gt; '' then
	newline
	'&lt;OFFSETS&gt;' newline
	do :Offset { _timingExpression()	}
   newline
	'&lt;/OFFSETS&gt;'
endif</report>
				<report>_OrderCheck()
/* OrderConstraint checkings */
foreach .(OrderConstraint) 
{	if not :Source; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Source defined.' newline
	endif
	if not :Target; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Target defined.' newline
	endif
}
</report>
				<report>_PatternCheck()
/* PatternConstraint checkings */
foreach .PatternConstraint 
{	if not :Period; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Period defined.' newline
	endif
	if not :Offset; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have any Offset defined.' newline
	endif
}</report>
				<report>_period()
do :Period 
{	newline
	'&lt;PERIOD&gt;' newline
	_typetref()
	'&lt;/PERIOD&gt;'
}</report>
				<report>_PeriodicCheck()
/* PeriodicConstraint checkings */
foreach .PeriodicConstraint 
{	if not :Period; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not have Period defined.' newline
	endif
}</report>
				<report>_Port()

if :Port &lt;&gt; '' then
	newline
	'&lt;PORT-IREF&gt;'
	do :Port 
	{	newline
		if type = 'ClientPort' or type = 'ServerPort' then
			'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
			'&lt;FUNCTION-CLIENT-SERVER-PORT-REF TYPE="FUNCTION-CLIENT-SERVER-PORT"&gt;' variable oid '_path' read '&lt;/FUNCTION-CLIENT-SERVER-PORT-REF&gt;'
		else
			'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
			'&lt;FUNCTION-FLOW-PORT-REF TYPE="FUNCTION-FLOW-PORT"&gt;' variable oid '_path' read '&lt;/FUNCTION-FLOW-PORT-REF&gt;'
		endif
	}
	newline
	'&lt;/PORT-IREF&gt;'
endif</report>
				<report>_precedings()
/* context and target not in metamodel */
if :Preceding &lt;&gt; '' then
	newline
	'&lt;PRECEDING-IREF&gt;'
	do :Preceding 
	{	newline
		'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
		'&lt;FUNCTION-PROTOTYPE-TARGET-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-TARGET-REF&gt;'
	}
	newline
	'&lt;/PRECEDING-IREF&gt;'
endif</report>
				<report>_preemptionrefs()
if :Preemption; then
	newline
	'&lt;PREEMPTION-REFS&gt;' 
	do :Preemption 
	{	newline
		'&lt;PREEMPTION-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/PREEMPTION-REF&gt;'
	}
	newline
	'&lt;/PREEMPTION-REFS&gt;'
endif</report>
				<report>_response()
do &gt;Response.(^EventChain) 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;RESPONSE-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/RESPONSE-REF&gt;'
}</report>
				<report>_resumerefs()
if :Resume; then
	newline
	'&lt;RESUME-REFS&gt;' 
	do :Resume 
	{	newline
		'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
		'&lt;RESUME-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/RESUME-REF&gt;'
	}
	newline
	'&lt;/RESUME-REFS&gt;'
endif</report>
				<report>_scope()
if type = 'AgeConstraint' or type = 'ReactionConstraint' then
	_scopeDetails()
endif

if type = 'InputSynchronizationConstraint' or type = 'OutputSynchronizationConstraint' then
	newline 
	'&lt;SCOPE-REFS&gt;'
	_scopeDetails()
	newline 
	'&lt;/SCOPE-REFS&gt;'
endif</report>
				<report>_scopeDetails()
do :Scope 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;SCOPE-REF TYPE="EVENT-CHAIN"&gt;' variable oid '_path' read '&lt;/SCOPE-REF&gt;'
}</report>
				<report>_segment()
if :Segment; then
	newline
	'&lt;SEGMENT-REFS&gt;'
	do :Segment 
	{	newline
		'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
		'&lt;SEGMENT-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/SEGMENT-REF&gt;'
	}
	newline
	'&lt;/SEGMENT-REFS&gt;'
endif</report>
				<report>_source()
do :Source 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;SOURCE-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/SOURCE-REF&gt;'
}</report>
				<report>_span()
if :Span; &lt;&gt; '' then
	newline
	'&lt;SPAN&gt;' :Span '&lt;/SPAN&gt;'
endif</report>
				<report>_Start()
if :Start; then
	newline
	'&lt;START-REFS&gt;'
	do :Start; 
	{	newline
		'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
		'&lt;START-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/START-REF&gt;'
	}
	newline
	'&lt;/START-REFS&gt;'
endif</report>
				<report>_startref()
do :Start 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;START-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/START-REF&gt;'
}</report>
				<report>_stimulus()
do &gt;Stimulus.(^EventChain) 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;STIMULUS-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/STIMULUS-REF&gt;'
}
</report>
				<report>_stopref()
do :Stop 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;STOP-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/STOP-REF&gt;'
}</report>
				<report>_successives()
/* context and target not in metamodel */
if :Successive; then
	newline
	'&lt;SUCCESSIVE-IREF&gt;'
	do :Successive 
	{	newline
		'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
		'&lt;FUNCTION-PROTOTYPE-TARGET-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-TARGET-REF&gt;'
	}
	newline
	'&lt;/SUCCESSIVE-IREF&gt;'
endif</report>
				<report>_target()
do :Target 
{	newline
	'&lt;!-- ' type%time ' name: ' :Short name; ' --&gt;' newline
	'&lt;TARGET-REF TYPE="' type%time '"&gt;' variable oid '_path' read '&lt;/TARGET-REF&gt;'
}</report>
				<report>_timingExpression()
'&lt;TIMING-EXPRESSION&gt;' newline
_typetref()
'&lt;/TIMING-EXPRESSION&gt;'</report>
				<report>_tolerance()
do :Tolerance 
{	newline
	'&lt;TOLERANCE&gt;' newline
	_typetref()
	'&lt;/TOLERANCE&gt;'
}</report>
				<report>_typetref()
do :Type 
{	
	'&lt;!-- ' type%minus%upper ' name: ' :Short name; ' --&gt;' newline
	'&lt;TYPE-TREF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline 
}</report>
				<report>_upper()
do :Upper 
{	newline
	'&lt;UPPER&gt;' newline
	_typetref()
	'&lt;/UPPER&gt;'
}</report>
				<report>__LiveCheck()
_translators()
$warnings = '0'
$LiveCheck = 'T'

_checkings()

if $warnings = '0' then
	'No warnings' newline
endif</report>
				<constraints>
					<connectivity>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
						<relationship href="#Relationship_Response_user_3617353592"></relationship>
						<max>1</max>
					</connectivity>
					<connectivity>
						<object href="#Object_EventChain_sysadmin_3509108715"></object>
						<relationship href="#Relationship_Stimulus_user_3617353536"></relationship>
						<max>1</max>
					</connectivity>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_Identifiable_sysadmin_3507928462"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
				<icon offset="25,15" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="85" version="1.2" width="95" xmlns="http://www.w3.org/2000/svg">
						<ellipse cx="60" cy="50" fill="rgb(255,255,255)" rx="35" ry="35" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
						<polyline fill="none" points="60,25 60,55 80,55" stroke="rgb(0,0,0)" stroke-width="6"></polyline>
					</svg>
				</icon>
			</graph>
		</explosion>
		<explosion>
			<object href="#Object_LogicalTransformation_sysadmin_3508139808"></object>
			<graph href="#Graph_Timing_user_3506250345"></graph>
		</explosion>
		<decomposition>
			<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
			<graph id="Graph_LogicalPathDecomposition_Graph_sysadmin_3527232175" type="Graph_LogicalPathDecomposition_Graph_sysadmin_3527232175" typeName="BehaviorConstraintLogicalPath">
				<description>The EAST-ADL logical path (LogicalPath) is a set of restrictions on the cause-effect flows of some observable logical and executional events. It provides the modeling support for annotating the expected cause-effect traces across a system or a component.

A logical path specifies the overall causality of computation by relating execution events with logical transformations and logical events. An execution event can be the triggering of function, port reading or writing, which constitutes the basis for the description of execution control using timing event chains (Timing::EventChain). Compared to such execution events, the logical transformation and logical events are only concerned with the computational logic.  The specification of logical path allows the internal causality of the computations of a function/component to be captured and merged explicitly with the related external execution events. 

Logical paths can be combined in parallel (strand) or in sequence (segment).

Constraints:
N/A.

Semantics:
A logical path is a set of restrictions on the cause-effect flows of computation. When applied to a function/component, a logical path defines the correspondence from a triple of  logical stimulus (logicalStimulus), logical transformation (transformationOccurrance), and logical response (logicalResponse), to a triple of preceding execution event chains (precedingEventChain), the corresponding execution event chains (correspondingExecutionEventChain), and the succeeding execution event chains (succeedingEventChain).

By describing the internal causality of a function/component, a logical path may refine an execution event chain (correspondingExecutionEventChain), which is primarily used to capture the causality of triggering, port reading and writing events. 
</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="c01ng1" name="Short name" unique="false">
					<property href="#Property_2ECUName_user_3310972947"></property>
				</slot>
				<slot id="c2jxm1" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="c11ngk" name="Description" unique="false">
					<property href="#Property_2Description_user_3310902697"></property>
				</slot>
				<identReport>_name()</identReport>
				<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
				<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
				<object href="#Object_LogicalTransformation_sysadmin_3508139808"></object>
				<relationship href="#Relationship_segment_logicalPath_sysadmin_3524654557"></relationship>
				<relationship href="#Relationship_strand_sysadmin_3524656062"></relationship>
				<relationship href="#Relationship_TranformationOccurrenceToTransformationLink_sysadmin_3524738242"></relationship>
				<relationship href="#Relationship_link_transformationOccurrence_sysadmin_3524523524"></relationship>
				<role href="#Role_from_segment_sysadmin_3524655122"></role>
				<role href="#Role_from_strand_sysadmin_3524656225"></role>
				<role href="#Role_to_segment_sysadmin_3524655141"></role>
				<role href="#Role_to_strand_sysadmin_3524656242"></role>
				<role href="#Role_inLogicalPath_sysadmin_3524523799"></role>
				<role href="#Role_from_transformationOccurrence_sysadmin_3524738366"></role>
				<role href="#Role_to_transformation_sysadmin_3524738385"></role>
				<role href="#Role_invokedLogicalTransformation_sysadmin_3524523826"></role>
				<binding>
					<relationship href="#Relationship_link_transformationOccurrence_sysadmin_3524523524"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_inLogicalPath_sysadmin_3524523799"></role>
						<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_invokedLogicalTransformation_sysadmin_3524523826"></role>
						<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_segment_logicalPath_sysadmin_3524654557"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_from_segment_sysadmin_3524655122"></role>
						<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_to_segment_sysadmin_3524655141"></role>
						<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_strand_sysadmin_3524656062"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_from_strand_sysadmin_3524656225"></role>
						<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_to_strand_sysadmin_3524656242"></role>
						<object href="#Object_LogicalPath_sysadmin_3509106642"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_TranformationOccurrenceToTransformationLink_sysadmin_3524738242"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_from_transformationOccurrence_sysadmin_3524738366"></role>
						<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_to_transformation_sysadmin_3524738385"></role>
						<object href="#Object_LogicalTransformation_sysadmin_3508139808"></object>
					</connection>
				</binding>
			</graph>
		</decomposition>
		<constraints>
			<connectivity>
				<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
				<relationship href="#Relationship_TranformationOccurrenceToTransformationLink_sysadmin_3524738242"></relationship>
				<max>1</max>
			</connectivity>
		</constraints>
	</graph>
	<graph id="Graph_BehaviorConstraintGraph_sysadmin_3557736543" type="Graph_BehaviorConstraintGraph_sysadmin_3557736543" typeName="BehaviorConstraintGraph">
		<description></description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="c4d9vl" name="Short name" unique="false">
			<property href="#Property_2ECUName_user_3310972947"></property>
		</slot>
		<slot id="c6jxl1" name="Name" unique="false">
			<property href="#Property_Name_sysadmin_3536998876"></property>
		</slot>
		<slot id="c5d9xb" name="Description" unique="false">
			<property href="#Property_2Description_user_3310902697"></property>
		</slot>
		<identReport>_name()</identReport>
		<object id="Object_BehaviorConstraintType_sysadmin_3508101298" type="Object_BehaviorConstraintType_sysadmin_3508101298" typeName="BehaviorConstraintType">
			<description>The specification of behavior constraints provides the modeling support for formalizing, integrating, and managing various behavioral concerns in a common context of system architecture design. A behavior constraint can be annotated either for refining requirements or for precisely defining the behavioral properties of design and analysis artifacts. </description>
			<superType>
				<object type="Object_Context_sysadmin_3507930233" typeName="_Context">
					<description>Context represents a simple and practical way to allocate TraceableSpecifications to a specific EAST-ADL model context, and to let this specific model context own Relationships.

Semantics:
See Relationship and TraceableSpecification.

Extension: 
The ADLContext stereotype is an abstract stereotype which extends UML2 metaclass Element</description>
					<superType>
						<object id="Object_EAPackageableElement_sysadmin_3507929871" type="Object_EAPackageableElement_sysadmin_3507929871" typeName="_EAPackageableElement">
							<description></description>
							<superType>
								<object href="#Object_Identifiable_sysadmin_3507928462"></object>
							</superType>
							<identProp slotID="ap2mpd"></identProp>
						</object>
					</superType>
					<identProp slotID="ap2mpd"></identProp>
				</object>
			</superType>
			<slot id="aomqt9" name="parameter" unique="false">
				<property type="Property_parameter_sysadmin_3509171778" typeName="parameter">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_BehaviorInstantiationParameter_sysadmin_3508150622"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_Attribute_sysadmin_3508150739"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_EventOccurrence__sysadmin_3508150778"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_BehaviorConstraintBindingAttribute_sysadmin_3537598279"></object>
					</contentsDataTypeSubtype>
					<contentsDataTypeSubtype>
						<object href="#Object_BehaviorConstraintBindingEvent_sysadmin_3537598343"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="10,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="20,30 310,30 310,148 20,148 20,30" targetPointX="165" targetPointY="89" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="164" version="1.2" width="325" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="144" rx="0" ry="0" stroke="rgb(128,128,0)" stroke-width="1" width="315" x="10" y="20">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(128,128,128)" height="114" rx="16" ry="10" stroke="rgb(128,128,128)" stroke-width="0" width="285" x="30" y="40">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(255,255,255)" height="118" rx="10" ry="10" stroke="rgb(128,128,128)" stroke-width="1" width="290" x="20" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="290" x="20" y="30">
						ReportTextSource:'&lt;BehaviorConstraintType&gt;' newline
id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="117" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="286" x="20" y="30">
						ReportTextSource:newline newline newline
to '%null' newline '* $' endto

$funcTypeCount='0' 

$partCount='0' 
$partBindingParameterCount='0'
$attributeQuantificationConstraintCount='0' 
$temporalConstraintCount='0' 
$computationConstraintCount='0' 

$partList=''
$partBindingAttributeList=''
$partBindingEventList=''
$attributeQuantificationConstraintList='' 
$temporalConstraintList='' 
$computationConstraintList='' 

do ~referred_from&gt;()~refer_to.EAType
   { 
		if $funcTypeCount++ = '0' then 
  		'targetedFunctionType' ' := { ' 
		endif 
  		do decompositions { id; } '; '
  }
if not ($funcTypeCount = '0') then 
		'}'
		newline
endif 

do ~referred_from&gt;()~refer_to.VehicleFeature
   { 
  		'targetedVehicleFeature' ' := { ' 
  		 id ' }'
		'; '
		newline
   }

'parameter' ':' 
if :parameter; then
   '=[' dowhile :parameter { id; ', ' } ']'
else
   'void'
endif

newline
' {' 

do decompositions {
		foreach .(BehaviorConstraintPrototype) 
		{
			variable 'partList' append		
			 id '; '
			 $partCount++%null
			close 
       }

		foreach &gt;(BehaviorConstraintBindingAttribute) 
			{
				variable 'partBindingAttributeList' append
				 id '; '
				close 
      	 }
		
		foreach &gt;(BehaviorConstraintBindingEventOccurrence) 
			{
				variable 'partBindingEventList' append 
			 		id '; '
				close
      	 }

		foreach .(AttributeQuantificationConstraint) 
		{	
			variable 'attributeQuantificationConstraintList' append		
			 id '; '
			 $attributeQuantificationConstraintCount++%null
			close 
       }

		foreach .(TemporalConstraint) 
		{	
			variable 'temporalConstraintList' append		
			 id '; '
			 $temporalConstraintCount++%null
			close 
       }

		foreach .(ComputationConstraint) 
		{
			variable 'computationConstraintList' append		
			 id '; '
			 $computationConstraintCount++%null
			close 
       }
}

if not ($partCount = '0') then
		newline
			'   part' ' := { ' $partList '}' newline
			'   partBindingParameter' ' := { ' 
					'{ ' $partBindingAttributeList '} '
					'{ ' $partBindingEventList '}'
		
			' }'
endif


if not ($attributeQuantificationConstraintCount = '0') then
	newline	
	'   attributeQuantificationConstraint'  ' := { '
				$attributeQuantificationConstraintList
	'}'
endif

if not ($temporalConstraintCount = '0') then
	newline
	'   temporalConstraint'  ' := { '
			$temporalConstraintList
 	'}'
endif

if not ($computationConstraintCount = '0') then
	newline
	'   computationConstraint'  ' := { '
			$computationConstraintList
	'}'	
endif

newline	
' }'

/***********************************
to '%null' newline '* $' endto
$commacheck='0'
$commacheck2='0'
if :targetedVehicleFeature; then 
	'   targetedVehicleFeature --&gt;' :targetedVehicleFeature
endif 


if :targetedFunctionType; then
		newline
		if :constrainedFunctionBehavior; then
			'   constrainedFunctionBehavior --&gt;' 		
				if :contextOfConstrainedFunctionBehavior; then
					:contextOfConstrainedFunctionBehavior'::'
				endif
			 :targetedFunctionType 
		else
			'&lt;Not contraining function behavior&gt;'	
		endif
 
		if :constrainedFunctionTrigger; then
			'   constrainedFunctionTrigger --&gt;' 		
				if :contextOfConstrainedFunctionBehavior; then
					:contextOfConstrainedFunctionBehavior'::'
				endif
			 :constrainedFunctionTrigger 
		else
			'&lt;Not contraining function trigger&gt;'	
		endif

endif

if :refinedBehaviorConstraint; then
	'   refinedBehaviorConstraint --&gt;' :refinedBehaviorConstraint
endif

if :part; then
	newline
   '   part' '= {' 
   
	do :part {
	 if $commacheck&lt;&gt;'0'
	then 
	','
	endif
	$commacheck++%null
   :Name } '}'
	newline
	
	'   partBindingParameter'  '= [' 
		
			if :partBindingParameter_Attribute; then
			do :partBindingParameter_Attribute
			  {if $commacheck2&lt;&gt;'0'
	           then 
	            ','
	          endif
	           $commacheck2++%null
            :Name }
		   endif
			' '
			if :partBindingParameter_Event; then
				:partBindingParameter_Event
			endif			
			
			
		']'
endif


if :parameter; then
	newline
   '   parameter' '= [' :parameter ']'
endif

if :attributeQuantificationConstraint; then
	newline
   '   attributeQuantificationConstraint' ' = {':attributeQuantificationConstraint '}'
endif

if :temporalConstraint; then
	newline
   '   temporalConstraint' ' = {' :temporalConstraint '}'
endif

if :compuationConstraint; then
	newline
   '   compuationConstraint' ' = {' :compuationConstraint '}'
endif

********************************/
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<g fill="none" stroke="none" stroke-width="1" sym:height="14" sym:width="21" sym:x="2.5e1" sym:y="3.2e1">
						<rect fill="none" height="11.9259" rx="0" ry="0" stroke="none" stroke-width="1" width="21" x="25" y="34.0741">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<ellipse cx="33.6368" cy="37.7037" fill="rgb(0,128,128)" rx="8.6368" ry="5.7037" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</ellipse>
						<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="12" font-style="normal" font-weight="normal" height="11.8519" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="11.8408" x="27.9167" y="32.037">
							B
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</textArea>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="290" x="20" y="30">
						ReportTextSource:newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="64,130" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="173" version="1.2" width="110.612" xmlns="http://www.w3.org/2000/svg">
					<ellipse cx="87.3059" cy="152" fill="rgb(0,128,128)" rx="23.3059" ry="21" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
					<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="48" font-style="normal" font-weight="bold" height="42" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="38.2985" x="69" y="130">B</textArea>
				</svg>
			</icon>
		</object>
		<object href="#Object_EAType_sysadmin_3541158109"></object>
		<object href="#Object_Joker_user_3399887441"></object>
		<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
		<relationship href="#Relationship_Comment_user_3460793460"></relationship>
		<role href="#Role_referred_from_sysadmin_3524947545"></role>
		<role href="#Role_refer_to_sysadmin_3524947529"></role>
		<role href="#Role_Comment_user_3460793566"></role>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
			</connection>
		</binding>
		<decomposition>
			<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
			<graph id="Graph_BehaviorConstraint_user_3506169563" type="Graph_BehaviorConstraint_user_3506169563" typeName="BehaviorConstraintType">
				<description>The specification of behavior constraints provides the modeling support for formalizing, integrating, and managing various behavioral concerns in a common context of system architecture design. A behavior constraint can be annotated either for refining requirements or for precisely defining the behavioral properties of design and analysis artifacts. </description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="a1yspk" name="Short name" unique="false">
					<property href="#Property_2ECUName_user_3310972947"></property>
				</slot>
				<slot id="akjxpq" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="ahc4gk" name="Description" unique="false">
					<property href="#Property_2Description_user_3310902697"></property>
				</slot>
				<slot id="aiurbh" name="§§_Type_2" unique="true">
					<property type="Property__StructureGraph_Type2_sysadmin_3532949990" typeName="§§_Type_2">
						<description></description>
						<dataType>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
						</dataType>
					</property>
				</slot>
				<slot id="ajur8m" name="§§_Type_1" unique="true">
					<property type="Property__StructureGraph1_sysadmin_3532949939" typeName="§§_Type_1">
						<description></description>
						<dataType>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
						</dataType>
					</property>
				</slot>
				<identReport>_name()</identReport>
				<object id="Object_BehaviorConstraintType_sysadmin_3508101078" type="Object_BehaviorConstraintType_sysadmin_3508101078" typeName="AttributeQuantificationConstraint">
					<description>AttributeQuantificationConstraint are concerned with the value conditions of attributes underlying a behavior on a timeline. They are useful for declaring the variables (e.g. the input-, output- and internal variables of a function), their expected values and logical relations. An attribute quantification constraint can be expressed either by simple equations like F = m*a, V &gt;= 90, or dynamics models. When necessary, the straints on computational operations for data transformations and value assignment can be declared through the computation constraints (ComputationConstraint).</description>
					<superType>
						<object href="#Object_Identifiable_sysadmin_3507928462"></object>
					</superType>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="20,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="20,10 320,10 320,190 20,190 20,10" targetPointX="170" targetPointY="100" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="190" version="1.2" width="320" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="180" rx="0" ry="0" stroke="rgb(128,128,128)" stroke-width="1" width="300" x="20" y="10">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-size="16" font-style="normal" font-weight="normal" height="180" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="300" x="20" y="10">
								f(x)
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="180" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="300" x="20" y="10">
								ReportTextSource:newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
newline
do decompositions {
	' attribute' 
	' := { '
	foreach .(Attribute | BehaviorConstraintBindingAttribute) 
		{	
			newline 
			'       ' id ' : '  
			if :type; then 
				:type
			endif 
			'; '
	    }
	'}'
	newline
	' quantification' ' := {' 
		foreach .(Quantification) 
		{	
			newline
			'       ' id '; '
	      }
 	'}'
}





								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<rect fill="none" height="23" rx="0" ry="0" stroke="none" stroke-width="1" width="36" x="24" y="15">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="180" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="300" x="20" y="10">
								ReportTextSource:'&lt;&lt;AttributeQuantificationConstraint&gt;&gt;' newline
id

								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="27,33" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="56" version="1.2" width="57" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="none" stroke-width="1" sym:height="23" sym:width="30" sym:x="2.7e1" sym:y="3.3e1">
								<rect fill="rgb(213,213,213)" height="21" rx="0" ry="0" stroke="rgb(213,213,213)" stroke-width="1" width="28" x="29" y="35"></rect>
								<rect fill="rgb(255,255,255)" height="21" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="28" x="27" y="33"></rect>
								<textArea display-align="center" fill="rgb(0,0,0)" font-family="rockwell" font-size="16" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="28" x="27" y="34">f(x)</textArea>
							</g>
						</svg>
					</icon>
				</object>
				<object id="Object_TemporalConstraint_sysadmin_3508101158" type="Object_TemporalConstraint_sysadmin_3508101158" typeName="TemporalConstraint">
					<description>TemporalConstraint provides the language support for capturing the concerns relating to discrete behavior, which emphasizes the dependency that a behavior has in regard to its own history and other behaviors on a timeline. They are useful for precisely defining requirements or design solutions.</description>
					<superType>
						<object href="#Object_Identifiable_sysadmin_3507928462"></object>
					</superType>
					<slot id="a2bdja" name="assertion" unique="false">
						<property type="Property_assertion_user_3506171169" typeName="assertion">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<widget>Input Field</widget>
						</property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="10,10 310,10 310,140 10,140 10,10" targetPointX="160" targetPointY="75" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="141" version="1.2" width="310" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="130" rx="0" ry="0" stroke="rgb(128,128,128)" stroke-width="1" width="300" x="10" y="10">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="130" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="300" x="10" y="10">
								ReportTextSource:'&lt;&lt;TemporalConstraint&gt;&gt;' newline
id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="131" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="300" x="10" y="10">
								ReportTextSource:newline newline
'¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯'
newline
do decompositions {
	' state' 
	' := { '
	foreach .(State) 	{ id '; ' }
	'}'
	newline
	' initState' 
	' := { ' 
		foreach .(State) 
		{	
			if :isInitialState; then
				id	'  '
			endif 
       	}
 	'}'
	newline
	' TransitionEvent' 
	' := { '
		foreach .(TransitionEvent) 
		{	 
			 id '; '
	      }
 	'}'
	newline
	' transition' 
	' := { '
	foreach &gt;(Transition) {
				newline
				'      '			
					do ~from.()
						{	
	 						id
							'--'
						}
					'[ '
					:timeGuard ' '
					']'
							
					'[ '
					:quantificationGuard ' '
					']'							
					
					if :writeEventOccurrence!; then
						'!' 
						:writeEventOccurrence!
					endif
					
					if :readEventOccurrence?; then
						'?' 
						:readEventOccurrence?
					endif
					
						
					if :effect; then
						' / ' 
						:effect
					endif				
					
					
					do ~to.()
						{	
							'--&gt;'
	 						id
						}

			'; '
      }

	'}'
	newline
	' timeCondition' 
	' := { '
		foreach .(LogicalTimeCondition) 
		{
			 id '; '
	       }
	'}'
	newline
	' transformationOccurrence' 
	' := { '
		$calledEffect = ''	
		$calledTransformation = ''
		$count='0'
		$QuantificationOccurrence = ''
		$QuantificationOccurrenceCountTotal = ''

		foreach &gt;(Transition) {
			if :effect; then
				do :effect
	  					{  
							$calledTransformation=:Short name;
							do $calledTransformation
							{	
								$QuantificationOccurrence = id
								variable 'count' write
									variable 'count_'$QuantificationOccurrence read  
								close
								variable 'count_'$QuantificationOccurrence write
									$++count
								close
								variable 'QuantificationOccurrenceCountTotal' write
									variable 'count_'$QuantificationOccurrence read  
								close 
								if $QuantificationOccurrenceCountTotal ='1' then
									variable 'calledEffect' append
										id '; '
									close
								endif
							}
						}
			endif			
		}
				$calledEffect 		
 		' }'
}
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<g fill="none" stroke="none" stroke-width="1" sym:height="15" sym:width="32" sym:x="1.0e1" sym:y="1.0e1">
								<g fill="none" stroke="rgb(0,0,0)" sym:height="13.5" sym:width="24" sym:x="1.0e1" sym:y="1.15e1">
									<ellipse cx="17.0588" cy="12.85" fill="none" rx="1.41177" ry="1.35" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="17.0588" x2="17.0588" y1="16.9" y2="14.2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="none" points="34,16.9 29.7647,17.8 29.7647,16" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<ellipse cx="24.1177" cy="12.85" fill="none" rx="1.41178" ry="1.35" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="24.1177" x2="24.1177" y1="16.9" y2="14.2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="10" x2="31.1764" y1="16.9" y2="16.9">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<ellipse cx="17.0588" cy="20.05" fill="none" rx="1.41177" ry="1.35001" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="17.0588" x2="17.0588" y1="24.1" y2="21.4">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<polygon fill="none" points="34,24.1 29.7647,25 29.7647,23.2" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<ellipse cx="24.1177" cy="20.05" fill="none" rx="1.41178" ry="1.35001" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="24.1177" x2="24.1177" y1="24.1" y2="21.4">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="10" x2="31.1764" y1="24.1" y2="24.1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<ellipse cx="11.4118" cy="20.05" fill="none" rx="1.41177" ry="1.35001" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="11.4118" x2="11.4118" y1="24.1" y2="20.5">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</g>
								<textArea display-align="before" fill="rgb(0,0,0)" font-family="latha" font-size="8" font-style="normal" font-weight="normal" height="5.25" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="9.14283" x="32.8572" y="10">
									t
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</textArea>
								<textArea display-align="before" fill="rgb(0,0,0)" font-family="latha" font-size="8" font-style="normal" font-weight="normal" height="5.25" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="9.14283" x="32.8572" y="18.25">
									t
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</textArea>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
					<icon offset="9,120" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="140" version="1.2" width="37" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="none" stroke-width="1" sym:height="20" sym:width="28" sym:x="9.0e0" sym:y="1.2e2">
								<g fill="none" stroke="rgb(0,0,0)" sym:height="18" sym:width="21" sym:x="9.0e0" sym:y="1.22e2">
									<ellipse cx="15.1765" cy="123.8" fill="none" rx="1.23529" ry="1.8" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="15.1765" x2="15.1765" y1="129.2" y2="125.6"></line>
									<polygon fill="none" points="30,129.2 26.2941,130.4 26.2941,128" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<ellipse cx="21.3529" cy="123.8" fill="none" rx="1.2353" ry="1.8" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="21.3529" x2="21.3529" y1="129.2" y2="125.6"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="9" x2="27.5294" y1="129.2" y2="129.2"></line>
									<ellipse cx="15.1765" cy="133.4" fill="none" rx="1.23529" ry="1.8" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="15.1765" x2="15.1765" y1="138.8" y2="135.2"></line>
									<polygon fill="none" points="30,138.8 26.2941,140 26.2941,137.6" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<ellipse cx="21.3529" cy="133.4" fill="none" rx="1.2353" ry="1.8" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="21.3529" x2="21.3529" y1="138.8" y2="135.2"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="9" x2="27.5294" y1="138.8" y2="138.8"></line>
									<ellipse cx="10.2353" cy="133.4" fill="none" rx="1.23529" ry="1.8" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<line stroke="rgb(0,0,0)" stroke-width="0" x1="10.2353" x2="10.2353" y1="138.8" y2="134"></line>
								</g>
								<textArea display-align="before" fill="rgb(0,0,0)" font-family="latha" font-size="8" font-style="normal" font-weight="normal" height="7" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="8" x="29" y="120">t</textArea>
								<textArea display-align="before" fill="rgb(0,0,0)" font-family="latha" font-size="8" font-style="normal" font-weight="normal" height="7" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="8" x="29" y="131">t</textArea>
							</g>
						</svg>
					</icon>
				</object>
				<object href="#Object_ComputationConstraint_sysadmin_3508101199"></object>
				<object id="Object_BehaviorConstraintPrototype_sysadmin_3508101353" type="Object_BehaviorConstraintPrototype_sysadmin_3508101353" typeName="BehaviorConstraintPrototype">
					<description>BehaviorConstraintPrototype is the modeling construct for declaring the instantiated occurrence(s) of a behavior constraint type (BehaviorConstraintPrototype.type) in particular behavior specification context where the behavior constraint type acts as part.</description>
					<superType>
						<object type="Object_TraceableSpecification_sysadmin_3507930043" typeName="_TraceableSpecification">
							<description>An optional description attribute that provides textual representation, or a reference to the textual representation, of the Traceable Specification in a specific formalism.</description>
							<superType>
								<object href="#Object_EAPackageableElement_sysadmin_3507929871"></object>
							</superType>
							<slot id="a028cx" name="text" unique="false">
								<property type="Property_text_sysadmin_3507930087" typeName="text">
									<description></description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<widget>Input Field</widget>
								</property>
							</slot>
							<identProp slotID="ap2mpd"></identProp>
						</object>
					</superType>
					<slot id="a0jfze" name="type" unique="false">
						<property type="Property_type_sysadmin_3509171413" typeName="type">
							<description></description>
							<dataType>
								<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
							</dataType>
						</property>
					</slot>
					<slot id="a7wx2u" name="TargetedVehicleFeatureElement" unique="false">
						<property type="Property_TargetedVehicleFeatureElement_sysadmin_3548116919" typeName="TargetedVehicleFeatureElement">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object id="Object_VehicleFeature_user_3400133821" type="Object_VehicleFeature_user_3400133821" typeName="VehicleFeature">
									<description>A VehicleFeature is a functional or non-functional characteristic, constraint or property that can be present or not in a vehicle product line on the level of the complete system, i.e. vehicle.</description>
									<superType>
										<object id="Object_Feature_user_3399887361" type="Object_Feature_user_3399887361" typeName="Feature">
											<description>Feature is a (non)functional characteristic, constraint or property that can be present or not in a (vehicle) product line.</description>
											<slot id="aeer14" name="Name" unique="false">
												<property href="#Property_2ECUName_user_3310972947"></property>
											</slot>
											<slot id="afer4z" name="Cardinality" unique="false">
												<property type="Property_Cardinality_user_3399886960" typeName="Cardinality">
													<description>Specifies the Feature's cardinality stating how often this feature may be selected during configuration.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string>0..1</string>
													</defaultValue>
													<widget>Overridable List</widget>
													<listValues>
														<string>1</string>
														<string>0..1</string>
														<string>0..N</string>
														<string>1..N</string>
														<string>0</string>
													</listValues>
												</property>
											</slot>
											<slot id="ang3ks" name="ActualBindingTime" unique="false">
												<property id="Property_BindingTimeKind_user_3399886739" type="Property_BindingTimeKind_user_3399886739" typeName="BindingTimeKind">
													<description>BindingTimeKind represents the set of possible binding times.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string>SystemDesignTime</string>
													</defaultValue>
													<widget>Fixed List</widget>
													<listValues>
														<string>SystemDesignTime</string>
														<string>CodeGenerationTime</string>
														<string>PreCompileTime</string>
														<string>LinkTime</string>
														<string>PostBuild</string>
														<string>Runtime</string>
													</listValues>
												</property>
											</slot>
											<slot id="apghsi" name="RequiredBindingTime" unique="false">
												<property type="Property_RequiredBindingTime_user_3461233519" typeName="RequiredBindingTime">
													<description></description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<widget>Fixed List</widget>
													<listValues>
														<string></string>
														<string>SystemDesignTime</string>
														<string>CodeGenerationTime</string>
														<string>PreCompileTime</string>
														<string>LinkTime</string>
														<string>PostBuild</string>
														<string>Runtime</string>
													</listValues>
												</property>
											</slot>
											<slot id="aroldd" name="FeatureParameter" unique="false">
												<property type="Property_FeatureParameter_sysadmin_3537005208" typeName="FeatureParameter">
													<description></description>
													<dataType>
														<object href="#Object__EADatatype_sysadmin_3536996100"></object>
													</dataType>
													<dataTypeSubtype>
														<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_EABoolean_sysadmin_3536996172"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_EANumerical_sysadmin_3536996437"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_EAString_sysadmin_3536996221"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_Enumeration_sysadmin_3536996326"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
													</dataTypeSubtype>
												</property>
											</slot>
											<slot id="aier25" name="Description" unique="false">
												<property href="#Property_2Description_user_3310902697"></property>
											</slot>
											<identProp slotID="aeer14"></identProp>
											<objectSymbol offset="59,19" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="210,68 209.315,72.5922 207.364,76.4853 204.444,79.0866 201,80 68.75,80 65.3058,79.0866 62.386,76.4853 60.4351,72.5922 59.75,68 59.75,31.75 60.4351,27.1578 62.386,23.2647 65.3058,20.6634 68.75,19.75 201,19.75 204.444,20.6634 207.364,23.2647 209.315,27.1578 210,31.75 210,68" targetPointX="134" targetPointY="49" usesGrid="false"></defaultConnectable>
												<svg baseProfile="tiny" height="83" version="1.2" width="213" xmlns="http://www.w3.org/2000/svg">
													<defs>
														<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.633333" x2="1.07333" y1="0.5" y2="1.2125">
															<stop offset="0" stop-color="rgb(240,240,240)"></stop>
															<stop offset="1" stop-color="rgb(170,170,170)"></stop>
														</linearGradient>
													</defs>
													<rect fill="rgb(170,170,170)" height="60" rx="9" ry="12" stroke="rgb(170,170,170)" stroke-width="1" width="150" x="63" y="23">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<rect fill="url(#gradient1)" height="60" rx="9" ry="12" stroke="rgb(128,128,128)" stroke-width="1" width="150" x="60" y="20">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="2" sym:wordWrap="true" text-anchor="middle" width="150" x="60" y="20">
														PropertyTextSource:aeer14
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="148" x="60" y="20">
														PropertyTextSource:afer4z
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<rect fill="none" height="62" rx="9" ry="12" stroke="rgb(0,0,0)" stroke-width="2" width="152" x="59" y="19">
														<metaInfo xmlns="http://www.metacase.com/symbol">
															<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if not (~Child; or containers;) then 'T' endif</displayCondition>
														</metaInfo>
													</rect>
												</svg>
											</objectSymbol>
										</object>
									</superType>
									<slot id="ajpbw7" name="IsCustomerVisible" unique="false">
										<property type="Property_IsCustomerVisible_user_3400133691" typeName="IsCustomerVisible">
											<description>This attribute states whether the VehicleFeature is customer visible (in contrast to a VehicleFeature that is e.g. technically driven).</description>
											<dataType>
												<simpleType>Boolean</simpleType>
											</dataType>
											<defaultValue></defaultValue>
										</property>
									</slot>
									<slot id="akpbyx" name="IsDesignVariabilityRationale" unique="false">
										<property type="Property_IsDesignVariabilityRationale_user_3400133740" typeName="IsDesignVariabilityRationale">
											<description>A VehicleFeature marked as a design variability rationale captures a variant showing up on a concrete artifact level that needs to be modeled on the VehicleLevel as well, in order to be directly available for immediate configuration on vehicle level.</description>
											<dataType>
												<simpleType>Boolean</simpleType>
											</dataType>
											<defaultValue></defaultValue>
										</property>
									</slot>
									<slot id="alpc2x" name="IsRemoved" unique="false">
										<property type="Property_IsRemoved_user_3400133812" typeName="IsRemoved">
											<description>This attribute describes if the VehicleFeature is removed (but kept in the database for tracking of evolution, which is required by the multi-level concept).</description>
											<dataType>
												<simpleType>Boolean</simpleType>
											</dataType>
											<defaultValue></defaultValue>
										</property>
									</slot>
									<slot id="am5tj3" name="DeviationAttributeSet" unique="false">
										<property type="Property_DeviationAttributeSet_user_3401358175" typeName="DeviationAttributeSet">
											<description></description>
											<dataType>
												<object type="Object_DeviationAttributeSet_user_3401358127" typeName="DeviationAttributeSet">
													<description></description>
													<slot id="ds5t2u" name="Name" unique="false">
														<property type="Property_AttrubuteSetName_user_3401357883" typeName="AttrubuteSet">
															<description></description>
															<dataType>
																<simpleType>String</simpleType>
															</dataType>
															<defaultValue>
																<string></string>
															</defaultValue>
															<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
															<widget>Input Field</widget>
														</property>
													</slot>
													<slot id="dt5t3p" name="AllowChangeAttribute" unique="false">
														<property id="Property_DeviationPermissionKind_user_3401355220" type="Property_DeviationPermissionKind_user_3401355220" typeName="DeviationPermissionKind">
															<description>The DeviationPermissionKind is an enumeration with enumeration literals defining possible values
for deviation attributes.</description>
															<dataType>
																<simpleType>String</simpleType>
															</dataType>
															<defaultValue>
																<string>yes</string>
															</defaultValue>
															<widget>Fixed List</widget>
															<listValues>
																<string>no</string>
																<string>append</string>
																<string>subset</string>
																<string>subtree</string>
																<string>widen</string>
																<string>yes</string>
															</listValues>
														</property>
													</slot>
													<slot id="du5t5c" name="AllowChangeCardinality" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="dv5t6f" name="AllowChangeDescription" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="dw5t7a" name="AllowChangeName" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="dx5t8a" name="AllowMove" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="dy5t97" name="AllowReduction" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="dz5tac" name="AllowRefinement" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="e05tbe" name="AllowRegrouping" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<slot id="e15tcb" name="AllowRemoval" unique="false">
														<property href="#Property_DeviationPermissionKind_user_3401355220"></property>
													</slot>
													<identProp slotID="ds5t2u"></identProp>
												</object>
											</dataType>
										</property>
									</slot>
									<identProp slotID="aeer14"></identProp>
									<objectSymbol offset="60,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
										<defaultConnectable isSticky="true" points="210,74 209.239,76.2961 207.071,78.2426 203.827,79.5433 200,80 69.75,80 65.9232,79.5433 62.6789,78.2426 60.5112,76.2961 59.75,74 59.75,25.75 60.5112,23.4539 62.6789,21.5074 65.9232,20.2067 69.75,19.75 200,19.75 203.827,20.2067 207.071,21.5074 209.239,23.4539 210,25.75 210,74" targetPointX="134" targetPointY="49" usesGrid="false"></defaultConnectable>
										<svg baseProfile="tiny" height="83" version="1.2" width="213" xmlns="http://www.w3.org/2000/svg">
											<defs>
												<radialGradient cx="0.486667" cy="0.516667" gradientUnits="objectBoundingBox" id="gradient1" r="0.695423" sym:correctGamma="true" sym:fillType="PathFill">
													<stop offset="0" stop-color="rgb(255,255,255)"></stop>
													<stop offset="0.808846" stop-color="rgb(212,235,212)"></stop>
													<stop offset="1" stop-color="rgb(169,225,169)"></stop>
												</radialGradient>
											</defs>
											<rect fill="rgb(0,128,128)" height="60" rx="10" ry="6" stroke="rgb(0,128,128)" stroke-width="1" width="150" x="63" y="23">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</rect>
											<rect fill="url(#gradient1)" height="60" rx="10" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="150" x="60" y="20">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</rect>
											<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="150" x="60" y="20">
												PropertyTextSource:aeer14
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
											<g fill="none" stroke="none" stroke-width="1" sym:height="21" sym:width="30" sym:x="6.2e1" sym:y="2.2e1">
												<ellipse cx="77" cy="32.5" fill="rgb(0,128,128)" rx="15" ry="10.5" stroke="rgb(0,128,128)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
													<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
												</ellipse>
												<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="16" font-style="normal" font-weight="normal" height="17" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="28" x="63" y="25">
													VF
													<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
												</textArea>
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</g>
											<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="148" x="60" y="20">
												ReportTextSource:if :Cardinality &lt;&gt; '1' then 
	:Cardinality 
endif
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
										</svg>
									</objectSymbol>
								</object>
							</contentsDataType>
						</property>
					</slot>
					<slot id="aazgct" name="functionTarget" unique="false">
						<property id="Property_functionTarget_sysadmin_3548176070" type="Property_functionTarget_sysadmin_3548176070" typeName="functionTarget">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object href="#Object_FunctionPrototype_sysadmin_3548175745"></object>
							</contentsDataType>
							<contentsDataTypeSubtype>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							</contentsDataTypeSubtype>
							<contentsDataTypeSubtype>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							</contentsDataTypeSubtype>
						</property>
					</slot>
					<slot id="a8wx9w" name="hwTarget" unique="false">
						<property id="Property_HW_Target_sysadmin_3548117047" type="Property_HW_Target_sysadmin_3548117047" typeName="hwTarget">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							</contentsDataType>
						</property>
					</slot>
					<slot id="a9wxd9" name="errorModelTarget" unique="false">
						<property type="Property_ErrorModelTarget_sysadmin_3548117107" typeName="ErrorModelTarget">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object id="Object_InternalFault_sysadmin_3509186672" type="Object_InternalFault_sysadmin_3509186672" typeName="ErrorModelPrototype">
									<description>An ErrorModelPrototype represents an occurrence of the ErrorModelType that types it.</description>
									<slot id="he980n" name="__UUID" unique="false">
										<property href="#Property___UUID_sysadmin_3604668056"></property>
									</slot>
									<slot id="h9k3in" name="Short name" unique="false">
										<property href="#Property_FaultName_sysadmin_3509186663"></property>
									</slot>
									<slot id="hf980c" name="Name" unique="false">
										<property href="#Property_Name_sysadmin_3536998876"></property>
									</slot>
									<slot id="hak3ix" name="Description" unique="false">
										<property href="#Property_2Description_user_3310902697"></property>
									</slot>
									<slot id="hczmoa" name="functionTarget" unique="false">
										<property href="#Property_functionTarget_sysadmin_3548176070"></property>
									</slot>
									<slot id="hdzmpp" name="hwTarget" unique="false">
										<property href="#Property_HW_Target_sysadmin_3548117047"></property>
									</slot>
									<slot id="hbfj73" name="Has error?" unique="false">
										<property href="#Property_Has_error__sysadmin_3546871117"></property>
									</slot>
									<identReport>if :Name; then :Name; else :Short name; endif</identReport>
									<objectSymbol offset="70,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
										<defaultConnectable isSticky="true" points="70,50 240,50 240,170 70,170 70,50" targetPointX="155" targetPointY="110" usesGrid="true"></defaultConnectable>
										<svg baseProfile="tiny" height="170" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
											<defs>
												<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.47647" x2="0.47647" y1="1.00833" y2="0">
													<stop offset="0" stop-color="rgb(255,255,255)"></stop>
													<stop offset="0.893404" stop-color="rgb(255,255,255)"></stop>
													<stop offset="1" stop-color="rgb(255,128,128)"></stop>
												</linearGradient>
											</defs>
											<rect fill="none" height="120" rx="4" ry="6" stroke="rgb(0,0,255)" stroke-width="6" width="170" x="70" y="50">
												<metaInfo xmlns="http://www.metacase.com/symbol">
													<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :Show warnings;1 then
	_sym_trace()
endif</displayCondition>
												</metaInfo>
											</rect>
											<rect fill="url(#gradient1)" height="120" rx="4" ry="6" stroke="rgb(255,0,0)" stroke-width="0" width="170" x="70" y="50">
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</rect>
											<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="170" x="70" y="50">
												ReportTextSource:if :Has error?; then 'Error ' endif
newline
subreport '_type def' run
												<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
											</textArea>
											<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
												<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,50" startDistance="0">
													<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
												</pathLayout>
												<generatorNPSource>_symErrInPorts()</generatorNPSource>
												<librarySubsymbolSource>InFlowPort_subsymbol</librarySubsymbolSource>
												<metaInfo></metaInfo>
											</template>
											<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="true" revealConnectables="true" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
												<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="240,50" startDistance="0">
													<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
												</pathLayout>
												<generatorNPSource>_symErrOutPorts()</generatorNPSource>
												<librarySubsymbolSource>InFlowPort_subsymbol</librarySubsymbolSource>
												<metaInfo></metaInfo>
											</template>
											<template aligmentPointX="0.5" aligmentPointY="1" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
												<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,50" startDistance="0">
													<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="40"></layoutPath>
												</pathLayout>
												<generatorNPSource>_symErrInPorts()</generatorNPSource>
												<librarySubsymbolSource>id_left_subsymbol</librarySubsymbolSource>
												<metaInfo></metaInfo>
											</template>
											<template aligmentPointX="0.5" aligmentPointY="0" isMovable="true" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="160" subsymbolExtentY="25" useTargetpoint="true" width="1" xmlns="http://www.metacase.com/symbol">
												<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="240,50" startDistance="0">
													<layoutPath allocation="start" layoutDistance="20" lineSegmentTable="true" points="0,0 0,110" startDistance="39"></layoutPath>
												</pathLayout>
												<generatorNPSource>_symErrOutPorts()</generatorNPSource>
												<librarySubsymbolSource>id_right_subsymbol</librarySubsymbolSource>
												<metaInfo></metaInfo>
											</template>
										</svg>
									</objectSymbol>
								</object>
							</contentsDataType>
						</property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="26,29" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="300,134 298.782,137.827 295.314,141.071 290.123,143.239 284,144 43.75,144 37.6271,143.239 32.4363,141.071 28.9679,137.827 27.75,134 27.75,39.75 28.9679,35.9232 32.4363,32.6789 37.6271,30.5112 43.75,29.75 284,29.75 290.123,30.5112 295.314,32.6789 298.782,35.9232 300,39.75 300,134" targetPointX="163.875" targetPointY="86.875" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="144" version="1.2" width="300" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(170,170,170)" height="114" rx="16" ry="10" stroke="rgb(170,170,170)" stroke-width="2" width="266" x="26" y="29">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<rect fill="rgb(255,255,255)" height="114" rx="16" ry="10" stroke="rgb(64,64,64)" stroke-width="1" width="272" x="28" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="266" x="32" y="30">
								ReportTextSource:'&lt;BehaviorConstraintPrototype&gt;' newline
id ' : '
if :type; then
	:type
endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="268" x="30" y="30">
								ReportTextSource:newline; newline; newline
if :functionTarget; then
	'functionTarget' ' := { ' do :functionTarget { id } ' } ' newline
else
	if :hwTarget; then
		'hardwareTarget' ' := { ' do :hwTarget { id } ' } ' newline
	else
		if :errorModelTarget; then
			'errorModelTarget' ' := { ' do :errorModelTarget { id } ' } ' 
		else
			'Note! No structural binding defined for this behavior'
		endif
	newline
	endif
endif
'instantiatedWithParameter' ' := [ '
do ~()&gt;BehaviorConstraintBindingAttribute { id	'; ' }
do ~()&gt;BehaviorConstraintBindingEventOccurrence { id	'; '}
']'
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<g fill="none" stroke="none" sym:height="12" sym:width="22" sym:x="3.4e1" sym:y="3.4e1">
								<rect fill="none" height="12" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="0" width="21.4832" x="34" y="34">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</rect>
								<ellipse cx="44.8396" cy="39.8824" fill="rgb(0,128,128)" rx="9.35805" ry="4.94115" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</ellipse>
								<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="10" font-style="normal" font-weight="normal" height="11.4476" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="21.7132" x="34.2868" y="34.4706">
									B
									<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
								</textArea>
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</g>
						</svg>
					</objectSymbol>
					<icon offset="56,80" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="125" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
							<rect fill="none" height="45" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="54" x="56" y="80"></rect>
							<ellipse cx="83.2647" cy="102" fill="rgb(0,128,128)" rx="25.2647" ry="21" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
							<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="48" font-style="normal" font-weight="bold" height="42" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="45.2985" x="61" y="81">B</textArea>
						</svg>
					</icon>
				</object>
				<relationship id="Relationship_BehaviorConstraintBindingAttribute_sysadmin_3524471048" type="Relationship_BehaviorConstraintBindingAttribute_sysadmin_3524471048" typeName="BehaviorConstraintBindingAttribute">
					<description></description>
					<superType>
						<relationship id="Relationship_BehaviorConstraintBindingParameter_sysadmin_3524468851" type="Relationship_BehaviorConstraintBindingParameter_sysadmin_3524468851" typeName="_BehaviorConstraintBindingParameter">
							<description></description>
							<superType>
								<relationship id="Relationship_Identifiable_sysadmin_3509356101" type="Relationship_Identifiable_sysadmin_3509356101" typeName="_Identifiable">
									<description></description>
									<slot id="ab68br" name="Short name" unique="false">
										<property href="#Property_Name_sysadmin_3536998876"></property>
									</slot>
									<identProp slotID="ab68br"></identProp>
								</relationship>
							</superType>
							<slot id="a4wwbq" name="bindingThroughFlowConnector" unique="false">
								<property href="#Property_bindingThroughFunctionFlowConnector_sysadmin_3548116432"></property>
							</slot>
							<slot id="a5wwle" name="bindingThroughClientServerConnector" unique="false">
								<property href="#Property_bindingThroughClientServerConnector_sysadmin_3548116606"></property>
							</slot>
							<slot id="a6wwib" name="bindingThroughPowerConnector" unique="false">
								<property href="#Property_bindingThroughPowerConnector_sysadmin_3548116550"></property>
							</slot>
							<slot id="a7wvjm" name="bindingThroughClampConnector" unique="false">
								<property href="#Property_bindingThroughClampConnector_sysadmin_3548115927"></property>
							</slot>
							<slot id="a8wvgt" name="bindingThroughHardwareConnector" unique="false">
								<property type="Property_bindingThroughHardwareConnector_sysadmin_3548115874" typeName="bindingThroughHardwareConnector">
									<description></description>
									<dataType>
										<relationship href="#Relationship_ADLHwConnector_user_3400146152"></relationship>
									</dataType>
								</property>
							</slot>
							<slot id="a9wv3t" name="bindingThroughLogicalBus" unique="false">
								<property type="Property_bindingThroughLogicalBus_sysadmin_3548115633" typeName="bindingThroughLogicalBus">
									<description></description>
									<dataType>
										<object href="#Object_LogicalBus_user_3460790250"></object>
									</dataType>
								</property>
							</slot>
							<identProp slotID="ab68br"></identProp>
							<icon offset="83,114" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="164" version="1.2" width="163" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="guttman adii" font-size="48" font-style="italic" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="83" y="114">{x..}</textArea>
								</svg>
							</icon>
						</relationship>
					</superType>
					<identProp slotID="ab68br"></identProp>
					<relationshipSymbol offset="90,42" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="184,42 204,42 204,62 184,62 184,42" targetPointX="194" targetPointY="52" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="105" version="1.2" width="300" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="42" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="210" x="90" y="63">
								ReportTextSource:id
newline
if :bindingThroughFlowConnector; then
	'bindingThroughFlowConnector' 
	':= { '
		do :bindingThroughFlowConnector
		{	
			id 
		}
	' }'
else
	if :bindingThroughClientServerConnector; then
		'bindingThroughClientServerConnector' 
		':= { '
		do :bindingThroughClientServerConnector {	id }
		' }'
	else
		if :bindingThroughPowerConnector; then
			'bindingThroughPowerConnector' 
			':= { '
			do :bindingThroughPowerConnector	{ id 	}
			' }'
		else
			if :bindingThroughHardwareConnector; then
				'bindingThroughHardwareConnector' 
				':= { '
				do :bindingThroughHardwareConnector	{	id }
				' }'
			else
				'Note! No structural binding defined for this binding parameter'
			endif
		endif 
	endif
endif



								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="magneto" font-size="20" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="rgb(0,0,0)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="20" x="184" y="42">
								X
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="81,91" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="112" version="1.2" width="119.416" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="none" stroke-width="1" sym:height="21" sym:width="38.4161" sym:x="8.1e1" sym:y="9.1e1">
								<g fill="none" stroke="none" stroke-width="1" sym:height="11" sym:width="13.4161" sym:x="8.1e1" sym:y="1.01e2">
									<rect fill="none" height="11" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="81" y="101"></rect>
									<ellipse cx="87.6096" cy="106.804" fill="rgb(0,128,128)" rx="4.9544" ry="4.2353" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="9.0793" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="81.3204" y="101.784">B</textArea>
								</g>
								<g fill="none" stroke="none" stroke-width="1" sym:height="11" sym:width="13.4161" sym:x="1.06e2" sym:y="1.01e2">
									<rect fill="none" height="11" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="106" y="101"></rect>
									<ellipse cx="112.61" cy="106.804" fill="rgb(0,128,128)" rx="4.9544" ry="4.2353" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="9.0793" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="106.32" y="101.784">B</textArea>
								</g>
								<line stroke="rgb(0,0,0)" stroke-width="1" x1="94" x2="106" y1="108" y2="108"></line>
								<textArea display-align="center" fill="rgb(0,0,0)" font-family="magneto" font-size="20" font-style="normal" font-weight="normal" height="17" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="17" x="92" y="91">X</textArea>
							</g>
						</svg>
					</icon>
				</relationship>
				<relationship id="Relationship_BehaviorConstraintBindingEventOccurrence_sysadmin_3524471130" type="Relationship_BehaviorConstraintBindingEventOccurrence_sysadmin_3524471130" typeName="BehaviorConstraintBindingEvent">
					<description></description>
					<superType>
						<relationship href="#Relationship_BehaviorConstraintBindingParameter_sysadmin_3524468851"></relationship>
					</superType>
					<identProp slotID="ab68br"></identProp>
					<relationshipSymbol offset="60,62" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="158,62 182,62 182,84 158,84 158,62" targetPointX="170" targetPointY="73" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="130" version="1.2" width="280" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="22" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="24" x="158" y="62">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="47" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="60" y="83">
								ReportTextSource:id
newline
if :bindingThroughFunctionConnector; then
	'bindingThroughFunctionConnector' 
	' := { '
		 id 
	' }'
else
	'Note! No structural binding defined for this binding parameter'
endif 



								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<polygon fill="rgb(128,0,0)" points="173.188,65 165.706,73.1111 169.447,73.1111 165.706,79.6 175.059,71.4889 171.318,71.4889" stroke="rgb(128,0,0)" stroke-width="1">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polygon>
						</svg>
					</relationshipSymbol>
					<icon offset="78,90" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="108" version="1.2" width="116.416" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="none" stroke-width="1" sym:height="18" sym:width="38.4161" sym:x="7.8e1" sym:y="9.0e1">
								<polygon fill="rgb(128,0,0)" points="100.188,90 92.7059,98.1111 96.4471,98.1111 92.7059,104.6 102.059,96.4889 98.3177,96.4889" stroke="rgb(128,0,0)" stroke-width="1"></polygon>
								<g fill="none" stroke="none" stroke-width="1" sym:height="12.5714" sym:width="13.4161" sym:x="7.8e1" sym:y="9.542857e1">
									<rect fill="none" height="12.5714" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="78" y="95.4286"></rect>
									<ellipse cx="84.6096" cy="102.062" fill="rgb(0,128,128)" rx="4.9544" ry="4.84035" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="10.3764" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="78.3204" y="96.3249">B</textArea>
								</g>
								<g fill="none" stroke="none" stroke-width="1" sym:height="12.5714" sym:width="13.4161" sym:x="1.03e2" sym:y="9.542857e1">
									<rect fill="none" height="12.5714" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="13" x="103" y="95.4286"></rect>
									<ellipse cx="109.61" cy="102.062" fill="rgb(0,128,128)" rx="4.9544" ry="4.84035" stroke="none" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="9" font-style="normal" font-weight="normal" height="10.3764" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="13.0957" x="103.32" y="96.3249">B</textArea>
								</g>
								<line stroke="rgb(0,0,0)" stroke-width="1" x1="91" x2="103" y1="103.429" y2="103.429"></line>
							</g>
						</svg>
					</icon>
				</relationship>
				<role id="Role_binding_behavior_from_sysadmin_3524477459" type="Role_binding_behavior_from_sysadmin_3524477459" typeName="behaviorEvent_from">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_binding_behavior_to_sysadmin_3524477482" type="Role_binding_behavior_to_sysadmin_3524477482" typeName="behaviorEvent_to">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_binding_behaviorAttribute_from_sysadmin_3524477551" type="Role_binding_behaviorAttribute_from_sysadmin_3524477551" typeName="behaviorAttribute_from">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
					</roleSymbol>
				</role>
				<role id="Role_binding_behaviorAttribute_to_sysadmin_3524477562" type="Role_binding_behaviorAttribute_to_sysadmin_3524477562" typeName="behaviorAttribute_to">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="140,76 150,80 140,84" stroke="rgb(0,0,0)" stroke-width="1">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</roleSymbol>
				</role>
				<binding>
					<relationship href="#Relationship_BehaviorConstraintBindingAttribute_sysadmin_3524471048"></relationship>
					<connection>
						<cardinality start="1" stop="N"></cardinality>
						<role href="#Role_binding_behaviorAttribute_from_sysadmin_3524477551"></role>
						<object href="#Object_BehaviorConstraintPrototype_sysadmin_3508101353"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="N"></cardinality>
						<role href="#Role_binding_behaviorAttribute_to_sysadmin_3524477562"></role>
						<object href="#Object_BehaviorConstraintPrototype_sysadmin_3508101353"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_BehaviorConstraintBindingEventOccurrence_sysadmin_3524471130"></relationship>
					<connection>
						<cardinality start="1" stop="N"></cardinality>
						<role href="#Role_binding_behavior_from_sysadmin_3524477459"></role>
						<object href="#Object_BehaviorConstraintPrototype_sysadmin_3508101353"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="N"></cardinality>
						<role href="#Role_binding_behavior_to_sysadmin_3524477482"></role>
						<object href="#Object_BehaviorConstraintPrototype_sysadmin_3508101353"></object>
					</connection>
				</binding>
				<explosion>
					<object href="#Object_BehaviorConstraintPrototype_sysadmin_3508101353"></object>
					<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
					<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
					<graph id="Graph_FeatureModel_user_3399887714" type="Graph_FeatureModel_user_3399887714" typeName="VehicleFeatureModel">
						<description>EAST-ADL version M2.1.12
FeatureModel describes the features and their dependencies.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="a2es49" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="a99auk" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="a7g4zd" name="FeatureConstraints" unique="false">
							<property type="Property_FeatureConstraints_user_3461225244" typeName="FeatureConstraints">
								<description>Captures a constraint on the containing feature model's configuration which is too complex to be 
expressed by way of a FeatureLink. </description>
								<dataType>
									<simpleType>Collection</simpleType>
								</dataType>
								<contentsDataType>
									<object type="Object_FeatureConstraint_user_3461225165" typeName="FeatureConstraint">
										<description>Captures a constraint on the containing feature model's configuration which is too complex to be expressed by way of a FeatureLink.</description>
										<slot id="f3jxyi" name="__UUID" unique="false">
											<property href="#Property___UUID_sysadmin_3604668056"></property>
										</slot>
										<slot id="f1g4na" name="Short name" unique="false">
											<property type="Property_Constraint_user_3401079900" typeName="Constraint name">
												<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
												<dataType>
													<simpleType>String</simpleType>
												</dataType>
												<defaultValue>
													<string></string>
												</defaultValue>
												<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
												<widget>Input Field</widget>
											</property>
										</slot>
										<slot id="f4jxyq" name="Name" unique="false">
											<property href="#Property_Name_sysadmin_3536998876"></property>
										</slot>
										<slot id="f2g4rc" name="Criterion" unique="false">
											<property id="Property_Criterion_user_3461225100" type="Property_Criterion_user_3461225100" typeName="Criterion">
												<description>The actual constraint.</description>
												<dataType>
													<simpleType>String</simpleType>
												</dataType>
												<defaultValue>
													<string></string>
												</defaultValue>
												<widget>Input Field</widget>
											</property>
										</slot>
										<identProp slotID="f1g4na"></identProp>
									</object>
								</contentsDataType>
							</property>
						</slot>
						<slot id="a4es8v" name="Description" unique="false">
							<property href="#Property_Model_description_user_3399887679"></property>
						</slot>
						<identReport>_name()</identReport>
						<object href="#Object_Feature_user_3399887361"></object>
						<object href="#Object_VehicleFeature_user_3400133821"></object>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<object href="#Object_EAType_sysadmin_3541158109"></object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_Joker_user_3399887441"></object>
						<relationship id="Relationship_FeatureTree_user_3399888266" type="Relationship_FeatureTree_user_3399888266" typeName="FeatureComposition">
							<description>FeatureComposition specifies how features are been composed from other features.</description>
							<slot id="a0dbmf" name="Feature composition cardinality" unique="false">
								<property type="Property_Feature_composition_cardinality_sysadmin_3545980171" typeName="Feature composition cardinality">
									<description>Specifies the  feature composition cardinality stating how many features may be selected.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string>1</string>
									</defaultValue>
									<widget>Overridable List</widget>
									<listValues>
										<string>1</string>
										<string>1..N</string>
									</listValues>
								</property>
							</slot>
							<identProp slotID="a0dbmf"></identProp>
							<relationshipSymbol offset="50,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="90" targetPointY="70" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="80" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="80" x="50" y="50">
										ReportTextSource:if :Feature composition cardinality; &lt;&gt; '1' then
	:Feature composition cardinality;
else
	_symCheckFeatureCardinality()
endif
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="~=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do ~Child {
	'T'
}</displayCondition>
										</metaInfo>
									</textArea>
									<ellipse cx="90" cy="60" fill="rgb(0,0,0)" rx="20" ry="20" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="5.95919e1" sym:sweepAngle="5.97419e1">
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="=~" matchString="BCC*" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :Feature composition cardinality; &lt;&gt; '1' then
	'B'
	do ~Child {
		'C'
	}
endif</displayCondition>
										</metaInfo>
									</ellipse>
									<ellipse cx="90.8072" cy="65" fill="none" rx="11.8072" ry="5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="3.25368e0" sym:sweepAngle="1.73902e2">
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="=~" matchString="WCC*" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :Feature composition cardinality; = '1' then
	'W'
	do ~Child {
		'C'
	}
endif</displayCondition>
										</metaInfo>
									</ellipse>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="50" y="50">
										ReportTextSource:_Cycle()
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="120,30" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="70" version="1.2" width="160" xmlns="http://www.w3.org/2000/svg">
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="140" x2="140" y1="30" y2="70"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="140" x2="120" y1="50" y2="70"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="140" x2="160" y1="50" y2="70"></line>
								</svg>
							</icon>
						</relationship>
						<relationship id="Relationship_FeatureLink_user_3399887956" type="Relationship_FeatureLink_user_3399887956" typeName="FeatureLink">
							<description>The FeatureLink is a relationship between Features that may constrain the selection of Features involved in the relationship.</description>
							<slot id="a3gj2y" name="CustomType" unique="false">
								<property type="Property_CustomType_user_3461234381" typeName="CustomType">
									<description>The custom type of this FeatureLink identified by a String value. This attribute's value is ignored if attribute 'kind' is set to some other value than 'custom'.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="a4gjfh" name="Kind" unique="false">
								<property id="Property_VariabilityDependencyKind_user_3461234605" type="Property_VariabilityDependencyKind_user_3461234605" typeName="VariabilityDependencyKind">
									<description>The kind determines the precise semantics of the relation between the FeatureLink's start 
and end feature.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string>needs</string>
									</defaultValue>
									<widget>Fixed List</widget>
									<listValues>
										<string>needs</string>
										<string>optionalAlternative</string>
										<string>mandatoryAlternative</string>
										<string>suggests</string>
										<string>impedes</string>
										<string>custom</string>
									</listValues>
								</property>
							</slot>
							<identProp slotID="a3gj2y"></identProp>
							<relationshipSymbol offset="55,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="110" targetPointY="60" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="79" version="1.2" width="165" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="17" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="110" x="55" y="62">
										ReportTextSource:_Cycle()
if :Kind ='custom' then 
	:CustomType
else
	:Kind
endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<ellipse cx="110.05" cy="60.05" fill="rgb(0,0,0)" rx="0.0499992" ry="0.0499992" stroke="rgb(0,0,0)" stroke-width="6" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
								</svg>
							</relationshipSymbol>
							<icon offset="210,50" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="69" version="1.2" width="232" xmlns="http://www.w3.org/2000/svg">
									<g fill="none" stroke="rgb(0,0,0)" sym:height="19" sym:width="22" sym:x="2.1e2" sym:y="5.0e1">
										<polygon fill="rgb(0,0,0)" points="232,50 210,59.5 221,59.5 221,69" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
										<line stroke="rgb(0,0,0)" stroke-width="2" x1="221" x2="210" y1="59.5" y2="69"></line>
									</g>
								</svg>
							</icon>
						</relationship>
						<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
						<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<role href="#Role_2FunctionalDevice_user_3311233351"></role>
						<role href="#Role_Base_Realization_user_3400739113"></role>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<role href="#Role_Comment_user_3460793566"></role>
						<role id="Role_End_user_3399888968" type="Role_End_user_3399888968" typeName="End">
							<description>The target [client] Feature of the dependency.</description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(96,96,96)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="86" version="1.2" width="149" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(0,0,0)" points="149,80 134,74 139,80 134,86" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
								</svg>
							</roleSymbol>
						</role>
						<role id="Role_Start_user_3399888943" type="Role_Start_user_3399888943" typeName="Start">
							<description>The source [supplier] Feature of the relationship.</description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(96,96,96)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="86" version="1.2" width="149" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(0,0,0)" points="149,80 134,74 139,80 134,86" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do &gt;FeatureLink {
if :Kind = 'optionalAlternative'; then 'T' endif
if :Kind = 'mandatoryAlternative'; then 'T' endif
if :Kind = 'impedes'; then 'T' endif
}</displayCondition>
										</metaInfo>
									</polygon>
								</svg>
							</roleSymbol>
						</role>
						<role id="Role_Children_user_3399888325" type="Role_Children_user_3399888325" typeName="Child">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="145" cy="80" fill="rgb(0,0,0)" rx="5" ry="5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<ellipse cx="145" cy="80" fill="rgb(255,255,255)" rx="5" ry="5" stroke="rgb(0,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do .() {
	if :Cardinality =~ '0*' then 'T' endif
}</displayCondition>
										</metaInfo>
									</ellipse>
								</svg>
							</roleSymbol>
						</role>
						<role id="Role_Parent_user_3399888294" type="Role_Parent_user_3399888294" typeName="Parent">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
							</roleSymbol>
						</role>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_FeatureTree_user_3399888266"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Parent_user_3399888294"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="N"></cardinality>
								<role href="#Role_Children_user_3399888325"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_FeatureLink_user_3399887956"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Start_user_3399888943"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="N"></cardinality>
								<role href="#Role_End_user_3399888968"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_2FunctionalDevice_user_3311233351"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Base_Realization_user_3400739113"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Base_Realization_user_3400739113"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_2FunctionalDevice_user_3311233351"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_Feature_user_3399887361"></object>
							</connection>
						</binding>
						<explosion>
							<object href="#Object_Feature_user_3399887361"></object>
							<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
						</explosion>
						<explosion>
							<object href="#Object_VehicleFeature_user_3400133821"></object>
							<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
						</explosion>
						<decomposition>
							<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_EAType_sysadmin_3541158109"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_Feature_user_3399887361"></object>
							<graph href="#Graph_FeatureModel_user_3399887714"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_VehicleFeature_user_3400133821"></object>
							<graph href="#Graph_FeatureModel_user_3399887714"></graph>
						</decomposition>
						<report>Report 'Trace all features'
/* reports all features of EAST-ADL and their links to other elements */
_translators()
$reported = ' '
'FEATURES AND THEIR RELATIONSHIPS:' newline newline
do graphs {
	foreach .(*Feature) {
		if not $reported =~ oid%wildsp then
			variable 'reported' append oid ' ' close
			$objectType = type
			id ' &lt;' $objectType '&gt;' newline
			do :Description {id newline}
			do graphs {
				foreach .(*Feature) where oid = oid;2 {
					$graphType = type;1
					'- in ' id;1 ' &lt;' $graphType '&gt;' newline
					do &gt;() {
						dowhile ~(^Comment).() {
							if oid &lt;&gt; oid;2 then
								$objectType = type
								'	- &lt;' type;1 '&gt; relationship with ' id ' &lt;' $objectType '&gt;' newline
							endif
						}
					}
				}
			}
			newline
		endif
	}
}
endreport</report>
						<report>_deviationAttributeSet()
'&lt;DEVIATION-ATTRIBUTE-SET UUID="' :__UUID '"&gt;' newline 
'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
if :Name &lt;&gt; '' then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
'&lt;ALLOW-CHANGE-ATTRIBUTE&gt;' :AllowChangeAttribute;%upper '&lt;/ALLOW-CHANGE-ATTRIBUTE&gt;' newline
'&lt;ALLOW-CHANGE-CARDINALITY&gt;' :AllowChangeCardinality;%upper '&lt;/ALLOW-CHANGE-CARDINALITY&gt;' newline
'&lt;ALLOW-CHANGE-DESCRIPTION&gt;' :AllowChangeDescription;%upper '&lt;/ALLOW-CHANGE-DESCRIPTION&gt;' newline
'&lt;ALLOW-CHANGE-NAME&gt;' :AllowChangeName;%upper '&lt;/ALLOW-CHANGE-NAME&gt;' newline
'&lt;ALLOW-MOVE&gt;' :AllowMove;%upper '&lt;/ALLOW-MOVE&gt;' newline
'&lt;ALLOW-REDUCTION&gt;' :AllowReduction;%upper '&lt;/ALLOW-REDUCTION&gt;' newline
'&lt;ALLOW-REFINEMENT&gt;' :AllowRefinement;%upper '&lt;/ALLOW-REFINEMENT&gt;' newline
'&lt;ALLOW-REGROUPING&gt;' :AllowRegrouping;%upper '&lt;/ALLOW-REGROUPING&gt;' newline
'&lt;ALLOW-REMOVAL&gt;' :AllowRemoval;%upper '&lt;/ALLOW-REMOVAL&gt;' newline
'&lt;/DEVIATION-ATTRIBUTE-SET&gt;' newline</report>
						<report>_elements()
'&lt;ELEMENTS&gt;'
_VehicleFeatureModel\ with\ package\ structure() newline
'&lt;/ELEMENTS&gt;' newline</report>
						<report>Report '_Feature'
/* Generating the Feature information */
if not $reported_elements =~ oid%wildsp then
	variable 'reported_elements' append oid ' ' close
	local 'feature' write type%minus%upper close
	local 'featureName' write :Short name; close
	local 'featureShortName' write @featureName%toShortName close
	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' @feature ' name: '
		if @nameValue &lt;&gt; '' then
		@nameValue ' (' @featureShortName ')'
	else
		@featureShortName
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' @feature ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' @featureShortName '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
	endif
	'&lt;TRACEABLE-SPECIFICATION-REFS&gt;&lt;/TRACEABLE-SPECIFICATION-REFS&gt;' newline
	'&lt;OWNED-RELATIONSHIPS&gt;&lt;/OWNED-RELATIONSHIPS&gt;' newline
	'&lt;CARDINALITY&gt;' :Cardinality; '&lt;/CARDINALITY&gt;' newline
	if :RequiredBindingTime; then
		'&lt;REQUIRED-BINDING-TIME&gt;' newline
		'&lt;SHORT-NAME&gt;' :RequiredBindingTime '&lt;/SHORT-NAME&gt;' newline
		'&lt;KIND&gt;' :RequiredBindingTime%upper '&lt;/KIND&gt;' newline
		'&lt;/REQUIRED-BINDING-TIME&gt;' newline
	endif
	'&lt;ACTUAL-BINDING-TIME&gt;' newline
	'&lt;SHORT-NAME&gt;' :ActualBindingTime '&lt;/SHORT-NAME&gt;' newline
	'&lt;KIND&gt;' :ActualBindingTime%upper '&lt;/KIND&gt;' newline
	'&lt;/ACTUAL-BINDING-TIME&gt;' newline

	if :FeatureParameter; then
		'&lt;FEATURE-PARAMETER-REF TYPE="'	do :FeatureParameter; { type%minus%upper '"&gt;' variable oid '_path' read }'&lt;/FEATURE-PARAMETER-REF&gt;' newline
	endif

	if ~Parent; then 
		'&lt;CHILD-NODES&gt;' newline
		do ~Parent~Child.() { subreport '_Feature' run }
		'&lt;/CHILD-NODES&gt;' newline
	else
		'&lt;CHILD-NODES&gt;&lt;/CHILD-NODES&gt;' newline
	endif

if type = 'VehicleFeature' then	
	'&lt;IS-CUSTOMER-VISIBLE&gt;'	if :IsCustomerVisible; then 'true' else 'false' endif '&lt;/IS-CUSTOMER-VISIBLE&gt;' newline
	'&lt;IS-DESIGN-VARIABILITY-RATIONALE&gt;'	if :IsDesignVariabilityRationale; then 'true' else 'false' endif '&lt;/IS-DESIGN-VARIABILITY-RATIONALE&gt;' newline
	'&lt;IS-REMOVED&gt;'	if :IsRemoved; then 'true' else 'false' endif '&lt;/IS-REMOVED&gt;' newline
endif
if :DeviationAttributeSet; then
	do :DeviationAttributeSet { _deviationAttributeSet() }
endif
'&lt;/' @feature '&gt;' newline
endif
endreport</report>
						<report>Report '_FeatureLinks'
/* Reporting the FeatureLinks */
'&lt;FEATURE-LINKS&gt;'
foreach &gt;FeatureLink 
{	'&lt;FEATURE-LINK&gt;' newline
	'&lt;SHORT-NAME&gt;' type '&lt;/SHORT-NAME&gt;' newline
	'&lt;CUSTOM-TYPE&gt;' :CustomType '&lt;/CUSTOM-TYPE&gt;' newline
	'&lt;KIND&gt;' :Kind%upper '&lt;/KIND&gt;' newline
	/* Reference paths */
	'&lt;END-REF TYPE="' do ~End.() { type%minus%upper '"&gt;' variable oid '_path' read } '&lt;/END-REF&gt;' newline
	'&lt;START-REF TYPE="' do ~Start.() { type%minus%upper '"&gt;'  variable oid '_path' read } '&lt;/START-REF&gt;' newline
	'&lt;/FEATURE-LINK&gt;' newline
}
'&lt;/FEATURE-LINKS&gt;' newline
endreport</report>
						<report>_featureModelInSystemModel()
local 'featureModel' write 'FEATURE-MODEL' close 
local 'nameValue' write :Name;%xml close
newline 
'&lt;!-- ' @featureModel ' name: ' 
if @nameValue &lt;&gt; '' then
	@nameValue ' (' :Short name; ')'
else
	:Short name;
endif
' --&gt;' newline

'&lt;' @featureModel ' UUID="' :__UUID '"&gt;' newline	
'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
if @nameValue &lt;&gt; '' then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
subreport '_description' run
'&lt;EA-PACKAGE-ELEMENT-REF TYPE="EA-PACKAGE"&gt;' variable oid '_path' read '&lt;/EA-PACKAGE-ELEMENT-REF&gt;' newline 
'&lt;/' @featureModel '&gt;'
</report>
						<report>_featureParameters\ data-type()
/* Reporting the data-types used in FeatureModel */
if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
	variable 'reported_elements' append oid ' ' close
	variable 'type_name' write type%minus%upper close
	variable 'rest_of_the_data-types_content' append
		_data-type_content();
	close
endif
do :Unit {
	if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write type%minus%upper close
		variable 'rest_of_the_data-types_content' append
			_unit_details()
		close
		do :Quantity; {
			if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
				variable 'reported_elements' append oid ' ' close
				variable 'type_name' write type%minus%upper close
				variable 'rest_of_the_data-types_content' append
					_quantity_details()
				close
			endif
		}
		do :UnitReference {
			if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
				variable 'reported_elements' append oid ' ' close
				variable 'type_name' write type%minus%upper close
				variable 'data-types_content' append
					_unit_details()
				close
				do :Quantity {
					if not ($data-types_modeled =~ oid%wildsp) then
						if not $reported_elements =~ oid%wildsp then
							variable 'reported_elements' append oid ' ' close
							variable 'type_name' write type%minus%upper close
							variable 'data-types_content' append
								_quantity_details()
							close
						endif
					endif
				}	
			endif
		}
	endif
}
do :BaseRangeable {
	if not ($data-types_modeled =~ oid%wildsp) and not ($reported_elements =~ oid%wildsp) then
		variable 'reported_elements' append oid ' ' close
		variable 'type_name' write type%minus%upper close
		variable 'rest_of_the_data-types_content' append
			_baseRangeable_details()
		close
	endif	
}</report>
						<report>_symCheckFeatureCardinality()
do ~Child.() {
	if not :Cardinality =~ '0*' then
		'Error: mandatory child'
	endif
}</report>
						<report>_VehicleFeatureModel\ with\ package\ structure()
if not $reported_models =~ oid%wildsp then
	variable 'reported_models' append oid ' ' close
	local 'featureModel' write 'FEATURE-MODEL' close 
	local 'nameValue' write :Name;%xml close
	newline 
	'&lt;!-- ' @featureModel ' name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' @featureModel ' UUID="' :__UUID '"&gt;' newline	
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
	'&lt;TRACEABLE-SPECIFICATION-REFS&gt;' '&lt;/TRACEABLE-SPECIFICATION-REFS&gt;' newline
	subreport '_owned-relationships' run
	'&lt;ROOT-FEATURES&gt;' newline
	foreach .(*Feature) 
	{	if not (~Child; or containers) then 
			subreport '_Feature' run
		endif
	}
	'&lt;/ROOT-FEATURES&gt;' newline

	'&lt;FEATURE-CONSTRAINTS&gt;'
	do :FeatureConstraints 
	{	newline	
		'&lt;FEATURE-CONSTRAINT UUID="' :__UUID '"&gt;' newline
		'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		if :Name; &lt;&gt; '' then
			'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' 
		endif
		'&lt;CRITERION&gt;' :Criterion%xml '&lt;/CRITERION&gt;' newline
		'&lt;/FEATURE-CONSTRAINT&gt;'
	}
	'&lt;/FEATURE-CONSTRAINTS&gt;' newline
	subreport '_FeatureLinks' run
	'&lt;/' @featureModel '&gt;'
endif</report>
						<constraints>
							<connectivity>
								<object href="#Object_Feature_user_3399887361"></object>
								<role href="#Role_Children_user_3399888325"></role>
								<max>1</max>
							</connectivity>
							<connectivity>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<relationship href="#Relationship_Comment_user_3460793460"></relationship>
								<max>1</max>
							</connectivity>
							<connectivity>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
								<role href="#Role_Children_user_3399888325"></role>
								<max>1</max>
							</connectivity>
							<uniqueness>
								<object href="#Object_Feature_user_3399887361"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="55,50" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="71" version="1.2" width="85" xmlns="http://www.w3.org/2000/svg">
								<ellipse cx="70" cy="60.5" fill="rgb(128,128,128)" rx="15" ry="10.5" stroke="rgb(128,128,128)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
								<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="16" font-style="normal" font-weight="normal" height="17" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="28" x="56" y="53">FM</textArea>
							</svg>
						</icon>
					</graph>
				</explosion>
				<decomposition>
					<object href="#Object_BehaviorConstraintType_sysadmin_3508101078"></object>
					<graph href="#Graph_AttributeQuantificationConstraint_user_3506854554"></graph>
				</decomposition>
				<decomposition>
					<object href="#Object_BehaviorConstraintPrototype_sysadmin_3508101353"></object>
					<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
				</decomposition>
				<decomposition>
					<object href="#Object_ComputationConstraint_sysadmin_3508101199"></object>
					<graph href="#Graph_ComputationConstraint_user_3506856566"></graph>
				</decomposition>
				<decomposition>
					<object href="#Object_TemporalConstraint_sysadmin_3508101158"></object>
					<graph id="Graph_Mode_user_3506169209" type="Graph_Mode_user_3506169209" typeName="BehaviorConstraintTemporalConstraint">
						<description>TemporalConstraint provide the language support for capturing the concerns relating to discrete behavior, which emphasizes the dependency that a behavior has in regard to its own history and other behaviors on a timeline. They are useful for precisely defining requirements or design solutions.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="a12e7g" name="Short name" unique="false">
							<property href="#Property_2ECUName_user_3310972947"></property>
						</slot>
						<slot id="a3jxnb" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="a2mi3y" name="Description" unique="false">
							<property href="#Property_2Description_user_3310902697"></property>
						</slot>
						<identReport>_name()</identReport>
						<object id="Object_State_sysadmin_3508139745" type="Object_State_sysadmin_3508139745" typeName="State">
							<description>A system or component can have a finite set of discrete states. Each state defines a situation where certain value invariant (quantificationInvariant) and/or time invariant (timeInvariant) hold.</description>
							<superType>
								<object href="#Object_Identifiable_sysadmin_3507928462"></object>
							</superType>
							<slot id="a0b9xs" name="IsInitialState" unique="false">
								<property type="Property_IsInitialState_user_3506170890" typeName="isInitState">
									<description></description>
									<dataType>
										<simpleType>Boolean</simpleType>
									</dataType>
									<defaultValue></defaultValue>
								</property>
							</slot>
							<slot id="a2ba0q" name="IsErrorState" unique="false">
								<property type="Property_isErrorState_user_3506170960" typeName="isErrorState">
									<description></description>
									<dataType>
										<simpleType>Boolean</simpleType>
									</dataType>
									<defaultValue></defaultValue>
								</property>
							</slot>
							<slot id="a5m8gd" name="Quantification invariant" unique="false">
								<property href="#Property_quantificationInvariant_sysadmin_3508396709"></property>
							</slot>
							<slot id="a6maeq" name="Time invariant" unique="false">
								<property href="#Property_timeInvariant_sysadmin_3508397976"></property>
							</slot>
							<slot id="aampee" name="Subtemporal constraint" unique="false">
								<property type="Property_subTemporalConstraint_sysadmin_3508143794" typeName="subTemporalConstraint">
									<description></description>
									<dataType>
										<object href="#Object_TemporalConstraint_sysadmin_3508101158"></object>
									</dataType>
								</property>
							</slot>
							<slot id="abzpjf" name="Mode declaration" unique="false">
								<property href="#Property_modeDeclaration_sysadmin_3548182021"></property>
							</slot>
							<slot id="aczuru" name="Hazard declaration" unique="false">
								<property type="Property_hazardDeclaration_sysadmin_3548185413" typeName="hazardDeclaration">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object id="Object_Hazard_sysadmin_3509606795" type="Object_Hazard_sysadmin_3509606795" typeName="Hazard">
											<description>The Hazard element represents a condition or state in the system that may contribute to accidents. The associated malfunction identifies the FeatureFlaw that corresponds to the Hazard.</description>
											<slot id="a2c8si" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="a023vw" name="Short name" unique="false">
												<property type="Property_HazardName_sysadmin_3509606806" typeName="HazardName">
													<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="a3c8uh" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<slot id="a1rnkp" name="Text" unique="false">
												<property href="#Property_2Description_user_3310902697"></property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
											<objectSymbol offset="55,5" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="110,10 55,100 55,105 60,110 185,110 190,105 190,100 130,10 120,5 110,10" targetPointX="120" targetPointY="60" usesGrid="true"></defaultConnectable>
												<svg baseProfile="tiny" height="110" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
													<polygon fill="rgb(255,255,0)" points="110,10 55,100 55,105 60,110 185,110 190,105 190,100 130,10 120,5" stroke="rgb(0,0,0)" stroke-width="1">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</polygon>
													<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="true" text-anchor="middle" width="135" x="55" y="60">
														ReportTextSource:id
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="95" y="20">
														Haz
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
												</svg>
											</objectSymbol>
										</object>
									</contentsDataType>
								</property>
							</slot>
							<slot id="ad1caz" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="210.25,81.3214 209.869,84.6426 208.786,87.4581 207.163,89.3394 205.25,90 34.25,90 32.3366,89.3394 30.7145,87.4581 29.6306,84.6426 29.25,81.3214 29.25,37.9286 29.6306,34.6074 30.7145,31.7919 32.3366,29.9106 34.25,29.25 205.25,29.25 207.163,29.9106 208.786,31.7919 209.869,34.6074 210.25,37.9286 210.25,81.3214" targetPointX="119.75" targetPointY="59.625" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="90" version="1.2" width="210" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="1.42632" x2="1.43158" y1="0.366667" y2="1.62222">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="1" stop-color="rgb(213,213,213)"></stop>
										</linearGradient>
									</defs>
									<g fill="rgb(255,255,255)" stroke="rgb(0,0,0)" stroke-width="0" sym:height="60" sym:width="180" sym:x="3.0e1" sym:y="3.0e1">
										<rect fill="rgb(255,255,255)" height="60" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="0" width="180" x="30" y="30">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</rect>
										<rect fill="rgb(255,255,255)" height="56" rx="3" ry="4" stroke="rgb(0,0,0)" stroke-width="0" width="176" x="32" y="32">
											<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
										</rect>
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if :IsInitialState; then 'T' endif</displayCondition>
										</metaInfo>
									</g>
									<rect fill="url(#gradient1)" height="60" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="2" width="180" x="30" y="30">
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="regexMatch:" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if not :IsInitialState; then 'T' endif</displayCondition>
										</metaInfo>
									</rect>
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="10" sym:wordWrap="true" text-anchor="start" width="180" x="30" y="30">
										ReportTextSource:if :Quantification invariant; then 
	newline
	'quantificationInvariant' ' :={ '
	do :Quantification invariant; {	id '; '	}
	'}'
endif

if :Time invariant; then 
	newline
	'timeInvariant' ' :={ '
	do :Time invariant;	{	id '; '	}
	' }'
endif 

if :Subtemporal constraint; then 
	newline
	'subTemporalConstraint' ' :={ '
		:Subtemporal constraint; ';'
	' }'
endif

if :Mode declaration; then 
	newline
	'modeDeclaration' ' :={ '
	do :Mode declaration;	{	id '; '	}
	' }'
endif

if :Hazard declaration; then 
	newline
	'hazardDeclaration' ' :={ '
	dowhile :Hazard declaration; {	id '; '	}
	' }'
endif

										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="22" subsymbolExtentY="22" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="30.7782,30.2218" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 29.2218,29.7782" startDistance="8"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>Error</librarySubsymbolSource>
										<metaInfo>
											<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">PropertyTextSource:a2ba0q</displayCondition>
										</metaInfo>
									</template>
									<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="22" subsymbolExtentY="22" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="210,30" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -30,30" startDistance="8"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>sym_statemachine</librarySubsymbolSource>
										<metaInfo>
											<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if decompositions; then 'T' endif</displayCondition>
										</metaInfo>
									</template>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="bold" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="true" text-anchor="middle" width="180" x="30" y="30">
										ReportTextSource:newline;
id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
							<icon offset="57,23" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="49" version="1.2" width="104" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="1.00655" x2="1" y1="0.287449" y2="1">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="1" stop-color="rgb(213,213,213)"></stop>
										</linearGradient>
									</defs>
									<rect fill="rgb(64,64,64)" height="23.5238" rx="5" ry="5" stroke="rgb(64,64,64)" stroke-width="1" width="45.4054" x="57" y="23"></rect>
									<rect fill="url(#gradient1)" height="23.5238" rx="5" ry="5" stroke="rgb(0,0,0)" stroke-width="1" width="45.4054" x="58.5946" y="25.4762"></rect>
									<line stroke="rgb(170,170,170)" stroke-width="0" x1="58.5946" x2="104" y1="34.1429" y2="34.1429"></line>
								</svg>
							</icon>
						</object>
						<object href="#Object_Joker_user_3399887441"></object>
						<relationship id="Relationship_Transition_sysadmin_3509469659" type="Relationship_Transition_sysadmin_3509469659" typeName="Transition">
							<description></description>
							<superType>
								<relationship href="#Relationship_Identifiable_sysadmin_3509356101"></relationship>
							</superType>
							<slot id="a6w8jc" name="timeGuard" unique="false">
								<property type="Property_timeGuard_sysadmin_3508398053" typeName="timeGuard">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object href="#Object_LogicalTimeCondition_sysadmin_3508139785"></object>
									</contentsDataType>
								</property>
							</slot>
							<slot id="a7e6v6" name="quantificationGuard" unique="false">
								<property type="Property_quantificationGuard_sysadmin_3509888673" typeName="quantificationGuard">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object href="#Object_Quantification_sysadmin_3508139708"></object>
									</contentsDataType>
									<contentsDataTypeSubtype>
										<object href="#Object_LogicalEvent_sysadmin_3508139994"></object>
									</contentsDataTypeSubtype>
								</property>
							</slot>
							<slot id="a2w8f2" name="readEventOccurrence?" unique="false">
								<property type="Property_readEventOccurrence__sysadmin_3508150933" typeName="readEventOccurrence?">
									<description></description>
									<dataType>
										<object href="#Object_EventOccurrence__sysadmin_3508150778"></object>
									</dataType>
									<dataTypeSubtype>
										<object href="#Object_BehaviorConstraintBindingEvent_sysadmin_3537598343"></object>
									</dataTypeSubtype>
								</property>
							</slot>
							<slot id="a3w8gr" name="writeEventOccurrence!" unique="false">
								<property type="Property_writeEventOccurrence__sysadmin_3508150882" typeName="writeEventOccurrence!">
									<description></description>
									<dataType>
										<object href="#Object_EventOccurrence__sysadmin_3508150778"></object>
									</dataType>
									<dataTypeSubtype>
										<object href="#Object_BehaviorConstraintBindingEvent_sysadmin_3537598343"></object>
									</dataTypeSubtype>
								</property>
							</slot>
							<slot id="a9hngk" name="effect" unique="false">
								<property type="Property_effect_sysadmin_3509969410" typeName="effect">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object href="#Object_TransformationOccurrance_sysadmin_3508139833"></object>
									</contentsDataType>
								</property>
							</slot>
							<identProp slotID="ab68br"></identProp>
							<relationshipSymbol offset="10,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="80" targetPointY="60" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="80" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="10" y="40">
										ReportTextSource:to '%null' newline '* $' endto
$count='0';
$count1='0';
id
if :timeGuard; then 
	'[' :timeGuard '] ' 
	newline
endif

if :quantificationGuard; then
	'['
	do :quantificationGuard	{ 
		if $count&lt;&gt; '0'; then 
			'&amp;&amp;'
		endif
      id
      $++count%null
	}  	 
	']'
	newline
endif
     
if :readEventOccurrence?; then 
	'?':readEventOccurrence?
	newline
endif

if :writeEventOccurrence!; then 
	'!':writeEventOccurrence!
	newline
endif

if :effect; then 
	'/' 
	do :effect {  
		if $count1&lt;&gt; '0'; then 
			'; '
		endif
		id
		$++count1%null
	}
endif

										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="79,13" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="32" version="1.2" width="109" xmlns="http://www.w3.org/2000/svg">
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="79" x2="109" y1="27" y2="27"></line>
									<polyline fill="none" points="99,22 109,27 99,32" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="12" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="13" x="82" y="13">E</textArea>
								</svg>
							</icon>
						</relationship>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<role id="Role_from_user_3506171101" type="Role_from_user_3506171101" typeName="from">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
							</roleSymbol>
						</role>
						<role id="Role_to_user_3506171120" type="Role_to_user_3506171120" typeName="to">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="150" x2="136" y1="80" y2="76">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="150" x2="136" y1="80" y2="84">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
								</svg>
							</roleSymbol>
						</role>
						<role href="#Role_Comment_user_3460793566"></role>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_State_sysadmin_3508139745"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_State_sysadmin_3508139745"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Transition_sysadmin_3509469659"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_from_user_3506171101"></role>
								<object href="#Object_State_sysadmin_3508139745"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_to_user_3506171120"></role>
								<object href="#Object_State_sysadmin_3508139745"></object>
							</connection>
						</binding>
						<decomposition>
							<object href="#Object_State_sysadmin_3508139745"></object>
							<graph href="#Graph_Mode_user_3506169209"></graph>
						</decomposition>
						<report>Report '!InitStateCheck'

subreport '_checkings' run newline
if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found' newline
endif
endreport</report>
						<report>Report '_checkings'
/* Check generator for EAST-ADL TemporalConstraint models */
$warnings='0'

'Warnings:' newline

/* Checkings for Multiple Init States */
foreach .(State) {	
	subreport '_duplicated InitStates' run 
	if $found='T' then
		_reportWarnings()
		'Warning: Multiple Init States: ' id newline
	endif
}

endreport</report>
						<report>Report '_duplicated InitStates'
$found='F'
$obj1=:IsInitialState

foreach .()
{
	$obj2=:IsInitialState
	if oid&lt;&gt;oid;1 then
		if $obj1=$obj2 then
			$found='T'
	endif	
	endif
}
endreport
</report>
						<constraints>
							<uniqueness>
								<object href="#Object_State_sysadmin_3508139745"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="75,20" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="75" version="1.2" width="175" xmlns="http://www.w3.org/2000/svg">
								<defs>
									<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="1.42632" x2="1.43158" y1="0.366667" y2="1.62222">
										<stop offset="0" stop-color="rgb(255,255,255)"></stop>
										<stop offset="1" stop-color="rgb(213,213,213)"></stop>
									</linearGradient>
								</defs>
								<rect fill="url(#gradient1)" height="55" rx="26" ry="21" stroke="rgb(0,0,0)" stroke-width="1" width="100" x="75" y="20"></rect>
							</svg>
						</icon>
					</graph>
				</decomposition>
				<report>
					Report '!ExportToUPPAAL'

to '%null' newline '* $' endto
to '%removeCRLF
\
 $' endto

variable 'defaultDirectory' write
	subreport '_UPPAAL directory' run
close

/* Translators for different kind of operations (specific for metaEdit) */
subreport '_translators' run 

/*Write File Name*/
filename $defaultDirectory id%file '_generated.xml' write

	/*Generate the actual contents of the model file*/
	subreport '_GenerateUPPAALFileContents' run
close


filename $defaultDirectory id%file '_generated_RequirementList.txt' write
	subreport '_GenerateRelatedReqirements' run
close


/* Opening the generated file with the associated application */

external 'cmd /x /k C:\MyUppaalDirectory\uppaal-4.0.13\uppaal.jar ' '"' $defaultDirectory id%file '_generated.xml' '"' execute


endreport
					<icon offset="58,53" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="105" version="1.2" width="108" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="45" rx="0" ry="0" stroke="rgb(0,0,255)" stroke-width="1" width="50" x="58" y="60"></rect>
							<rect fill="rgb(0,0,255)" height="9" rx="0" ry="0" stroke="rgb(0,0,255)" stroke-width="1" width="50" x="58" y="53"></rect>
							<image height="40" ns:href="Graph_BehaviorConstraint_user_3506169563-!ExportToUPPAAL-Icon-1.png" sym:scale="2.47368,2.22222" width="47" x="59" y="64"></image>
						</svg>
					</icon>
				</report>
				<report>!StateflowExportAndSimulinkIntegration()

$StructureModelName=' '
/* Declaring a variable for model name i.e. the main Simulink file */

if ((:§§_Type_1) and (:§§_Type_2)) or ( (not :§§_Type_1) and (not :§§_Type_2) ) then 
		'Note! For this transformation, one graph specifying the corresponding structural design is needed. Transformation stopped.'
else
	
		if :§§_Type_1; then 
			do :§§_Type_1
			{
				$StructureModelName= :FunctionName; 	
			}
		else
			do :§§_Type_2
			{
				$StructureModelName= :FunctionName; 	
			}
		endif
		/*Now set the name of the corresponding simulink structure model i.e. the associated function type. It is assumed that the targetedFunctionType is correctly associated and it has the same name as that of the Simulink file*/

	to '%null' newline '* $' endto

	subreport '_translators' run 
	/* Translators for different kind of operations (specific for metaEdit) */

	filename  subreport '_default directory' run id%file '.m' write
	/*Write File Name*/

	'sflib %Open Stateflow Library first' newline
	'open('''$StructureModelName''');'
	newline
	/*Open Stateflow Library and then the corresponding structural model*/
	/*- sflib opens the Stateflow library window. From this window, you can drag Chart and Truth Table blocks into Simulink models and access the Stateflow Examples Library.*/

	subreport '_GenerateModelArtifacts' run
	/*Generate the actual contents of the m file for model transformation*/

	newline
	'clear all' newline
	/*Finalize by clearing the Matlab workspace*/
	
	'clc' newline
	/*Finalize by clearing the Matlab command window*/

	
	close
	/*Close the newly generated Matlabfile*/

endif </report>
				<report>ExportStateflowAndSimulinkIntegration()
!StateflowExportAndSimulinkIntegration()</report>
				<report>ExportTemporalConstraintsToUPPAAL()
!ExportToUPPAAL()


</report>
				<report>_AddDefaultTransition()

do decompositions { 
	foreach .State {
		if :IsInitialState; then
			'DefTran=Stateflow.Transition(chartHandle);' newline
			/* get the current SM Chart */
			'DefTran.Destination = ' :Short name; ';' newline
			/* use the init state as the target of DefTran */
			/* -  In StateChart, a default transition is a transition with a destination */
			/*      (a state or a junction), but no apparent source object.   */
			/* -  We use this as the enabler of init state.   */
			'DefTranA.DestinationOClock = 0;' newline
		endif
	}
}</report>
				<report>_AddInputAndOutputData()

$InputPortName=' '
$OutputPortName=' '
$InputPortCount='0'
$OutputPortCount='0'

do :type
	{
		/*Go to the type defintion of behavior constraint protoptype, and now start to read the interface Parameter declaration*/
		$CurrentParameterName=' '

		/*Go to the parameter defintion*/ 
	 	do :parameter
		{
		  	$CurrentParameterName=:Short name;
		 
			/* If an interface Parameter is visible through port, it as a corresponding structure port. Now go to the port definition */
		 	do :visibleThroughFunctionPort
			{	 	
				 $CurrentParameterName'=Stateflow.Data(chartHandle);' newline
				
					/* Stateflow.Data - Constructor for creating data*/
					/*   - Syntax: data_new = Stateflow.Data(parent)   */
					/*   - The Stateflow.Data method is a constructor method for creating data for a parent machine, chart, */ 
					/*     state, box, or function, that returns a handle to the Data object for the new data.    */
					/*   - data_new Handle to the Data object for the new data */
					/* Here, the parameter name is used as the data object handle and name*/
 				
				 $CurrentParameterName'.Name = '''$CurrentParameterName'''' newline
					/* Data Properties       */
					/*  - Name: Name of this data. Equivalent to entering the name of this data in the Name field of the Data properties dialog box. */
				
			
				/*Now, check the port properties, and save the in- and out-ports in two variables. */
				if type = 'InFlowPort'; then 	 
	       	 		$CurrentParameterName'.Scope = ''input''' newline
							/* Data Properties       */
							/* Scope - Scope of this data:
							/*     - Local — Data defined in current Stateflow chart. */
							/*     - Constant — Read-only constant value that is visible to the parent Stateflow object and its children.*/
    						/*     - Parameter — Constant defined in the MATLAB workspace or derived from a Simulink parameter that is */ 
							/*                   defined and initialized in the parent masked subsystem. */
							/*     - Input — If the parent is a graphical, truth table, or MATLAB function, the data is an input argument.*/
							/*               Otherwise, it is provided by the Simulink model to the Stateflow chart via an input port. */
							/*     - Output — If the parent is a graphical, truth table, or MATLAB function, the data is a return value. */
							/*              Otherwise, it is provided by the Stateflow chart to the Simulink model via an output port. */
    						/*     - Data Store Memory — Data that binds to a Simulink data store. */
    						/*     - Temporary — Data that persists only during the execution of a function.*/
							/*     - Imported — Data parented by the Simulink model, but defined in external code embedded in the Stateflow machine.*/
							/*     - Exported — Data from the Simulink model that you provide to external code. Parent must be a Stateflow machine. */
							
						if $InputPortCount&lt;&gt;'0'
	 				 		then
	       					variable 'InputPortName' append ';' close
	       			endif
	       	
						variable 'InputPortName' append '''' :Short name;
	         		''''
						close
	       	
						$InputPortCount++%null
	
	         	else 
	
	  		     		$CurrentParameterName'.Scope = ''output''' newline
	           		
						if $OutputPortCount&lt;&gt;'0'
	 				 		then
	       					variable 'OutputPortName' append ';' close
	       				endif
	       			
						variable 'OutputPortName' append '''' :Short name;
	         		''''
	         		close
			     
						$OutputPortCount++%null  
			 
			endif
			}
		}
	
	}</report>
				<report>_AddLinesBetweenStateflowAndSimulink()


'inputPortArray=['$InputPortName'];' newline
'outputPortArray=['$OutputPortName'];' newline

if $InputPortCount&lt;&gt;'0'
then
'for a=1:'$InputPortCount 
newline
'add_line('''$StructureModelName'/'$SubsystemName''',[inputPortArray(a,1:end),''/1''],['''$ChartName'/'',num2str(a)]);'
newline
'end'
newline
newline
endif


if $OutputPortCount&lt;&gt;'0'
then
'for a=1:'$OutputPortCount 
newline
'add_line('''$StructureModelName'/'$SubsystemName''',['''$ChartName'/'',num2str(a)],[outputPortArray(a,1:end),''/1'']);'
newline
'end'
newline
endif
</report>
				<report>_AddMatlabFunctionForLogicalTransformations()

$coveredLogicalConstraint=' '
do decompositions
	{										
	  foreach .LogicalTransformation
			{	
				if not $coveredLogicalConstraint =~ oid%wildsp then
                variable 'coveredLogicalConstraint' append oid ' ' close

                :Short name;'= Stateflow.EMFunction(chartHandle);' newline
							/* Stateflow.EMFunction - Constructor for creating MATLAB function */
							/*   - Syntax efunction_new = Stateflow.EMFunction(parent) */
							/*   - The Stateflow.EMFunction method is a constructor method for creating a MATLAB function in a parent chart, */
							/*     state, box, or graphical function. It returns a handle to the EMFunction object for the new MATLAB function.*/
							/*   - Arguments: parent */
							/*		 Handle to parent chart or state of the new MATLAB function */
							/*   - Returns: efunction_new */
							/* 	 efunction_new */
							/*		 Handle to a Function object for the new MATLAB function */
							/*   - Other : The Stateflow.SLFunction, function_new = Stateflow.Function(parent)*/
							
					'str=sprintf(''':expression ''');' newline
					:Short name;'.Script= str' newline
					:Short name;'.Name = ''':Short name;'''' newline
		         :Short name;'.Position = [200 100 50 50]' newline
		     endif
			}
	}</report>
				<report>_AddStates()

do decompositions { 
	$posCount='1'
	foreach .State {
		newline
		:Short name;'= Stateflow.State(chartHandle);' 
		/* Stateflow.State - Constructor for creating state */
		/* - The Stateflow.State method is a constructor method for creating a state for a parent chart, state, or box, */
		/*	  that returns a handle to the State object for the new state. */
		/* - Arguments: parent */
		/*   Handle to the object for the parent chart, state, or box for the new state */
		/* - Returns: state_new */
		/*   Handle to State object for newly created state */
		newline
		:Short name;'.Name = ''':Short name;'''' ';'
		newline
		:Short name;'.Position = [60 ' $posCount++ '00 90 35];' 
		newline
	}
}
 

							</report>
				<report>_AddTransitions()

$sPosCount='6'
$dPosCount='1'

do decompositions
   { 
	  foreach &gt;(Transition) 
		{
			newline
  			:Short name; '=Stateflow.Transition(chartHandle);' newline
			/*  Stateflow.Transition - Constructor for creating transition */
			/*  	- Syntax: transition_new = Stateflow.Transition(parent)     */
			/*		- The Stateflow.Transition method is a constructor method for creating transitions in a parent chart, state, box, */ 
			/*      or function that returns a handle to a Transition object for the new transition */

  			
			:Short name; '.Source='
   			do ~from.()
    				{
     				 :Short name;';' newline
    				}
				/* Transition Property: Source */
				/* Source state or junction of this transition. Assign Source the source object for this transition. */
				/* You can also use the property Source to detach the source end of a transition, through the command t.Source = [] where t is the Transition object.*/	  			


			:Short name; '.Destination='
   			do ~to.()
				
    				{
				   	:Short name;';' newline
    				}
				/* Transition Property: Destination */
				/* Destination state or junction (default = []) of this transition. Assign Destination the destination object for this transition. */
				/* You can also use the property Destination to detach the destination end of a transition, through the command t.Destination = [] where t is the Transition object.*/
  			
			:Short name; '.SourceOClock = ' $sPosCount++ ';' newline 
			
				/* Transition Property: SourceOClock */
				/*	Location of transition source connection on state (default = 0). Varies from 0 to 12 for full clock cycle location. */ 
				/* The value taken for this property is the modulus 12 of the entered value.*/			
		  
		 	:Short name; '.DestinationOClock = ' $dPosCount++ ';' newline

			/*Note: we do not read events in the current version. Only guards and actions are transformed.*/
       	
			if (:quantificationGuard) or (:timeGuard) or (:effect)
      		then
						$andcount='0';
						
      			  :Short name; '.LabelString='''
						/* LabelString	*/
						/* Label for this transition (default = '?'). Equivalent to typing the label for this transition in its label text field in the chart.	*/
						/* - A transition is characterized by its label. The label can consist of an event, a condition, a condition action, and/or a */
						/*   transition action. The ? character is the default transition label. Transition labels have the following general format: */
						/* 		event[condition]{condition_action}/transition_action                                                          */
						/*    ++ Event Trigger.  Specifies an event that causes the transition to be taken, provided the condition, if specified, is */
						/*       true. Specifying an event is optional. The absence of an event indicates that the transition is taken upon the */
						/*       occurrence of any event. Specify multiple events using the OR logical operator (|). */
						/*    ++ Condition.  Specifies a Boolean expression that, when true, validates a transition to be taken for the specified */
						/*       event trigger. Enclose the condition in square brackets ([]).*/
						/*    ++ Condition Action.  Follows the condition for a transition and is enclosed in curly braces ({}). It is executed as */
						/*       soon as the condition is evaluated as true and before the transition destination has been determined to be valid. If */
						/*       no condition is specified, an implied condition evaluates to true and the condition action is executed.  */
						/*    ++ Transition Action.  Executes after the transition destination has been determined to be valid provided the */
						/*      condition, if specified, is true. If the transition consists of multiple segments, the transition action is only */
						/*       executed when the entire transition path to the final destination is determined to be valid. Precede the transition 
						/*       action with a '/'. */
       

           			if (:quantificationGuard) or (:timeGuard) 
           			 then
            		 '['
           			  do :quantificationGuard
   						{
								if $andcount&lt;&gt;'0'
									then '&amp;&amp;'
								endif
								$andcount++%null
								
								:expression	
							} 
							/* Read Qantifiation Guard and write it as the vaule of the LabelString */
					
						  do :timeGuard
   						{
  								do :width
 								{
									if $andcount&lt;&gt;'0'
										then '&amp;&amp;'
									endif
									$andcount++%null
									
									'after(':value',sec)'		
							    }
							}
							/* Read Time Guard and write it as the vaule of the LabelString   */
							/* 		after(n, sec) - Operators for Absolute-Time Temporal Logic */
							/* 			- where n is any positive number or expression and sec is a keyword that denotes the simulation */
							/*            time elapsed since activation of the associated state. */
							/*  			- Returns true if n seconds of simulation time have elapsed since activation of the associated state. */ 
							/*            Otherwise, the operator returns false. */
							/*          - Resets the counter for sec to 0 each time the associated state reactivates */
											
					    ']' 
	  		  			endif
	        
	
	    			if :effect
						then
			  			$andcount='0';
		    			$effectcount='0'
           			'{'
						do :effect
		   			{
							$transformationOccurrenceIdentifier =' '
	 						$transformationOccurrenceIdentifier = :Short name;
								
							if $effectcount &gt;'0' 
		     					then  ';'
		     				endif
		     			
							/*:expression*/
							/* variable 'declared_'$transformationOccurrenceIdentifier read */
							/* # in the model. TO BE UPDATED 2012-11-29*/
							
							if :expression ='__UPPAAL_LocalClockReset__' 
					   		then	
					   		else
									:expression
								endif
								/* ignore the UPPAAL commands, as Stateflow perform the clock reset automatically*/
								/* Read Effect and write it as the call as the value of the LabelString */
											
							$++effectcount%null
		 		  }
		     
		      '}'
		
			endif
			'''' newline
			endif
      }

}</report>
				<report>Report '_BehaviorConstraintType'
/* Generating the BehaviorConstraintType information - Under development */
if not $reported_elements =~ oid%wildsp then
	variable 'reported_elements' append oid ' ' close
	variable 'type_name' write type%minus%upper close
	newline
	'&lt;!-- ' $type_name ' name: ' :Name%xml ' (' :Name;%var ') --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;' $type_name ' UUID="' :__UUID '"&gt;' newline 
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name &lt;&gt; '' then
		'&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline
	endif
	variable 'model_name' write :Type%legal close 
	subreport '_description' run
	'&lt;TEMPORAL-CONSTRAINTS&gt;'
	foreach .TemporalConstraint {	subreport '_temporalConstraint' run	}
	'&lt;/TEMPORAL-CONSTRAINTS&gt;' newline
	'&lt;/' $type_name '&gt;'
endif
endreport</report>
				<report>_defineState()

	do decompositions
	{

			foreach .State
 				{  

					'&lt;location id="':Short name;'" x="" y=""&gt;&lt;name x="" y=""&gt;':Short name;'&lt;/name&gt;'
					do :Time invariant;
					{
			 				if :isLogicalTimeSuspended
			  				then 			   
			
								if $committedUrgent='committed'
			    					then '&lt;committed /&gt; '
			    				else  
									'&lt;urgent /&gt; '
			   				endif
			
							endif
			
		
  			do :upper
				{
	  				'&lt;label kind="invariant" x="" y=""&gt;LocalClock&amp;lt;=':value'&lt;/label&gt;'
				}
		
		
		
			}
		
			
		'&lt;/location&gt;' newline
	 }
	
	
		foreach .State
 			{ 
	
				if :IsInitialState; then
				'&lt;init ref="'id'"/&gt;'
				endif 
      
			}

}
</report>
				<report>_defineTranstion()

$andcount='0'
$effectcount='0'

	do decompositions
	{
	
		foreach &gt;(Transition) {
	
	    	'&lt;transition&gt;' 
			
				do ~from.()
					{
				 		'&lt;source ref="':Short name;
					 }
				do ~to.()
					{
						'"/&gt;&lt;target ref="':Short name; '"/&gt;'
					}
			
			
			if (:quantificationGuard) or (:timeGuard)
      	then
				$andcount='0';
        			 '&lt;label kind="guard" x="" y=""&gt;'
          
             do :quantificationGuard
   				{
						if $andcount&lt;&gt;'0'
						then '&amp;amp;&amp;amp;'
						endif
						$andcount++%null
						:expression%xml
						
					} 
					
				do :timeGuard
   				{
  						do :width
 						{
						if $andcount&lt;&gt;'0'
						then '&amp;amp;&amp;amp;'
						endif
						$andcount++%null
						'LocalClock==':value
						
					    }
					} 
					
			'&lt;/label&gt;'
	  		endif

			
			
			if :effect
			then
		    	$andcount='0';
		    	$effectcount='0'
		   	 '&lt;label kind="assignment" x="" y=""&gt;'

		
				do :effect
		   	{
						$transformationOccurrenceIdentifier =' '
	 					$transformationOccurrenceIdentifier = :Short name;
						
												
						if $effectcount &gt;'0' 
		     				then  ',' newline 
		     			endif
		     			
						/*:expression*/
						/* variable 'declared_'$transformationOccurrenceIdentifier read */
						
						
						if :expression ='__UPPAAL_LocalClockReset__' 
						then 
							$LocalClock ' = 0'
						else
							:expression
						endif 
						
											
						$++effectcount%null
						

		 		}
			'&lt;/label&gt;'
		
			endif
			
			
			
		 	if :readEventOccurrence?
			then
		    	$andcount='0';
		    	$eventoccurcount='0'
		    	'&lt;label kind="synchronisation" x="" y=""&gt;'
			
				do :readEventOccurrence?
		   	{
		     		if $eventoccurcount&lt;&gt;'0' 
		     			then ',' 
		     		endif
		     
					$eventoccurcount++%null
			  	
					do :occurredExecutionEvent
					{
				 		:Short name;
						'?'
		       	}
		      }
			
				'&lt;/label&gt;'
		
			endif
		
		
			if :writeEventOccurrence!
			then
		    	$andcount='0';
		    	$eventoccurcount='0'
		    	'&lt;label kind="synchronisation" x="" y=""&gt;'
		 
				do :writeEventOccurrence!
		   	{
		     		if $eventoccurcount&lt;&gt;'0' 
		     			then ',' 
		     		endif
		     
					$eventoccurcount++%null
			  		do :occurredExecutionEvent
					{
				 		:Short name;
						'!'
		       	}
		      }
		
				'&lt;/label&gt;'
			endif
		
			
				
		'&lt;/transition&gt;'
		newline	
							
		}	
	
	
	
	}
</report>
				<report>_GenerateModelArtifacts()

foreach .BehaviorConstraintPrototype
{
	$ChartName=:Short name;
	/*Set the name of the stateflow chart as that of the behavior constraint prototype*/

	do :functionTarget
		{
		 $SubsystemName=:Short name;
		}
	/* Get the name of the corresponding subsystem, i.e. the structural target */
		
	
	newline
	'%%%%%%%%%%%%%%%%%%%%%add stateflow chart within the structural target according to the protoype name%%%%%%%%%%%%%%%%%%%%%%' 
	newline
	'add_block(''sflib/Chart'','''$StructureModelName'/'$SubsystemName'/'$ChartName''');'
	/* Add a chart block to the structural target. The chart block has the same name as that of the behavior constraint prototype*/
	newline
	'set_param('''$StructureModelName'/'$SubsystemName'/'$ChartName''',' '''Position''' ', [120 10 350 150]);'
	newline
	/*set_param('PowerSupply/battery1/Batt_Primary', 'Position', [120 10 350 150])*/
	
	newline
	'rt = sfroot;' 
	newline
	'chartHandle=rt.find(''-isa'',''Stateflow.Chart'',''Name'','''$ChartName''');'
	/* Go to the Simulink.Root, search the chart having the same name as that of the current behavior constraint prototype, and */
	/* get the handle of that stateflow chart. The states and tranisitions are created for each chart (i.e. behavior constraint prototype) */
	newline

	/*
	Open the chart
	'chartHandle.view;'
	newline
	*/

	
	do decompositions
	{
  		foreach .TemporalConstraint
			{	
			newline
			'%%%%%%%%%%add states%%%%%%%%%%%%%%%%%%%%%' 
			newline
			  _AddStates()
			/*add states*/	
			 
			newline
			'%%%%%%%%%%add transitions%%%%%%%%%%%%%%%%'
			newline
				 
			  _AddTransitions()
			/*Note: each transition needs to be explicitly named.*/	
	
			  _AddDefaultTransition()
			/*Add the initial state in Stateflow*/
				  
			}
			
		foreach .ComputationConstraint
			{
			  _AddMatlabFunctionForLogicalTransformations()			            
			}
	}
	/* Add content to each chart, which is given by the decomposition diagram of BehaviorConstraintPrototype (where the temporal and computation constraints are delcared)*/

	_AddInputAndOutputData()
	/* For each chart (behavior constraint prototype), add the input output data. Such data are delcared as the interface Parameter of Behavior Constraint Type */

	_AddLinesBetweenStateflowAndSimulink()

}
</report>
				<report>Report '_GenerateRelatedReqirements'

$graphName = id
$foundBehavTypeDeclaration = ''
$foundEATypeDeclaration = ''
$targetedFunction = ''
$targetedFunctionType = ''

do graphs {  
	if type = 'BehaviorGraph' then 
		foreach .BehaviorConstraintType;
		{ /* Operations for the elements */
		
			do decompositions
			{	
				if id = $graphName then		
					$foundBehavTypeDeclaration = 'true'	
				else	
				   $foundBehavTypeDeclaration = 'false'		
				endif 	
			}

			if $foundBehavTypeDeclaration = 'true' then 
				do ~referred_from&gt;()~refer_to.EAType
   				{ 
						do decompositions {
							$targetedFunction = :FunctionName
							$targetedFunctionType = :Type
						}
				
						do graphs { 
						 	if type = 'RequirementsModel' then 
								
								foreach .EAType;
								{
									do decompositions
										{	
											if (:FunctionName = $targetedFunction) and (:Type = $targetedFunctionType)  then		
												$foundEATypeDeclaration = 'true'	
											else	
				   							$foundEATypeDeclaration = 'false'		
											endif 	
										}
									if $foundBehavTypeDeclaration = 'true' then
										'Exported EAST-ADL requirements for ' $targetedFunction ':' $targetedFunctionType ':'
										newline
										do ~SatisfiedBy&gt;()~SatisfiedRequirement.()
   									{ 
												if :Formalism = 'UPPAAL_CTL' then 
														:Description
														newline	
												endif 

										}
										newline
									endif
								}
							endif 
						}
 					 }
			endif 
		 }
	endif 
}
endreport</report>
				<report>Report '_GenerateSystemDefinitionForUPPAAL'
			$instanitatedParam=' '
	  		$paramCount='0'

'&lt;system&gt;' 

foreach .BehaviorConstraintPrototype
{
			$instanitatedParam=' '
	  		$paramCount='0'
		
			do ~()&gt;BehaviorConstraintBindingAttribute
			{	
			
				    if $paramCount&lt;&gt;'0' 
	     						then 
	       						variable 'instanitatedParam' append ', ' :Short name; ' 'close
	     						else
	       						variable 'instanitatedParam' append :Short name; ' 'close
	    						endif
					$paramCount++%null
				
			}
	
			
			do ~()&gt;BehaviorConstraintBindingEventOccurrence
			{	
	 				if $paramCount&lt;&gt;'0' 
	     						then 
	       						variable 'instanitatedParam' append ', ' :Short name; ' 'close
	     						else
	       						variable 'instanitatedParam' append :Short name; ' 'close
	    						endif
					$paramCount++%null

			}
	
	

	 	:Short name; ' = '
	  			do :type
					{
						do decompositions
						{
							foreach .TemporalConstraint
							{	
								:Short name; '(' $instanitatedParam ')'
							}
							
						}		

					}
					
	  			';' newline

			
}

'system '
$commasep='0'
foreach .BehaviorConstraintPrototype
{

	if $commasep&lt;&gt;'0'
		then
		', '
		endif
	   :Short name; 
	$commasep++%null

}

';&lt;/system&gt;'

endreport</report>
				<report>Report '_GenerateUPPAALFileContents'

/*Write UPPAAL document definition*/
subreport '_UPPAALXML document definitions' run 

/*Start writing the UPPAAL NTA */
newline
'&lt;nta&gt;'

/*Write global declarations for each template*/
newline
subreport '_UPPAALGlobalDeclarations' run 
newline
subreport '_GenerateUPPAALTemplates' run
newline
subreport '_GenerateSystemDefinitionForUPPAAL' run

'&lt;/nta&gt;'
endreport</report>
				<report>Report '_GenerateUPPAALTemplates'

$appendedVariables=' '
$parametercount='0'
$TypeName=''
$TypeCount='0'
$LocalClock='LocalClock'

foreach .BehaviorConstraintPrototype
{	
	
	do :type
	{	
				
		$TypeName = :Short name;
		$TransformationDefinition = ''
									
		variable 'TypeCount' write
					variable 'count_'$TypeName read  
		close
															
		variable 'count_'$TypeName write
					$++TypeCount
		close
									
		variable 'TypeNameCountTotal' write
					variable 'count_'$TypeName read  
		close 
								

		if $TypeNameCountTotal ='1' then
				
		
				$channelListLocal=' '
				$parametercount='0'

		
 				do :parameter
					{
							if :type 
							
							then
								
								if $parametercount&lt;&gt;'0'
			    					then variable 'channelListLocal' append ', int &amp;amp;':Short name; ' ' close
			    				else
			     					variable 'channelListLocal' append 'int &amp;amp;':Short name; ' ' close
			    				endif
			    
								$parametercount++%null
								
							else
								
								
								if $parametercount&lt;&gt;'0'
			    					then variable 'channelListLocal' append ', chan &amp;amp;':Short name; ' ' close
			    				else
			     					variable 'channelListLocal' append 'chan &amp;amp;':Short name; ' ' close
			    				endif
			    
								$parametercount++%null
							
							endif												
					}
	
	
				do decompositions
				{
					
					foreach .ComputationConstraint
						{
								do decompositions
								{	
									
									foreach .LogicalTransformation
									{							
											variable 'TransformationDefinition' append
													:expression%xml
													newline													
											close
											
															
									}
								
								}

						}
					
					
					
					foreach .TemporalConstraint
						{	
			
							newline
							'&lt;template&gt;' 
   						'&lt;name x="5" y="5"&gt;':Short name;'&lt;/name&gt;'
				
							'&lt;parameter&gt;'
							$channelListLocal
							'&lt;/parameter&gt;' newline
					
					
							'&lt;declaration&gt;' 
							'clock ' $LocalClock ';'
								
							variable 'TransformationDefinition' read					
								
							'&lt;/declaration&gt;' newline
					
							_defineState()	newline		
							_defineTranstion() 
 						
							'&lt;/template&gt;' newline
						}
				}
				
				endif
	
	}

}



endreport</report>
				<report>Report '_temporalConstraint'
newline
'&lt;TEMPORAL-CONSTRAINT&gt;' newline
'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
if :Name; &lt;&gt; '' then
	'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' newline
endif
do decompositions {
	foreach .State {
		if :IsInitialState = 'T' then
			'&lt;!-- EAXML generator for TEMPORAL-CONSTRAINT under development --&gt;' newline
			'&lt;INIT-STATE-REF TYPE="STATE"&gt;/' id%var '&lt;/INIT-STATE-REF&gt;'
		endif
	}
}
'&lt;/TEMPORAL-CONSTRAINT&gt;' 
endreport</report>
				<report>_UPPAAL\ directory()

external 'cmd /x /c cd reports\UPPAAL &amp;&amp; cd &gt; path.txt'  executeBlocking
variable 'path' write
			filename'reports\UPPAAL\path.txt' read			
close


$path%removeCRLF sep</report>
				<report>Report '_UPPAALGlobalDeclarations'

newline
'&lt;declaration&gt;' newline

	foreach &gt;BehaviorConstraintBindingAttribute
	{	
		'int ' id ';' newline
		/*'int [' :Min',':Max'] ' id ';' newline*/
		/*adding the info fr type*/
	}	
	
	
	foreach .BehaviorConstraintBindingEvent
	{	
		
		'chan ' id ';'  newline

	}	

'&lt;/declaration&gt;'newline


endreport

</report>
				<report>Report '_UPPAALXML document definitions'

'&lt;?xml version="1.0" encoding="utf-8"?&gt;&lt;!DOCTYPE nta PUBLIC ''-//Uppaal Team//DTD Flat System 1.1//EN'' ' ' ''http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd''&gt;'
endreport
</report>
				<report>__LiveCheck()
_translators()
$errorsFound = 'F'
foreach .AttributeQuantificationConstraint {
	@attribs = ' '
	do decompositions {
		foreach .(Quantification | LogicalEvent){
			local 'attribs' append oid ' ' close
		}
	}
}
foreach .TemporalConstraint {
	do decompositions; {
		foreach .State {
			do :Quantification invariant; {
				if not @attribs =~ oid%wildsp; then
					_reportWarnings()
					'Warning: ' type;1 ' is using ' id ' not defined for ' id;3
					newline
					$errorsFound = 'T'
				endif
				
			}
		}
		foreach &gt;Transition {
			do :quantificationGuard {
				if not @attribs =~ oid%wildsp; then
					_reportWarnings()
					'Warning: ' type;1 ' is using ' id; ' not defined for ' id;3 
					newline
					$errorsFound = 'T'
				endif
			}
		}
	}
}
if $errorsFound = 'F' then 
	'No errors on attribute used found' 
endif </report>
				<icon offset="40,15" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="85" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
						<defs>
							<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.581317" sym:correctGamma="true" sym:fillType="RadialFill">
								<stop offset="0" stop-color="rgb(255,255,255)"></stop>
								<stop offset="1" stop-color="rgb(0,0,128)"></stop>
							</radialGradient>
						</defs>
						<polygon fill="url(#gradient1)" points="75.8971,15 71.1111,15 69.9145,21.9139 66.3249,23.0661 62.735,17.8809 58.5468,19.6092 60.3417,25.947 56.752,28.8278 50.7692,25.3709 48.3762,28.2517 51.9658,33.4373 50.171,36.8943 42.9914,36.3178 41.7948,40.3512 47.7778,43.8081 47.1795,48.4173 40,50.7221 40.5981,54.179 47.7778,55.3312 48.9743,59.3646 42.9914,63.9738 44.7863,67.4307 51.9658,65.126 54.3591,68.5829 50.7692,74.9207 53.7606,77.8015 59.7435,73.1924 63.3333,76.0729 62.1368,82.4107 65.7264,84.1394 69.9145,77.2255 74.1026,77.8015 76.163,85 80.0859,84.7154 80.684,77.2255 84.2736,76.0729 89.0595,82.4107 92.6495,80.1063 90.8546,73.1924 93.8465,70.8876 99.8293,74.9207 102.82,71.4638 98.6324,65.126 100.427,61.669 107.009,63.3977 108.205,58.7881 102.222,54.7551 102.222,51.2981 110,49.5695 109.402,44.9604 102.222,44.9604 101.025,40.9273 107.009,36.3178 105.214,32.8609 98.0342,34.5895 96.2394,31.1326 99.2305,25.3709 96.2394,22.49 90.8546,26.523 87.2647,24.2186 88.4617,17.8809 84.2736,16.1522 81.2818,22.49 76.4959,21.9139" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
					</svg>
				</icon>
			</graph>
		</decomposition>
		<decomposition>
			<object href="#Object_EAType_sysadmin_3541158109"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
			<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
		</decomposition>
		<constraints>
			<uniqueness>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
		</constraints>
	</graph>
	<graph href="#Graph_LogicalPathDecomposition_Graph_sysadmin_3527232175"></graph>
	<graph href="#Graph_Mode_user_3506169209"></graph>
	<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
	<graph id="Graph_Behavior_user_3506169134" type="Graph_Behavior_user_3506169134" typeName="BehaviorGraph">
		<description>Behavior is a container of FunctionBehaviors. It enables grouping of the behaviors assigned to functions in a particular context on which TraceableSpecifications can be applied. </description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="a0rsfe" name="Short name" unique="false">
			<property href="#Property_2ECUName_user_3310972947"></property>
		</slot>
		<slot id="a2jxrg" name="Name" unique="false">
			<property href="#Property_Name_sysadmin_3536998876"></property>
		</slot>
		<slot id="a1d9xk" name="Description" unique="false">
			<property href="#Property_2Description_user_3310902697"></property>
		</slot>
		<identReport>_name()</identReport>
		<object id="Object_FunctionBehavior_sysadmin_3548184664" type="Object_FunctionBehavior_sysadmin_3548184664" typeName="FunctionBehavior">
			<description>FunctionBehavior represents the behavior of a particular FunctionType - referred to by the association to FunctionType. The representation property indicates the kind of representation used to describe the behavior. The representation itself (e.g., defined in an external model file) is identified by a URL String in the path property. If the representation is provided in the same model file as the system itself, the path property is not used. It is merely a placeholder for the purpose of containing information about and links to the external behavioral model.</description>
			<slot id="jmjy5l" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="jhztgx" name="Short name" unique="false">
				<property type="Property_FunctionBehaviorName_sysadmin_3548184568" typeName="FunctionBehaviorName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="jnjy8i" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="jiztif" name="Representation" unique="false">
				<property type="Property_Representation_user_3506846815" typeName="FunctionBehaviorRepresentation">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>Other</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>Other</string>
						<string>StateMate</string>
						<string>SciLab</string>
						<string>MARTE</string>
						<string>UML</string>
						<string>Scade</string>
						<string>SDL</string>
						<string>Simulink</string>
					</listValues>
				</property>
			</slot>
			<slot id="jjztjb" name="Path" unique="false">
				<property type="Property_Path_user_3486109396" typeName="Path">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>External Element</widget>
				</property>
			</slot>
			<slot id="jkztju" name="Function" unique="false">
				<property href="#Property_functionType_sysadmin_3548178813"></property>
			</slot>
			<slot id="jlztka" name="Mode" unique="false">
				<property id="Property_mode_sysadmin_3548182298" type="Property_mode_sysadmin_3548182298" typeName="Mode">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Mode_sysadmin_3509262593"></object>
					</contentsDataType>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="10,10 170,10 170,80 10,80 10,10" targetPointX="90" targetPointY="45" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="80" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
					<rect fill="none" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="10" y="10">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="160" x="10" y="10">
						FunctionBehavior
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="10" y="10">
						ReportTextSource:id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="10,10" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 30,30" startDistance="5"></layoutPath>
						</pathLayout>
						<generatorNPSource>oid</generatorNPSource>
						<librarySubsymbolSource>FunctionBehavior</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
				</svg>
			</objectSymbol>
			<icon offset="60,20" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="80" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.414286" cy="0.416667" gradientUnits="objectBoundingBox" id="gradient1" r="0.747241" sym:correctGamma="true" sym:fillType="RadialFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="0.179862" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(0,0,0)"></stop>
						</radialGradient>
					</defs>
					<polygon fill="url(#gradient1)" points="95.897,20 91.1111,20 89.9145,25.9263 86.3248,26.9139 82.735,22.4693 78.547,23.9508 80.3418,29.3832 76.7521,31.8524 70.7692,28.8894 68.3761,31.3586 71.9659,35.8033 70.1709,38.7664 62.9914,38.2725 61.7948,41.7295 67.7778,44.6926 67.1795,48.6434 60,50.6188 60.5983,53.582 67.7778,54.5696 68.9743,58.0267 62.9914,61.9774 64.7863,64.9406 71.9659,62.9651 74.359,65.9283 70.7692,71.3607 73.7607,73.8299 79.7435,69.8791 83.3333,72.3483 82.1368,77.7807 85.7265,79.2623 89.9145,73.336 94.1025,73.8299 96.1632,80 100.086,79.7561 100.684,73.336 104.274,72.3483 109.06,77.7807 112.65,75.8053 110.855,69.8791 113.846,67.9037 119.829,71.3607 122.82,68.3975 118.632,62.9651 120.427,60.002 127.009,61.4836 128.205,57.5328 122.222,54.0758 122.222,51.1127 130,49.6311 129.402,45.6803 122.222,45.6803 121.025,42.2234 127.009,38.2725 125.214,35.3094 118.034,36.791 116.239,33.8279 119.23,28.8894 116.239,26.4201 110.855,29.877 107.265,27.9016 108.462,22.4693 104.274,20.9877 101.282,26.4201 96.4959,25.9263" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
				</svg>
			</icon>
		</object>
		<object id="Object_FunctionTrigger_sysadmin_3548182640" type="Object_FunctionTrigger_sysadmin_3548182640" typeName="FunctionTrigger">
			<description>FunctionTrigger represents the triggering parameters necessary to define the execution of an identified FunctionType or FunctionPrototype. When referring to a FunctionType, a FunctionTrigger applies to all FunctionPrototypes of the given type. When referring to a FunctionPrototype, the trigger is only valid for this particular FunctionPrototype.</description>
			<slot id="a7jyip" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="a0zrjr" name="Short name" unique="false">
				<property type="Property_TriggerName_sysadmin_3548183323" typeName="TriggerName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="a8jyjw" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="a9j6i4" name="Type" unique="false">
				<property href="#Property_TimingExpression_sysadmin_3615040358"></property>
			</slot>
			<slot id="a2zrc7" name="TriggerPolicy" unique="false">
				<property type="Property_TrigPolicyKind_user_3399897002" typeName="triggerPolicyKind">
					<description>Defines the triggering policy, either EVENT or TIME. The function event refers to the activation of the functions. If set to EVENT, one or several ports of the Function triggers the fuction, i.i. activates the function.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>EVENT</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>EVENT</string>
						<string>TIME</string>
					</listValues>
				</property>
			</slot>
			<slot id="a3zrex" name="Mode" unique="false">
				<property href="#Property_mode_sysadmin_3548182298"></property>
			</slot>
			<slot id="a4zrgt" name="Function" unique="false">
				<property href="#Property_functionType_sysadmin_3548178813"></property>
			</slot>
			<slot id="a5zrpq" name="FunctionPrototype" unique="false">
				<property href="#Property_function_sysadmin_3548178696"></property>
			</slot>
			<slot id="aamtn0" name="Port" unique="false">
				<property type="Property_InFlowPorts_user_3619265094" typeName="InFlowPorts">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_ADLInFlowPort_user_3402566388"></object>
					</contentsDataType>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="50,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="50,60 220,60 220,160 50,160 50,60" targetPointX="135" targetPointY="110" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="160" version="1.2" width="220" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="150" x="70" y="60">
						FunctionTrigger
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="170" x="50" y="60">
						ReportTextSource:newline
'	' id
newline
' policy: ':TriggerPolicy
if :Function &lt;&gt; '' then
	do :Function { 
		newline 
     ' Target function: ' 
		do decompositions { id }
	}
endif
if :FunctionPrototype&lt;&gt;'' then
	do :FunctionPrototype { 
		newline 
     ' Target function prototype: 'id
	}
endif

if :Port &lt;&gt; '' then
	newline
	' Target port(s): '
	dowhile :Port { 
		id ', '
	}
endif

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<rect fill="none" height="100" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="170" x="50" y="60">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="50,60" startDistance="0">
							<layoutPath allocation="start" layoutDistance="999" lineSegmentTable="true" points="0,0 20,20" startDistance="6"></layoutPath>
						</pathLayout>
						<generatorNPSource>oid</generatorNPSource>
						<librarySubsymbolSource>FunctionTrigger</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
				</svg>
			</objectSymbol>
			<icon offset="20,10" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="60" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
					<g fill="none" stroke="rgb(0,128,0)" sym:height="50" sym:width="60" sym:x="2.0e1" sym:y="1.0e1">
						<polygon fill="rgb(0,128,0)" points="20,40 50,10 80,40 50,25" stroke="rgb(0,128,0)" stroke-width="1"></polygon>
						<line stroke="rgb(0,128,0)" stroke-width="7" x1="50" x2="50" y1="20" y2="50"></line>
						<polyline fill="none" points="50,40 50,50 35,40 35,60" stroke="rgb(0,128,0)" stroke-width="7"></polyline>
					</g>
				</svg>
			</icon>
		</object>
		<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
		<object id="Object_ModeGroup_sysadmin_3548182302" type="Object_ModeGroup_sysadmin_3548182302" typeName="ModeGroup">
			<description>The ModeGroup defines a set of modes of which exactly one is active if precondition is true and otherwise none is active.</description>
			<slot id="jhjyxm" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="jdzpt4" name="Short name" unique="false">
				<property href="#Property_Mode_name_sysadmin_3509258627"></property>
			</slot>
			<slot id="jijyxz" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="jjiqf7" name="Precondition" unique="false">
				<property href="#Property_Condition_sysadmin_3509258696"></property>
			</slot>
			<slot id="jezpys" name="Mode" unique="false">
				<property href="#Property_mode_sysadmin_3548182298"></property>
			</slot>
			<slot id="jfzpux" name="Condition" unique="false">
				<property href="#Property_Condition_sysadmin_3509258696"></property>
			</slot>
			<slot id="jgzpx0" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="37,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="180.25,110.124 179.489,117.73 177.321,124.179 174.077,128.487 170.25,130 50,130 46.1732,128.487 42.9289,124.179 40.7612,117.73 40,110.124 40,69.8758 40.7612,62.2697 42.9289,55.8214 46.1732,51.5129 50,50 170.25,50 174.077,51.5129 177.321,55.8214 179.489,62.2697 180.25,69.8758 180.25,110.124" targetPointX="110.125" targetPointY="90" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="134" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(96,96,96)" height="80" rx="10" ry="10" stroke="rgb(128,128,128)" stroke-width="1" width="140" x="37" y="54">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(192,224,255)" height="80" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="140" x="40" y="50">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="137" x="40" y="50">
						ModeGroup
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="136" x="44" y="50">
						ReportTextSource:newline
id; newline
dowhile :Mode { id ', ' }
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="20,20" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="80" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(192,224,255)" height="49" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="60" x="20" y="31"></rect>
					<rect fill="rgb(192,224,255)" height="49" rx="10" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="60" x="30" y="20"></rect>
				</svg>
			</icon>
		</object>
		<object href="#Object_EAType_sysadmin_3541158109"></object>
		<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
		<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
		<object href="#Object_Joker_user_3399887441"></object>
		<relationship href="#Relationship_Comment_user_3460793460"></relationship>
		<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
		<role href="#Role_Comment_user_3460793566"></role>
		<role href="#Role_referred_from_sysadmin_3524947545"></role>
		<role href="#Role_refer_to_sysadmin_3524947529"></role>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_FunctionBehavior_sysadmin_3548184664"></object>
				<object href="#Object_FunctionTrigger_sysadmin_3548182640"></object>
				<object href="#Object_ModeGroup_sysadmin_3548182302"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_FunctionBehavior_sysadmin_3548184664"></object>
				<object href="#Object_FunctionTrigger_sysadmin_3548182640"></object>
				<object href="#Object_ModeGroup_sysadmin_3548182302"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
			</connection>
		</binding>
		<decomposition>
			<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
			<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
		</decomposition>
		<decomposition>
			<object href="#Object_EAType_sysadmin_3541158109"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
			<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
		</decomposition>
		<decomposition>
			<object href="#Object_FunctionBehavior_sysadmin_3548184664"></object>
			<graph href="#Graph_Mode_user_3506169209"></graph>
		</decomposition>
		<report>
			!Check()
subreport '_translators' run 
'Warnings:' newline
$warnings = '0'
$LiveCheck = 'F' /* calls reports not to run via liveCheck pane */

/* Checking for legal path hierarchy */
_LegalTypePath()

_checkings()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif

			<icon offset="79,68" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
							<stop offset="1" stop-color="rgb(0,192,0)"></stop>
						</radialGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
					<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>_checkings()
/* Checkings for the BehaviorGraph */
_modeGroups()
_FunctionTriggerChecks()
</report>
		<report>_elements()
'&lt;ELEMENTS&gt;'
if type = 'BehaviorGraph' AND (not $reported_models =~ oid%wildsp) then
	variable 'reported_models' append oid ' ' close
	newline
	'&lt;!-- BEHAVIOR name: ' 
	if :Name &lt;&gt; '' then
		:Name ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;BEHAVIOR UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline endif
	_description()
	_modeGroup()
	_functionBehaviors()
	_functionTriggers()
	'&lt;/BEHAVIOR&gt;' newline
endif
'&lt;/ELEMENTS&gt;' newline
</report>
		<report>_functionBehaviors()
'&lt;BEHAVIORS&gt;' newline
foreach .FunctionBehavior 
{	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' type%minus%upper ' name: ' 
	if @nameValue; then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;FUNCTION-BEHAVIOR&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue; then '&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline endif
	'&lt;PATH&gt;' :Path '&lt;/PATH&gt;' newline
	'&lt;REPRESENTATION&gt;' :Representation%upper '&lt;/REPRESENTATION&gt;' newline
	'&lt;MODE-REFS&gt;' newline
	do :Mode 
	{		'&lt;MODE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/MODE-REF&gt;' newline	} 
	'&lt;/MODE-REFS&gt;' newline
	do :Function 
	{	do decompositions 
		{	'&lt;FUNCTION-REF TYPE="' :Type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-REF&gt;' newline }
	}
	'&lt;/FUNCTION-BEHAVIOR&gt;' newline
}
'&lt;/BEHAVIORS&gt;' newline</report>
		<report>_FunctionTriggerChecks()
/* FunctionTrigger checks */
foreach .(FunctionTrigger) 
{	@ports = '0'
	do :Port 
	{ @ports++%null }
	if not :Type; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; has undefined Type property.' newline
	endif
	if :TriggerPolicy = 'EVENT' then 
		if @ports = '0' then
			_reportWarnings()
			'Warning: ' id ' &lt;' type '&gt; has TriggerPolicy defined as EVENT, but does not have any port defined.' newline
		endif
	endif
	if :TriggerPolicy = 'TIME' then 
		if @ports &lt;&gt; '0' then
			_reportWarnings()
			'Warning: ' id ' &lt;' type '&gt; has TriggerPolicy defined as TIME, so the port shouldn''t be defined.' newline
		endif
	endif
	if :Function &lt;&gt; '' and :FunctionPrototype &lt;&gt; '' then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; has both Function or a FunctionPrototype defined, either one is allowed, not both of them!' newline
	endif
}</report>
		<report>_functionTriggers()
'&lt;FUNCTION-TRIGGERS&gt;' newline
foreach .FunctionTrigger 
{	local 'nameValue' write :Name;%xml close 
	'&lt;!-- ' type%minus%upper ' name: ' 
	if @nameValue; then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;FUNCTION-TRIGGER&gt;' newline
	do :Type { _typetref() }
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue; then '&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline endif
	_description()
	'&lt;TRIGGER-POLICY&gt;' :TriggerPolicy; '&lt;/TRIGGER-POLICY&gt;' newline

	do :Function 
	{	do decompositions 
		{	'&lt;FUNCTION-REF TYPE="' :Type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-REF&gt;' newline }
	}

	/* When modes exists, port is empty */
	if :Mode &lt;&gt; '' and :Port = ''; then
		'&lt;MODE-REFS&gt;' newline
		do :Mode 
		{	'&lt;MODE-REF TYPE="MODE"&gt;' variable oid '_path' read '&lt;/MODE-REF&gt;' newline } 
		'&lt;/MODE-REFS&gt;' newline
		do :FunctionPrototype 
		{ '&lt;FUNCTION-PROTOTYPE-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-REF&gt;' newline 
		}
		if :Port; then
			'&lt;PORT-REFS&gt;' newline
			do :Port 
			{	'&lt;PORT-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/PORT-REF&gt;' newline 
			}
			'&lt;/PORT-REFS&gt;' newline
		endif
	endif
	
	/* When mode is empty, port exists */
	if :Mode = '' and :Port &lt;&gt; ''; then
		do :FunctionPrototype 
		{	'&lt;FUNCTION-PROTOTYPE-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-REF&gt;' newline 
		}
		if :Port; then
			'&lt;PORT-REFS&gt;' newline
			do :Port 
			{	'&lt;PORT-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/PORT-REF&gt;' newline 	}
			'&lt;/PORT-REFS&gt;' newline
		endif
	endif

	/* When both mode and port are empty */
	if :Mode &lt;&gt; '' and :Port &lt;&gt; ''; then
		do :FunctionPrototype 
		{ '&lt;FUNCTION-PROTOTYPE-REF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/FUNCTION-PROTOTYPE-REF&gt;' newline 
		}
	endif
	'&lt;/FUNCTION-TRIGGER&gt;' newline
}
'&lt;/FUNCTION-TRIGGERS&gt;' newline</report>
		<report>_modeGroup()
'&lt;MODE-GROUPS&gt;' newline
foreach .ModeGroup 
{	'&lt;!-- ' type%minus%upper ' name: '
	if @nameValue; then
		@nameValue ' (' :Short name; ')'
	else
		:Short name%var
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;MODE-GROUP&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline endif
	_description()
	'&lt;PRECONDITION&gt;' :Precondition%xml'&lt;/PRECONDITION&gt;' newline
	'&lt;MODES&gt;' newline
	do :Mode 
	{	'&lt;MODE&gt;' newline
		local 'nameValue' write :Name;%xml close 
		'&lt;!-- ' type%upper ' name: '
		if @nameValue; then
			@nameValue ' (' :Short name; ')'
		else
			:Short name%var
		endif
		' --&gt;' newline
		'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
		'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
		if :Name; then '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline endif
		_description()
		'&lt;CONDITION&gt;' :Condition%xml '&lt;/CONDITION&gt;' newline
		'&lt;/MODE&gt;' newline
	}
	'&lt;/MODES&gt;' newline
'&lt;/MODE-GROUP&gt;' newline
}
'&lt;/MODE-GROUPS&gt;' newline
</report>
		<report>_modeGroups()


/* Mode can belong max to one mode group */
$modesFound = ' '
foreach .ModeGroup 
{	
	do :Mode 
	{	if not $modesFound =~ oid%wildsp then
			variable 'modesFound' append oid ' ' close
		else
			_reportWarnings()
			'Warning: Mode ' id ' is is part of several ModeGroups. It can belong to only one Group.' newline
		endif
	}
	if :Mode = '' then
		_reportWarnings()
		'Warning: ModeGroup ' id ' &lt;' type '&gt; has no any Mode(s) defined. Create or reuse at least one!' newline
	endif
}</report>
		<report>_typetref()
do :Type 
{	'&lt;TYPE-TREF TYPE="' type%minus%upper '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline }</report>
		<report>__LiveCheck()
_translators()
$warnings = '0'
$LiveCheck = 'T'

_checkings()

if $warnings = '0' then
	'No warnings' newline
endif</report>
		<constraints>
			<connectivity>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<max>1</max>
			</connectivity>
			<uniqueness>
				<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_FunctionBehavior_sysadmin_3548184664"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_FunctionTrigger_sysadmin_3548182640"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_ModeGroup_sysadmin_3548182302"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
		</constraints>
		<icon offset="35,15" xmlns="http://www.metacase.com/icon">
			<svg baseProfile="tiny" height="85" version="1.2" width="105" xmlns="http://www.w3.org/2000/svg">
				<defs>
					<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="1.71163" sym:correctGamma="true" sym:fillType="RadialFill">
						<stop offset="0" stop-color="rgb(255,255,255)"></stop>
						<stop offset="0.118667" stop-color="rgb(255,255,255)"></stop>
						<stop offset="1" stop-color="rgb(0,0,0)"></stop>
					</radialGradient>
				</defs>
				<polygon fill="url(#gradient1)" points="70.8971,15 66.1111,15 64.9145,21.9139 61.3249,23.0661 57.7349,17.8809 53.5469,19.6092 55.3417,25.947 51.752,28.8278 45.7692,25.3709 43.3762,28.2517 46.9658,33.4373 45.171,36.8943 37.9914,36.3178 36.7948,40.3512 42.7778,43.8081 42.1795,48.4173 35,50.7221 35.5981,54.179 42.7778,55.3312 43.9744,59.3646 37.9914,63.9738 39.7863,67.4307 46.9658,65.1259 49.3591,68.5829 45.7692,74.9207 48.7606,77.8015 54.7435,73.1924 58.3333,76.0729 57.1368,82.4107 60.7264,84.1393 64.9145,77.2255 69.1026,77.8015 71.163,85 75.0858,84.7154 75.684,77.2255 79.2736,76.0729 84.0595,82.4107 87.6495,80.1063 85.8546,73.1924 88.8465,70.8876 94.8293,74.9207 97.8201,71.4638 93.6324,65.1259 95.4272,61.669 102.009,63.3977 103.205,58.7881 97.2223,54.7551 97.2223,51.2981 105,49.5695 104.402,44.9604 97.2223,44.9604 96.0253,40.9273 102.009,36.3178 100.214,32.8608 93.0342,34.5895 91.2394,31.1326 94.2305,25.3709 91.2394,22.49 85.8546,26.523 82.2647,24.2187 83.4617,17.8809 79.2736,16.1522 76.2818,22.49 71.4959,21.9139" stroke="rgb(0,0,0)" stroke-width="0"></polygon>
			</svg>
		</icon>
	</graph>
	<graph id="Graph_Dependability_sysadmin_3509190231" type="Graph_Dependability_sysadmin_3509190231" typeName="Dependability">
		<description>EAST-ADL version M2.1.12
The collection of dependability related information. This includes safety requirements, safety cases, safety constraints, and error modeling. This collection can be used across the EAST-ADL abstraction levels.</description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="b4k90f" name="Short name" unique="false">
			<property href="#Property_2ModelName_user_3310896462"></property>
		</slot>
		<slot id="b9c07d" name="Name" unique="false">
			<property href="#Property_Name_sysadmin_3536998876"></property>
		</slot>
		<slot id="b5k90q" name="Description" unique="false">
			<property href="#Property_Model_description_user_3399887679"></property>
		</slot>
		<slot id="b7oh1m" name="Datatypes" unique="false">
			<property type="Property_Datatypes_sysadmin_3537002405" typeName="Datatypes">
				<description></description>
				<dataType>
					<simpleType>Collection</simpleType>
				</dataType>
				<contentsDataType>
					<object href="#Object__EADatatype_sysadmin_3536996100"></object>
				</contentsDataType>
				<contentsDataTypeSubtype>
					<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
				</contentsDataTypeSubtype>
				<contentsDataTypeSubtype>
					<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
				</contentsDataTypeSubtype>
				<contentsDataTypeSubtype>
					<object href="#Object_EABoolean_sysadmin_3536996172"></object>
				</contentsDataTypeSubtype>
				<contentsDataTypeSubtype>
					<object href="#Object_EANumerical_sysadmin_3536996437"></object>
				</contentsDataTypeSubtype>
				<contentsDataTypeSubtype>
					<object href="#Object_EAString_sysadmin_3536996221"></object>
				</contentsDataTypeSubtype>
				<contentsDataTypeSubtype>
					<object href="#Object_Enumeration_sysadmin_3536996326"></object>
				</contentsDataTypeSubtype>
				<contentsDataTypeSubtype>
					<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
				</contentsDataTypeSubtype>
			</property>
		</slot>
		<identReport>_name()</identReport>
		<object href="#Object_EAType_sysadmin_3541158109"></object>
		<object id="Object_Item_sysadmin_3509259179" type="Object_Item_sysadmin_3509259179" typeName="Item">
			<description>Item represents the scope of safety information and the safety assessment through its reference to one or several Features.</description>
			<slot id="hm2cb5" name="Name" unique="false">
				<property type="Property_ItemName_sysadmin_3509612264" typeName="ItemName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="hln75v" name="DevelopmentCategory" unique="false">
				<property type="Property_DevelopmentCategory_sysadmin_3509259009" typeName="DevelopmentCategory">
					<description>DevelopmentCategoryKind is an enumeration with enumeration literals indicating whether the item 
is a modification of an existing item or if it is a new development.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>New</string>
					</defaultValue>
					<widget>Radio Button Set</widget>
					<listValues>
						<string>New</string>
						<string>Modification</string>
					</listValues>
				</property>
			</slot>
			<slot id="hodn8l" name="Features" unique="false">
				<property type="Property_Features_sysadmin_3548507121" typeName="Features">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_Feature_user_3399887361"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_VehicleFeature_user_3400133821"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<identProp slotID="hm2cb5"></identProp>
			<objectSymbol offset="80,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="79.75,39.75 190,39.75 190,80 79.75,80 79.75,39.75" targetPointX="134.875" targetPointY="59.875" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="82" version="1.2" width="192" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(0,0,128)" height="40" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="110" x="82" y="42">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(224,239,255)" height="40" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="110" x="80" y="40">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="110" x="80" y="40">
						PropertyTextSource:hm2cb5
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="110" x="80" y="40">
						
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object href="#Object_Hazard_sysadmin_3509606795"></object>
		<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
		<object id="Object_SafetyGoal_sysadmin_3509260841" type="Object_SafetyGoal_sysadmin_3509260841" typeName="SafetyGoal">
			<description>SafetyGoal represents the top-level safety requirement defined in ISO26262. Its purpose is to define how to avoid its associated HazardousEvents, or reduce the risk associated with the hazardous event to an acceptable level. The SafetyGoal is defined through one or several associated requirement elements.</description>
			<slot id="hwc8zw" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="hrn9x6" name="Short name" unique="false">
				<property type="Property_Goal_name_sysadmin_3509260797" typeName="Goal name">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="hxc906" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="htn9y2" name="Safety level" unique="false">
				<property href="#Property_ASIL_sysadmin_3509191183"></property>
			</slot>
			<slot id="hun9z9" name="SafeState" unique="false">
				<property type="Property_SafeState_sysadmin_3509260833" typeName="SafeState">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="hvzsn0" name="Safe modes" unique="false">
				<property href="#Property_mode_sysadmin_3548182298"></property>
			</slot>
			<slot id="hsn9xk" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="70,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="230,120 229.543,123.827 228.243,127.071 226.296,129.239 224,130 75.75,130 73.4539,129.239 71.5074,127.071 70.2067,123.827 69.75,120 69.75,49.75 70.2067,45.9232 71.5074,42.6789 73.4539,40.5112 75.75,39.75 224,39.75 226.296,40.5112 228.243,42.6789 229.543,45.9232 230,49.75 230,120" targetPointX="149.875" targetPointY="84.875" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="132" version="1.2" width="232" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(0,128,0)" height="90" rx="6" ry="10" stroke="rgb(0,128,0)" stroke-width="1" width="160" x="72" y="42">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(192,255,192)" height="90" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="70" y="40">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="160" x="70" y="40">
						ReportTextSource:newline
newline

'ASIL=' :Safety level; newline
'SafeState=' 
if :SafeState; then :SafeState 
else 'none' 
endif
newline

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="230.071,130.071" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,-20" startDistance="8"></layoutPath>
						</pathLayout>
						<generatorNPSource>oid</generatorNPSource>
						<librarySubsymbolSource>Goal</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="70" y="40">
						ReportTextSource:newline
id;

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="92" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="160" x="70" y="40">
						SafetyGoal
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_FunctionalSafetyConcept_sysadmin_3509272774" type="Object_FunctionalSafetyConcept_sysadmin_3509272774" typeName="SafetyConcept">
			<description>SafetyConcept describes either technical or functional safety concepts. TechnicalSafetyConcept represents the set of technical safety requirements that together fulfils a FunctionalSafetyConcept and SafetyGoal in accordance with ISO 26262. FunctionalSafetyConcept represents the set of functional safety requirements that together fulfils a SafetyGoal in accordance with ISO 26262.</description>
			<slot id="i9c92z" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="i6nsdn" name="Short name" unique="false">
				<property type="Property_SafetyConceptName_sysadmin_3509272757" typeName="SafetyConceptName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="iac93b" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="i7ntmg" name="SafetyType" unique="false">
				<property type="Property_SafetyType_sysadmin_3509273564" typeName="SafetyType">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>Functional</string>
					</defaultValue>
					<widget>Radio Button Set</widget>
					<listValues>
						<string>Functional</string>
						<string>Technical</string>
					</listValues>
				</property>
			</slot>
			<slot id="i8d829" name="Requirements" unique="false">
				<property type="Property_Requirements_user_3548497288" typeName="Requirements">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
					</contentsDataType>
					<contentsDataTypeSubtype>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
					</contentsDataTypeSubtype>
				</property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif ': ' :SafetyType;</identReport>
			<objectSymbol offset="70,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="230.25,74.5147 229.793,80.5363 228.493,85.6413 226.546,89.0522 224.25,90.25 75.25,90.25 72.9539,89.0522 71.0074,85.6413 69.7067,80.5363 69.25,74.5147 69.25,25.7353 69.7067,19.7137 71.0074,14.6087 72.9539,11.1978 75.25,10 224.25,10 226.546,11.1978 228.493,14.6087 229.793,19.7137 230.25,25.7353 230.25,74.5147" targetPointX="149.75" targetPointY="50.125" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="90" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,239,224)" height="80" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="0" width="160" x="70" y="10">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="70" y="10">
						ReportTextSource::SafetyType 'SafetyConcept' newline
id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="24" subsymbolExtentY="24" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="228,90" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,-20" startDistance="8"></layoutPath>
						</pathLayout>
						<generatorNPSource>oid</generatorNPSource>
						<librarySubsymbolSource>Safety</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="160" x="70" y="10">
						ReportTextSource:newline; newline
dowhile :Requirements {
	id newline
}
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_SafetyCase_sysadmin_3509623444" type="Object_SafetyCase_sysadmin_3509623444" typeName="SafetyCase">
			<description>SafetyCase represents a safety case that communicates a clear, comprehensive and defensible argument that a system is acceptably safe to operate in a given context. Safety case following ISO26262 can be defined in a subgraph called Safety Case.</description>
			<identReport>'Safety case'</identReport>
			<objectSymbol offset="80,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="79.75,49.75 200,49.75 200,120 79.75,120 79.75,49.75" targetPointX="139.875" targetPointY="84.875" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="120" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,255,255)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="120" x="80" y="50">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="10" sym:width="120" sym:x="8.0e1" sym:y="5.0e1">
						<rect fill="rgb(255,255,0)" height="10" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="120" x="80" y="50">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</rect>
						<polygon fill="rgb(0,0,0)" points="90,50 80,60 80,50" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="100,50 90,60 100,60 110,50" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="120,50 110,60 120,60 130,50" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="140,50 130,60 140,60 150,50" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="160,50 150,60 160,60 170,50" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="180,50 170,60 180,60 190,50" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<polygon fill="rgb(0,0,0)" points="200,50 190,60 200,60" stroke="rgb(0,0,0)" stroke-width="1">
							<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
						</polygon>
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</g>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="120" x="80" y="60">
						ReportTextSource:if explosions; then
	'Safety cases:' newline
	dowhile explosions  {
			id 
			', '
	}
else
	'Undefined safety case'
endif

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_SafetyConstraint_sysadmin_3509191187" type="Object_SafetyConstraint_sysadmin_3509191187" typeName="SafetyConstraint">
			<description>The SafetyConstraint represents the qualitative integrity constraints on a fault or failure. Thus, the system has the same or better performance with respect to the constrained fault or failure, and depending on the role this is either a requirement or a property. A SafetyConstraint defines qualitative bounds on the constrainedFaultFailure in terms of safety integrity level, asilValue.</description>
			<slot id="hic9a4" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="hekadj" name="Short name" unique="false">
				<property id="Property_SafetyName_sysadmin_3509191107" type="Property_SafetyName_sysadmin_3509191107" typeName="SafetyName">
					<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="hjc9af" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="hfkahq" name="Safety level" unique="false">
				<property href="#Property_ASIL_sysadmin_3509191183"></property>
			</slot>
			<slot id="hhro04" name="Text" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="60,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="70,30 60,80 180,80 190,30 70,30" targetPointX="125" targetPointY="55" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="80" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="130" x="60" y="30">
						ReportTextSource:newline; id newline
'ASIL=' :Safety level; newline
_symUserDefinedAttributeValues()
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<polygon fill="none" points="70,30 60,80 180,80 190,30" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="114" x="70" y="30">
						ReportTextSource:type
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_QuantitativeSafetyConstraint_sysadmin_3509265098" type="Object_QuantitativeSafetyConstraint_sysadmin_3509265098" typeName="QuantitativeSafetyConstraint">
			<description>QuantitativeSafetyConstraint represents the quantitative integrity constraints on a fault or failure. Thus, the system has the same or better performance with respect to the constrained fault or failure, and depending on the role this is either a requirement or a property. A QuantitativeSafetyConstraint provides information about the probabilistic estimates of target faults/failures, further specified by the failureRate and repairRate attribute.</description>
			<slot id="i3c9eg" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="hynghh" name="Short name" unique="false">
				<property href="#Property_SafetyName_sysadmin_3509191107"></property>
			</slot>
			<slot id="i4c9eq" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="hzngi4" name="FailureRate" unique="false">
				<property type="Property_FailureRate_sysadmin_3509265062" typeName="FailureRate">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="i0ngja" name="RepairRate" unique="false">
				<property type="Property_RepairRate_sysadmin_3509265083" typeName="RepairRate">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="i2ro2q" name="Text" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="70,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="80.7692,39 70,89 199.231,89 210,39 80.7692,39" targetPointX="140" targetPointY="64" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="90" version="1.2" width="210" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,224,192)" points="80.7692,40 70,90 199.231,90 210,40" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="70" y="40">
						ReportTextSource:newline
id 
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="italic" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="140" x="70" y="40">
						QuantitativeSafetyConstraint
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_UseCase_user_3462616740" type="Object_UseCase_user_3462616740" typeName="UseCase">
			<description>A UseCase identifies a usage of its corresponding system. </description>
			<slot id="go3sbs" name="Name" unique="false">
				<property type="Property_UseCase_name_user_3462616724" typeName="UseCase name">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="gp3sck" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identProp slotID="go3sbs"></identProp>
			<objectSymbol offset="100,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="222.5,76 222.31,73.1362 221.743,70.2901 220.801,67.4792 219.49,64.7209 217.819,62.0321 215.797,59.4293 213.437,56.9288 210.755,54.5458 207.765,52.2952 204.487,50.1906 200.941,48.2452 197.149,46.4709 193.134,44.8786 188.92,43.4783 184.535,42.2784 180.004,41.2864 175.357,40.5085 170.621,40 165.825,40 161,40 156.175,40 151.379,40 146.643,40.5085 141.996,41.2864 137.465,42.2784 133.08,43.4783 128.866,44.8786 124.851,46.4709 121.059,48.2452 117.513,50.1906 114.235,52.2951 111.246,54.5458 108.563,56.9288 106.203,59.4293 104.181,62.0321 102.51,64.7209 101.199,67.4792 100.257,70.2901 100,73.1362 100,76 100,78.8638 100.257,81.7098 101.199,84.5207 102.51,87.2791 104.181,89.9679 106.203,92.5706 108.563,95.0712 111.246,97.4542 114.235,99.7048 117.513,101.809 121.059,103.755 124.851,105.529 128.866,107.121 133.08,108.522 137.465,109.722 141.995,110.714 146.643,111.492 151.379,112.051 156.175,112.388 161,112.5 165.825,112.388 170.621,112.051 175.357,111.492 180.004,110.714 184.535,109.722 188.92,108.522 193.134,107.121 197.149,105.529 200.941,103.755 204.487,101.809 207.765,99.7048 210.755,97.4542 213.437,95.0712 215.797,92.5707 217.819,89.9679 219.49,87.2791 220.801,84.5208 221.743,81.7099 222.31,78.8638 222.5,76" targetPointX="161" targetPointY="76" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="115" version="1.2" width="226" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.630081" cy="0.59589" gradientUnits="objectBoundingBox" id="gradient1" r="0.809429" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(128,192,255)"></stop>
							<stop offset="0.740865" stop-color="rgb(192,224,255)"></stop>
							<stop offset="1" stop-color="rgb(255,255,255)"></stop>
						</radialGradient>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient2" r="0.70711" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(192,224,255)"></stop>
						</radialGradient>
					</defs>
					<ellipse cx="164.5" cy="78.5" fill="url(#gradient1)" rx="61.5" ry="36.5" stroke="none" stroke-width="0" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</ellipse>
					<ellipse cx="161.5" cy="76.5" fill="url(#gradient2)" rx="61.5" ry="36.5" stroke="rgb(128,128,255)" stroke-width="0" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</ellipse>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="100" x="110" y="50">
						PropertyTextSource:go3sbs
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_Actor_user_3610197079" type="Object_Actor_user_3610197079" typeName="Actor">
			<description>Actor represents a type of role played by an entity that interacts with the Use case.</description>
			<slot id="lnu3ma" name="__UUID" unique="false">
				<property href="#Property___UUID_sysadmin_3604668056"></property>
			</slot>
			<slot id="lou3mk" name="Short name" unique="false">
				<property href="#Property_2ECUName_user_3310972947"></property>
			</slot>
			<slot id="lpu3mt" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="lqu3n2" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identReport>if :Name; then :Name; else :Short name; endif</identReport>
			<objectSymbol offset="30,70" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="65,70 75,70 85,100 110,100 110,115 30,115 30,100 55,100 65,70" targetPointX="70" targetPointY="90" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="130" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="40" subsymbolExtentY="45" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="70,100" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 0,-30" startDistance="10"></layoutPath>
						</pathLayout>
						<noneNPSource></noneNPSource>
						<librarySubsymbolSource>Actor</librarySubsymbolSource>
						<metaInfo></metaInfo>
					</template>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="30" y="100">
						ReportTextSource:id
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
			<icon offset="50,30" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="75.76" version="1.2" width="76.4" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.342857" cy="0.225" gradientUnits="objectBoundingBox" id="gradient1" r="1.12887" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(0,128,0)"></stop>
						</radialGradient>
						<radialGradient cx="0.348485" cy="0.351852" gradientUnits="objectBoundingBox" id="gradient2" r="0.919004" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(0,128,0)"></stop>
						</radialGradient>
					</defs>
					<g fill="none" stroke="rgb(0,128,0)" stroke-width="0" sym:height="45.76" sym:width="26.4" sym:x="5.0e1" sym:y="3.0e1">
						<ellipse cx="63.2" cy="60.36" fill="url(#gradient1)" rx="13.2" ry="15.4" stroke="rgb(0,128,0)" stroke-width="0" sym:startAngle="1.8e2" sym:sweepAngle="1.8e2"></ellipse>
						<ellipse cx="63.2" cy="37.48" fill="url(#gradient2)" rx="6.6" ry="7.48" stroke="rgb(0,128,0)" stroke-width="0" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
					</g>
				</svg>
			</icon>
		</object>
		<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
		<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
		<object href="#Object_Feature_user_3399887361"></object>
		<object href="#Object_VehicleFeature_user_3400133821"></object>
		<object href="#Object_ADLRequirement_user_3400763726"></object>
		<object href="#Object_QualityRequirement_user_3400822352"></object>
		<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
		<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
		<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
		<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
		<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
		<object href="#Object_Joker_user_3399887441"></object>
		<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
		<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
		<relationship id="Relationship_ADLRefine_user_3400828446" type="Relationship_ADLRefine_user_3400828446" typeName="Refine">
			<description>Refine specifies a relationship between a Requirement and an EAElement, where the modification of the supplier Requirement may impact the refining client EAElement. The Refine metaclass implies the semantics that the refining client EAElement is not complete, without the supplier Requirement. </description>
			<relationshipSymbol offset="130,76" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" targetPointX="155" targetPointY="90" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="90" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="14" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="130" y="76">
						Refine
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</relationshipSymbol>
			<icon offset="84,43" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="80" version="1.2" width="121" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,224)" points="121,43 101,49.3333 114.333,62" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="104" x2="97.3333" y1="60" y2="66.6667"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="90.6667" x2="84" y1="73.3333" y2="80"></line>
				</svg>
			</icon>
		</relationship>
		<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
		<relationship href="#Relationship_ReqRelation_user_3401014914"></relationship>
		<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
		<relationship id="Relationship_SafetyRequirement_sysadmin_3509273279" type="Relationship_SafetyRequirement_sysadmin_3509273279" typeName="SafetyRequirement">
			<description>SafetyRequirement relationship specifies how safety requirements are related to other requirements.</description>
			<icon offset="58,88" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="123" version="1.2" width="97" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,255)" points="97,88 75,97.5 86,97.5 86,107" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="58" x2="86" y1="123" y2="98"></line>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_Association_sysadmin_3612005968" type="Relationship_Association_sysadmin_3612005968" typeName="Association">
			<description>Association shows the interaction between actor and use case, like exchange signals and data.</description>
			<icon offset="60,40" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="90" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="110" x2="60" y1="40" y2="90"></line>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_Extend_user_3610197764" type="Relationship_Extend_user_3610197764" typeName="Extend">
			<description>Extend represents the specification that the behavior of a UseCase may be extended by the behavior of another (usually supplementary) UseCase. </description>
			<slot id="a0u64k" name="Extension points" unique="false">
				<property type="Property_Extension_points_user_3610197422" typeName="Extension points">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<object type="Object_Extension_point_user_3610197379" typeName="Extension point">
							<description>ExtensionPoint represents a feature of a UseCase that identifies a point where the behavior of a UseCase can be augmented with elements of another (extending) UseCase.</description>
							<slot id="lru47a" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="lsu47g" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="ltu47k" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="luu486" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
						</object>
					</contentsDataType>
				</property>
			</slot>
			<identProp slotID="a0u64k"></identProp>
			<relationshipSymbol offset="40,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" targetPointX="65" targetPointY="35" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="33" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="40" y="20">
						Extend
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</relationshipSymbol>
			<icon offset="60,20" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="80" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="110" x2="100" y1="30" y2="40"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="90" x2="80" y1="50" y2="60"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="70" x2="60" y1="70" y2="80"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="120" x2="100" y1="20" y2="20"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="120" x2="120" y1="20" y2="40"></line>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="48" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="60" y="20">E</textArea>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_Include_user_3610197879" type="Relationship_Include_user_3610197879" typeName="Include">
			<description>Include is a specialization of the Relationship and represents a relationship between two UseCases, implying that the behavior of the included UseCase is inserted into the behavior of the including UseCase. </description>
			<relationshipSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" targetPointX="65" targetPointY="45" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="43" version="1.2" width="90" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="italic" font-weight="normal" height="13" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="50" x="40" y="30">
						Include
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</relationshipSymbol>
			<icon offset="54,40" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="100" version="1.2" width="114" xmlns="http://www.w3.org/2000/svg">
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="104" x2="94" y1="50" y2="60"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="84" x2="74" y1="70" y2="80"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="64" x2="54" y1="90" y2="100"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="114" x2="94" y1="40" y2="40"></line>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="114" x2="114" y1="40" y2="60"></line>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="48" font-style="normal" font-weight="normal" height="60" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="54" y="40">I</textArea>
				</svg>
			</icon>
		</relationship>
		<relationship id="Relationship_InstanceRef_sysadmin_3510315611" type="Relationship_InstanceRef_sysadmin_3510315611" typeName="InstanceRef">
			<description>Reference to an other element.</description>
			<slot id="avwhor" name="Name" unique="false">
				<property type="Property_IntanceRefName_sysadmin_3510315588" typeName="IntanceRefName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="awwhqh" name="Description" unique="false">
				<property href="#Property_2Description_user_3310902697"></property>
			</slot>
			<identProp slotID="avwhor"></identProp>
			<icon offset="92,33" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="54" version="1.2" width="111" xmlns="http://www.w3.org/2000/svg">
					<line stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1" x1="92" x2="111" y1="54" y2="33"></line>
					<polyline fill="none" points="98,39.5311 111,33 105.583,46" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
				</svg>
			</icon>
		</relationship>
		<relationship href="#Relationship_Comment_user_3460793460"></relationship>
		<role id="Role_RefinedBy_user_3400911140" type="Role_RefinedBy_user_3400911140" typeName="RefinedBy">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_RefinedRequirement_user_3400911125" type="Role_RefinedRequirement_user_3400911125" typeName="RefinedRequirement">
			<description>List of refined Requirements.</description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="84" version="1.2" width="148" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,224)" points="130,76 130,84 148,80" stroke="rgb(0,0,0)" stroke-width="0">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role href="#Role_Derived_user_3401339852"></role>
		<role href="#Role_DerivedFrom_user_3401339830"></role>
		<role id="Role_Failure_sysadmin_3509268071" type="Role_Failure_sysadmin_3509268071" typeName="Failure">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(255,255,255)" points="150,80 136,75 140.667,80 136,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_SafetyConstraint_sysadmin_3509268786" type="Role_SafetyConstraint_sysadmin_3509268786" typeName="SafetyConstraint">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false">
						<displayCondition conditionOperator="=" matchString="Reference" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do &gt;() { type }</displayCondition>
					</metaInfo>
				</rolelineGOs>
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false">
						<displayCondition conditionOperator="=" matchString="SafetyRequirement" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do &gt;() { type }</displayCondition>
					</metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_Requirement_sysadmin_3509273404" type="Role_Requirement_sysadmin_3509273404" typeName="Requirement">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(213,213,213)" points="150,80 136,75 140.667,80 136,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_SafetyGoal_sysadmin_3509354810" type="Role_SafetyGoal_sysadmin_3509354810" typeName="SafetyGoal">
			<description></description>
		</role>
		<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
		<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
		<role id="Role_UseCase_sysadmin_3509604462" type="Role_UseCase_sysadmin_3509604462" typeName="UseCase">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="80" x="60" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<polygon fill="rgb(96,96,96)" points="140,75 150,80 140,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_HazardousEvent_sysadmin_3509604483" type="Role_HazardousEvent_sysadmin_3509604483" typeName="HazardousEvent">
			<description></description>
		</role>
		<role id="Role_Hazard_sysadmin_3509607338" type="Role_Hazard_sysadmin_3509607338" typeName="Hazard">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="140,75 150,80 140,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_FeatureFlaw_sysadmin_3509608195" type="Role_FeatureFlaw_sysadmin_3509608195" typeName="FeatureFlaw">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(160,255,160)" points="140,75 150,80 140,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_Malfunction_from_sysadmin_3509608315" type="Role_Malfunction_from_sysadmin_3509608315" typeName="Malfunction from">
			<description></description>
		</role>
		<role id="Role_ErrorModelPort_sysadmin_3509614493" type="Role_ErrorModelPort_sysadmin_3509614493" typeName="Anomaly">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="140,75 150,80 140,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_FaultFailure_sysadmin_3509613865" type="Role_FaultFailure_sysadmin_3509613865" typeName="FaultFailure">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_FeatureFlawFrom_sysadmin_3509622834" type="Role_FeatureFlawFrom_sysadmin_3509622834" typeName="DepFrom">
			<description></description>
		</role>
		<role id="Role_ItemTo_sysadmin_3509622850" type="Role_ItemTo_sysadmin_3509622850" typeName="ItemTo">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(179,255,255)" points="140,75 140,75 150,80 140,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role href="#Role_Comment_user_3460793566"></role>
		<role id="Role_DerivedFrom_sysadmin_3510213075" type="Role_DerivedFrom_sysadmin_3510213075" typeName="DerivedFrom">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="86" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(0,0,0)" points="150,80 135,74 140,80 135,86" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role href="#Role_2FunctionalDevice_user_3311233351"></role>
		<role href="#Role_Base_Realization_user_3400739113"></role>
		<role href="#Role_Target_user_3400820946"></role>
		<role id="Role_Source_user_3401014933" type="Role_Source_user_3401014933" typeName="Source">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,128)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="148" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(0,0,128)" points="148,80 133,75 138,80 133,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do &gt;RequirementsLink {
if :Bidirectional; then 'T' endif
}</displayCondition>
						</metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_SatisfiedUseCase_sysadmin_3509774817" type="Role_SatisfiedUseCase_sysadmin_3509774817" typeName="SatisfiedUseCase">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="4,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polygon fill="rgb(240,240,240)" points="132,76 132,84 150,80" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
				</svg>
			</roleSymbol>
		</role>
		<role href="#Role_referred_from_sysadmin_3524947545"></role>
		<role href="#Role_refer_to_sysadmin_3524947529"></role>
		<role id="Role_UseCase_has_user_3610198283" type="Role_UseCase_has_user_3610198283" typeName="UseCase has">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_Extend_user_3610198310" type="Role_Extend_user_3610198310" typeName="Extend">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="135,75 150,80 135,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_Addition_user_3610198363" type="Role_Addition_user_3610198363" typeName="Addition">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-dasharray="8,2" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<polyline fill="none" points="135,75 150,80 135,85" stroke="rgb(0,0,0)" stroke-width="1">
						<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polyline>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_AssociationEnd_sysadmin_3612006035" type="Role_AssociationEnd_sysadmin_3612006035" typeName="AssociationEnd">
			<description></description>
		</role>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3612005968"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
				<object href="#Object_Actor_user_3610197079"></object>
			</connection>
			<connection>
				<cardinality start="0" stop="N"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3612005968"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
			<connection>
				<cardinality start="0" stop="N"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
				<object href="#Object_Actor_user_3610197079"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_Hazard_sysadmin_3509606795"></object>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
				<object href="#Object_Item_sysadmin_3509259179"></object>
				<object href="#Object_QualityRequirement_user_3400822352"></object>
				<object href="#Object_QuantitativeSafetyConstraint_sysadmin_3509265098"></object>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
				<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
				<object href="#Object_FunctionalSafetyConcept_sysadmin_3509272774"></object>
				<object href="#Object_SafetyConstraint_sysadmin_3509191187"></object>
				<object href="#Object_SafetyGoal_sysadmin_3509260841"></object>
				<object href="#Object_UseCase_user_3462616740"></object>
				<object href="#Object_VehicleFeature_user_3400133821"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_Hazard_sysadmin_3509606795"></object>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
				<object href="#Object_Item_sysadmin_3509259179"></object>
				<object href="#Object_QualityRequirement_user_3400822352"></object>
				<object href="#Object_QuantitativeSafetyConstraint_sysadmin_3509265098"></object>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
				<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
				<object href="#Object_FunctionalSafetyConcept_sysadmin_3509272774"></object>
				<object href="#Object_SafetyConstraint_sysadmin_3509191187"></object>
				<object href="#Object_SafetyGoal_sysadmin_3509260841"></object>
				<object href="#Object_UseCase_user_3462616740"></object>
				<object href="#Object_VehicleFeature_user_3400133821"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_DerivedFrom_user_3401339830"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Derived_user_3401339852"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Extend_user_3610197764"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_UseCase_has_user_3610198283"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Extend_user_3610198310"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Include_user_3610197879"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_UseCase_has_user_3610198283"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Addition_user_3610198363"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_InstanceRef_sysadmin_3510315611"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_FaultFailure_sysadmin_3509613865"></role>
				<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_ErrorModelPort_sysadmin_3509614493"></role>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<port href="#Object_FailureOutPort_sysadmin_3509188783"></port>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_InstanceRef_sysadmin_3510315611"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_FaultFailure_sysadmin_3509613865"></role>
				<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_ErrorModelPort_sysadmin_3509614493"></role>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<port href="#Object_FaultInPort_sysadmin_3509188722"></port>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<object href="#Object_Feature_user_3399887361"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Base_Realization_user_3400739113"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_2FunctionalDevice_user_3311233351"></role>
				<object href="#Object_Feature_user_3399887361"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_FeatureFlawFrom_sysadmin_3509622834"></role>
				<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
				<object href="#Object_Hazard_sysadmin_3509606795"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_ItemTo_sysadmin_3509622850"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_HazardousEvent_sysadmin_3509604483"></role>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Hazard_sysadmin_3509607338"></role>
				<object href="#Object_Hazard_sysadmin_3509606795"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_HazardousEvent_sysadmin_3509604483"></role>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_UseCase_sysadmin_3509604462"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Malfunction_from_sysadmin_3509608315"></role>
				<object href="#Object_Hazard_sysadmin_3509606795"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_FeatureFlaw_sysadmin_3509608195"></role>
				<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SafetyConstraint_sysadmin_3509268786"></role>
				<object href="#Object_QuantitativeSafetyConstraint_sysadmin_3509265098"></object>
				<object href="#Object_SafetyConstraint_sysadmin_3509191187"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Failure_sysadmin_3509268071"></role>
				<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SafetyGoal_sysadmin_3509354810"></role>
				<object href="#Object_SafetyGoal_sysadmin_3509260841"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_DerivedFrom_sysadmin_3510213075"></role>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SafetyGoal_sysadmin_3509354810"></role>
				<object href="#Object_SafetyGoal_sysadmin_3509260841"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Requirement_sysadmin_3509273404"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLRefine_user_3400828446"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_RefinedBy_user_3400911140"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_RefinedRequirement_user_3400911125"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLRefine_user_3400828446"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_RefinedBy_user_3400911140"></role>
				<object href="#Object_QuantitativeSafetyConstraint_sysadmin_3509265098"></object>
				<object href="#Object_SafetyConstraint_sysadmin_3509191187"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_RefinedRequirement_user_3400911125"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLRefine_user_3400828446"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_RefinedRequirement_user_3400911125"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_RefinedBy_user_3400911140"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ReqRelation_user_3401014914"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Source_user_3401014933"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Target_user_3400820946"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_SafetyRequirement_sysadmin_3509273279"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SafetyConstraint_sysadmin_3509268786"></role>
				<object href="#Object_FunctionalSafetyConcept_sysadmin_3509272774"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Requirement_sysadmin_3509273404"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SatisfiedUseCase_sysadmin_3509774817"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_Feature_user_3399887361"></object>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<explosion>
			<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
			<graph id="Graph_SafetyCase_sysadmin_3619079777" type="Graph_SafetyCase_sysadmin_3619079777" typeName="SafetyCase">
				<description>SafetyCase represents a safety case that communicates a clear, comprehensive and defensible argument that a system is acceptably safe to operate in a given context.</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="ccevgw" name="Short name" unique="false">
					<property href="#Property_2ModelName_user_3310896462"></property>
				</slot>
				<slot id="cdevit" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="ceevkk" name="Contex" unique="false">
					<property type="Property_Contex_sysadmin_3509623517" typeName="Contex">
						<description></description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string></string>
						</defaultValue>
						<widget>Input Field</widget>
					</property>
				</slot>
				<slot id="cfevl4" name="LifeCycleStageKind" unique="false">
					<property type="Property_LifeCycleStageKind_sysadmin_3509623665" typeName="LifeCycleStageKind">
						<description></description>
						<dataType>
							<simpleType>String</simpleType>
						</dataType>
						<defaultValue>
							<string>InterimSafetyCase</string>
						</defaultValue>
						<widget>Fixed List</widget>
						<listValues>
							<string>InterimSafetyCase</string>
							<string>OperationalSafetyCase</string>
							<string>PreliminarySafetyCase</string>
						</listValues>
					</property>
				</slot>
				<slot id="cgevmb" name="Text" unique="false">
					<property href="#Property_Model_description_user_3399887679"></property>
				</slot>
				<identReport>_name()</identReport>
				<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
				<object id="Object_Warrant_sysadmin_3619089971" type="Object_Warrant_sysadmin_3619089971" typeName="Warrant">
					<description>Warrant represents argumentation of the facts to the Claim in general ways.</description>
					<slot id="a0fbk3" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="a1fbkx" name="Short name" unique="false">
						<property href="#Property_2ECUName_user_3310972947"></property>
					</slot>
					<slot id="a2fbll" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="a4fdmb" name="Rationale" unique="false">
						<property id="Property_Rationale_sysadmin_3619091417" type="Property_Rationale_sysadmin_3619091417" typeName="Rationale">
							<description></description>
							<dataType>
								<simpleType>Collection</simpleType>
							</dataType>
							<contentsDataType>
								<object href="#Object_Joker_user_3399887441"></object>
							</contentsDataType>
						</property>
					</slot>
					<slot id="a3fbmi" name="Text" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="170,74 169.543,76.2961 168.243,78.2426 166.296,79.5433 164,80 15.75,80 13.4539,79.5433 11.5074,78.2426 10.2067,76.2961 9.75,74 9.75,15.75 10.2067,13.4539 11.5074,11.5074 13.4539,10.2067 15.75,9.75 164,9.75 166.296,10.2067 168.243,11.5074 169.543,13.4539 170,15.75 170,74" targetPointX="89.875" targetPointY="44.875" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="80" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,224)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="10" y="10">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="10" y="10">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<template aligmentPointX="0" aligmentPointY="0" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="25" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
								<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="10,10" startDistance="0">
									<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 160,0" startDistance="3"></layoutPath>
								</pathLayout>
								<noneNPSource></noneNPSource>
								<librarySubsymbolSource>Warranty_icon</librarySubsymbolSource>
								<metaInfo></metaInfo>
							</template>
						</svg>
					</objectSymbol>
					<icon offset="56,73" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="98" version="1.2" width="76" xmlns="http://www.w3.org/2000/svg">
							<line stroke="rgb(128,0,0)" stroke-width="3" x1="66" x2="56" y1="78" y2="98"></line>
							<line stroke="rgb(128,0,0)" stroke-width="3" x1="66" x2="76" y1="78" y2="98"></line>
							<ellipse cx="66" cy="83" fill="rgb(255,0,0)" rx="10" ry="10" stroke="rgb(255,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
							<ellipse cx="66" cy="83" fill="rgb(255,0,0)" rx="4" ry="4" stroke="rgb(224,0,0)" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
						</svg>
					</icon>
				</object>
				<object id="Object_Claim_sysadmin_3619090185" type="Object_Claim_sysadmin_3619090185" typeName="Claim">
					<description>Claim represents a statement, the truth of which needs to be confirmed.</description>
					<slot id="m1fboq" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="m2fboy" name="Short name" unique="false">
						<property href="#Property_2ECUName_user_3310972947"></property>
					</slot>
					<slot id="m3fbph" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="m5fdmv" name="Rationale" unique="false">
						<property href="#Property_Rationale_sysadmin_3619091417"></property>
					</slot>
					<slot id="m4fbpp" name="Text" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="170.25,84.25 169.793,86.5461 168.493,88.4926 166.546,89.7933 164.25,90.25 16,90.25 13.7039,89.7933 11.7574,88.4926 10.4567,86.5461 10,84.25 10,26 10.4567,23.7039 11.7574,21.7574 13.7039,20.4567 16,20 164.25,20 166.546,20.4567 168.493,21.7574 169.793,23.7039 170.25,26 170.25,84.25" targetPointX="90.125" targetPointY="55.125" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="90" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(224,255,255)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="10" y="20">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="10" y="20">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<template aligmentPointX="0.5" aligmentPointY="0" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="25" subsymbolExtentY="24" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
								<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="10,20" startDistance="0">
									<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 160,0" startDistance="15"></layoutPath>
								</pathLayout>
								<noneNPSource></noneNPSource>
								<librarySubsymbolSource>Claim_icon</librarySubsymbolSource>
								<metaInfo></metaInfo>
							</template>
						</svg>
					</objectSymbol>
					<icon offset="50,40" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="73" version="1.2" width="91" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="9.42857" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="10.25" x="65.375" y="40"></rect>
							<rect fill="rgb(0,0,0)" height="28.2857" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="41" x="50" y="44.7143"></rect>
							<line stroke="rgb(255,255,255)" stroke-width="1" x1="60.25" x2="60.25" y1="44.7143" y2="73"></line>
							<line stroke="rgb(255,255,255)" stroke-width="1" x1="80.75" x2="80.75" y1="44.7143" y2="73"></line>
						</svg>
					</icon>
				</object>
				<object id="Object_Ground_sysadmin_3619090398" type="Object_Ground_sysadmin_3619090398" typeName="Ground">
					<description>Ground represents statements that explain how the SafetyCase Ground clarifies and make good the Claim.</description>
					<slot id="m5fbqw" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="m6fbr7" name="Short name" unique="false">
						<property href="#Property_2ECUName_user_3310972947"></property>
					</slot>
					<slot id="m7fbs1" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="m9fdn7" name="Rationale" unique="false">
						<property href="#Property_Rationale_sysadmin_3619091417"></property>
					</slot>
					<slot id="m8fbsb" name="Text" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="10,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="170.25,94.25 169.793,96.5461 168.493,98.4926 166.546,99.7933 164.25,100.25 16,100.25 13.7039,99.7933 11.7574,98.4926 10.4567,96.5461 10,94.25 10,36 10.4567,33.7039 11.7574,31.7574 13.7039,30.4567 16,30 164.25,30 166.546,30.4567 168.493,31.7574 169.793,33.7039 170.25,36 170.25,94.25" targetPointX="90.125" targetPointY="65.125" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="100" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
							<rect fill="none" height="70" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="10" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="10" y="30">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<template aligmentPointX="0.5" aligmentPointY="0" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="20" subsymbolExtentY="25" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
								<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="12,30" startDistance="0">
									<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 158,0" startDistance="15"></layoutPath>
								</pathLayout>
								<noneNPSource></noneNPSource>
								<librarySubsymbolSource>Ground_icon</librarySubsymbolSource>
								<metaInfo></metaInfo>
							</template>
						</svg>
					</objectSymbol>
					<icon offset="40,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="71" version="1.2" width="88" xmlns="http://www.w3.org/2000/svg">
							<g fill="none" stroke="rgb(0,0,0)" stroke-width="3" sym:height="51" sym:width="48" sym:x="4.0e1" sym:y="2.0e1">
								<line stroke="rgb(0,0,0)" stroke-width="3" x1="64" x2="64" y1="20" y2="54"></line>
								<line stroke="rgb(0,0,0)" stroke-width="3" x1="40" x2="88" y1="54" y2="54"></line>
								<polyline fill="none" points="49.6,62.5 78.4,62.5 78.4,62.5" stroke="rgb(0,0,0)" stroke-width="3"></polyline>
								<polyline fill="none" points="59.2,71 68.8,71 68.8,71" stroke="rgb(0,0,0)" stroke-width="3"></polyline>
							</g>
						</svg>
					</icon>
				</object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_Joker_user_3399887441"></object>
				<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
				<relationship id="Relationship_Decomposed_goal_sysadmin_3619096039" type="Relationship_Decomposed_goal_sysadmin_3619096039" typeName="Decomposed goal">
					<description>A statement which needs to be confirmed. </description>
					<relationshipSymbol offset="81,31" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="100,40 99.3189,43.6279 97.3677,46.7658 94.4098,48.99 90.8447,50 87.154,49.6595 83.836,48.0144 81.339,45.2869 80,41.8454 80,38.1546 81.339,34.7131 83.836,31.9856 87.154,30.3405 90.8447,30 94.4098,31.01 97.3677,33.2342 99.3189,36.3721 100,40" targetPointX="90" targetPointY="40" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="50" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
							<ellipse cx="90.5" cy="40.5" fill="none" rx="9.5" ry="9.5" stroke="rgb(0,0,0)" stroke-width="2" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</ellipse>
							<ellipse cx="90.5" cy="40.5" fill="none" rx="4.5" ry="4.5" stroke="rgb(0,0,0)" stroke-width="2" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</ellipse>
							<ellipse cx="90.5" cy="40.5" fill="rgb(255,255,255)" rx="0.5" ry="0.5" stroke="rgb(255,0,0)" stroke-width="2" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</ellipse>
						</svg>
					</relationshipSymbol>
				</relationship>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role href="#Role_Comment_user_3460793566"></role>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<role id="Role_Evidence_sysadmin_3619091636" type="Role_Evidence_sysadmin_3619091636" typeName="Evidence">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(128,128,128)" stroke-dasharray="8,2" stroke-width="0">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="140,76 150,80 140,84" stroke="rgb(128,128,128)" stroke-width="1">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</roleSymbol>
				</role>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Decomposed_goal_sysadmin_3619096039"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_Warrant_sysadmin_3619089971"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<object href="#Object_Claim_sysadmin_3619090185"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_Claim_sysadmin_3619090185"></object>
						<object href="#Object_Warrant_sysadmin_3619089971"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Evidence_sysadmin_3619091636"></role>
						<object href="#Object_Ground_sysadmin_3619090398"></object>
					</connection>
				</binding>
				<explosion>
					<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
					<graph href="#Graph_SafetyCase_sysadmin_3619079777"></graph>
				</explosion>
				<report>
					!Check()
Check()
					<icon offset="79,68" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
							<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>Check()
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

_checkings()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif</report>
				<report>_checkings()
/* Checkings for SafetyCase */
_HasClaim()
_HasGround()</report>
				<report>_HasClaim()
@found = 'F'
foreach .Claim 
{	/* Ground */
	@found = 'T'
	if not ~referred_from~Evidence.Ground; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any ground as evidence'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and Ground!'
		endif
		newline
	endif
}

/* Claims */
if @found = 'F' then
	_reportWarnings()
	'Warning: ' id ' &lt;' type '&gt; does not have any claim(s)' 
	if $extendedCheck = 'T' then
		' in the model ' id ' &lt;' type '&gt;. '
	else
		'. Create at least one Claim object to the model!'
	endif
	newline
endif

</report>
				<report>_HasGround()
@found = 'F'
foreach .Ground {	@found = 'T' }

if @found = 'F' then
	_reportWarnings()
	'Warning: ' id ' &lt;' type '&gt; does not have any ground(s)' 
	if $extendedCheck = 'T' then
		' in the model ' id ' &lt;' type '&gt;. '
	else
		'. Create at least one Ground object to the model!'
	endif
	newline
endif</report>
				<report>__LiveCheck()

_translators()
$warnings = '0'
$LiveCheck = 'T'

_checkings()

if $warnings = '0' then
	'No warnings' newline
endif
</report>
				<constraints>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_Claim_sysadmin_3619090185"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_Ground_sysadmin_3619090398"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_Warrant_sysadmin_3619089971"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
				<icon offset="80,43" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="68" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
						<polygon fill="rgb(255,255,0)" points="90,43 80,63 100,63" stroke="rgb(0,0,0)" stroke-width="2"></polygon>
						<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="18" font-style="normal" font-weight="bold" height="24" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="17" x="82" y="44">!</textArea>
					</svg>
				</icon>
			</graph>
		</explosion>
		<decomposition>
			<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
		</decomposition>
		<decomposition>
			<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
		</decomposition>
		<decomposition>
			<object href="#Object_EAType_sysadmin_3541158109"></object>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
			<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
			<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
			<graph id="Graph_ErrorModel_sysadmin_3509186594" type="Graph_ErrorModel_sysadmin_3509186594" typeName="ErrorModel">
				<description>EAST-ADL version M2.1.12
The ErrorModelType represents a specification of the faults and fault propagations of its target element.</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="b2k3dt" name="Short name" unique="false">
					<property href="#Property_2ModelName_user_3310896462"></property>
				</slot>
				<slot id="b697jk" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="b4ffv1" name="Show warnings" unique="false">
					<property type="Property_Show_Autosar_warnings_user_3410515667" typeName="Show warnings">
						<description></description>
						<dataType>
							<simpleType>Boolean</simpleType>
						</dataType>
						<defaultValue></defaultValue>
					</property>
				</slot>
				<slot id="b3k3e7" name="Description" unique="false">
					<property href="#Property_Model_description_user_3399887679"></property>
				</slot>
				<identProp slotID="b2k3dt"></identProp>
				<object id="Object_ErrorBehavior_sysadmin_3509269253" type="Object_ErrorBehavior_sysadmin_3509269253" typeName="ErrorBehavior">
					<description>ErrorBehavior defines the error propagation logic of its containing ErrorModelType. The ErrorBehavior is defined in the failureLogic string, either directly or as a URL referencing an external specification, or in separate subgraph. </description>
					<slot id="i697ox" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="i2nmvq" name="Short name" unique="false">
						<property id="Property_ErrorBehaviorName_sysadmin_3509269195" type="Property_ErrorBehaviorName_sysadmin_3509269195" typeName="ErrorBehaviorName">
							<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="i797ol" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="i3nmy3" name="FailureLogic" unique="false">
						<property type="Property_FailureLogic_sysadmin_3509269237" typeName="FailureLogic">
							<description></description>
							<dataType>
								<simpleType>Text</simpleType>
							</dataType>
							<defaultValue></defaultValue>
						</property>
					</slot>
					<slot id="i4nmyh" name="Type" unique="false">
						<property type="Property_ErrorBehaviorKind_sysadmin_3509269141" typeName="ErrorBehaviorKind">
							<description>ErrorBehaviorKind represents different formalisms for ErrorBehavior. The semantics are defined at each enumeration literal. </description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string>OTHER</string>
							</defaultValue>
							<widget>Fixed List</widget>
							<listValues>
								<string>HIP_HOPS</string>
								<string>ALTARICA</string>
								<string>AADL</string>
								<string>OTHER</string>
							</listValues>
						</property>
					</slot>
					<slot id="i5nmwh" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="40,30 260,30 260,150 40,150 40,30" targetPointX="150" targetPointY="90" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="150" version="1.2" width="260" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(240,240,240)" height="120" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="220" x="40" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="OTHER" xmlns="http://www.w3.org/2000/svg">PropertyTextSource:i4nmyh</displayCondition>
								</metaInfo>
							</rect>
							<rect fill="rgb(255,255,255)" height="120" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="220" x="40" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="X" xmlns="http://www.w3.org/2000/svg">ReportTextSource:If :Type &lt;&gt; 'HIP_HOPS' and :Type &lt;&gt; 'OTHER' then 'X' endif</displayCondition>
								</metaInfo>
							</rect>
							<rect fill="rgb(255,224,224)" height="120" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="220" x="40" y="30">
								<metaInfo xmlns="http://www.metacase.com/symbol">
									<displayCondition conditionOperator="=" matchString="HIP_HOPS" xmlns="http://www.w3.org/2000/svg">PropertyTextSource:i4nmyh</displayCondition>
								</metaInfo>
							</rect>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="219" x="41" y="30">
								ReportTextSource:to '%null' newline '* $' endto
$count ='0'

newline
'externalFailure' ':= {'

dowhile ~()&gt;().FailureOutPort {	
	if $count&lt;&gt; '0'; then 
			', '
		endif	
	id 
	$++count%null
	}
'}'
newline


$count ='0'
'externalFault' ':= {'

do ~()&gt;().FaultInPort {	
	
	if $count&lt;&gt; '0'; then 
			', '
		endif	
	id
	$++count%null
}


do ~()&gt;().ErrorModelPrototype {	
 	id	'.'
	do #FailureOutPort { id ' '}
}
'}'

$count ='0'
newline
'internalFault' ':= {'
dowhile ~()&gt;().InternalFaultPrototype { 
	if $count&lt;&gt; '0'; then 
			', '
		endif	
	id 
	$++count%null
}
'}'

$count ='0'
newline
'processFault' ':= {'
dowhile ~()&gt;().ProcessFaultPrototype {	
 		if $count&lt;&gt; '0'; then 
			', '
		endif	
	id 
	$++count%null
}
'}'

newline
'failureLogic' ':= {'
if :FailureLogic; then 
	 newline :FailureLogic ';'
else
	do explosions
	{	 
		$count ='0'
		newline
		'   state' ':={'
			foreach .(State) { 
			 	if $count&lt;&gt; '0'; then 
					', '
				endif	
				id 
				$++count%null 
			}
			'}'
	
		newline 
		'   initState' 
		':={' 
		foreach .(State) 
		{	
			if :isInitialState; then
				id
			endif 
       }
 		'}'
		newline 
		
	'   transitionEvent' 
	':={ '
		$count ='0'
		foreach .(TransitionEvent) 
		{	
			 if $count&lt;&gt; '0'; then 
					', '
				endif	
				id 
				$++count%null 
       }
 	'}'
   newline

	$count= '0'
	'   transition' 
	':={ '
	foreach &gt;(Transition) {
	
			if $count&lt;&gt; '0'; then 
					', '
				endif				
			
			do ~from.()	{ id	'-&gt;'}
			do ~to.(){id }
						
				$++count%null 
			
      }
	'}'
	newline
	}
endif 
'   }'
newline
'type' ':=  '
:Type
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="40" y="30">
								ReportTextSource:id ' ' type
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
							<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="22" subsymbolExtentY="22" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
								<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="260,30" startDistance="0">
									<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,20" startDistance="8"></layoutPath>
								</pathLayout>
								<generatorNPSource>oid</generatorNPSource>
								<librarySubsymbolSource>sym_statemachine</librarySubsymbolSource>
								<metaInfo>
									<displayCondition conditionOperator="=" matchString="OTHER" xmlns="http://www.w3.org/2000/svg">PropertyTextSource:i4nmyh</displayCondition>
								</metaInfo>
							</template>
						</svg>
					</objectSymbol>
					<icon offset="60,30" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(213,213,213)" height="50" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="80" x="60" y="30"></rect>
							<rect fill="rgb(255,224,224)" height="50" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="40" x="100" y="30"></rect>
						</svg>
					</icon>
				</object>
				<object href="#Object_InternalFault_sysadmin_3509186672"></object>
				<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
				<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
				<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
				<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
				<object id="Object_Operator_sysadmin_3627560660" type="Object_Operator_sysadmin_3627560660" typeName="Operator">
					<description>Specifies Boolean logic for error behavior.</description>
					<slot id="maifff" name="Operator" unique="false">
						<property type="Property_Operator_sysadmin_3627560653" typeName="Operator">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string>OR</string>
							</defaultValue>
							<widget>Radio Button Set</widget>
							<listValues>
								<string>AND</string>
								<string>OR</string>
							</listValues>
						</property>
					</slot>
					<identProp slotID="maifff"></identProp>
					<objectSymbol offset="50,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="50,30 80,30 80,50 50,50 50,30" targetPointX="65" targetPointY="40" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="50" version="1.2" width="80" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="rgb(255,255,179)" sym:textboxStroke="rgb(128,128,0)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="30" x="50" y="30">
								PropertyTextSource:maifff
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="40,20" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="50" version="1.2" width="70" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="rgb(255,255,0)" sym:textboxStroke="rgb(255,255,0)" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="30" x="40" y="20">AND
OR</textArea>
						</svg>
					</icon>
				</object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_Joker_user_3399887441"></object>
				<relationship id="Relationship_FaultFailure_sysadmin_3509188221" type="Relationship_FaultFailure_sysadmin_3509188221" typeName="FaultFailurePropagationLink">
					<description>The FaultFailurePropagationLink defines a Failure propagation path, from the fromPort on one error model to the toPort of another error model. </description>
					<slot id="av9920" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="auk8mj" name="Short name" unique="false">
						<property type="Property_FaultFailurePropagationName_sysadmin_3509189972" typeName="FaultFailurePropagationName">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string></string>
							</defaultValue>
							<widget>Input Field</widget>
						</property>
					</slot>
					<slot id="aw992c" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="ask5ws" name="ImmediatePropagation" unique="false">
						<property type="Property_ImmediatePropagation_sysadmin_3509188214" typeName="ImmediatePropagation">
							<description></description>
							<dataType>
								<simpleType>String</simpleType>
							</dataType>
							<defaultValue>
								<string>True</string>
							</defaultValue>
							<widget>Radio Button Set</widget>
							<listValues>
								<string>True</string>
								<string>False</string>
							</listValues>
						</property>
					</slot>
					<slot id="atk5tk" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<relationshipSymbol offset="70,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="113.326,60.05 110.163,63.1 107,60.05 110.163,57 113.326,60.05" targetPointX="110.163" targetPointY="60.05" usesGrid="false"></defaultConnectable>
						<svg baseProfile="tiny" height="90" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<ellipse cx="110.05" cy="60.05" fill="rgb(0,0,0)" rx="0.0499992" ry="0.0499992" stroke="rgb(0,0,0)" stroke-width="6" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</ellipse>
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="70" y="60">
								ReportTextSource:id
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</relationshipSymbol>
					<icon offset="88,51" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="71" version="1.2" width="108" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="88" y="51"></rect>
							<polygon fill="rgb(0,0,0)" points="104,61 92,54 92,68" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</relationship>
				<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role id="Role_FailureOut_sysadmin_3509188624" type="Role_FailureOut_sysadmin_3509188624" typeName="FailureOut">
					<description></description>
				</role>
				<role id="Role_FaultIn_sysadmin_3509188513" type="Role_FaultIn_sysadmin_3509188513" typeName="FaultIn">
					<description></description>
				</role>
				<role href="#Role_Comment_user_3460793566"></role>
				<role href="#Role_referred_from_sysadmin_3524947545"></role>
				<role href="#Role_refer_to_sysadmin_3524947529"></role>
				<role id="Role_ConditionTo_sysadmin_3627560810" type="Role_ConditionTo_sysadmin_3627560810" typeName="ConditionTo">
					<description></description>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(128,128,128)" stroke-dasharray="8,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="84" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
							<polyline fill="none" points="140,76 150,80 140,84" stroke="rgb(128,128,128)" stroke-width="1">
								<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</polyline>
						</svg>
					</roleSymbol>
				</role>
				<role id="Role_FailureKind_sysadmin_3627561116" type="Role_FailureKind_sysadmin_3627561116" typeName="FailureKind">
					<description>ErrorKind links defines the error propagation logic related to the FailureOutPort within an ErrorModelType.  It is used to define the logic via Boolean operators, internal errorPrototypes, FaultInPorts or via other operators). </description>
					<slot id="a1ig1k" name="__UUID" unique="false">
						<property href="#Property___UUID_sysadmin_3604668056"></property>
					</slot>
					<slot id="a2ig22" name="Short name" unique="false">
						<property href="#Property_ErrorBehaviorName_sysadmin_3509269195"></property>
					</slot>
					<slot id="a3ig44" name="Name" unique="false">
						<property href="#Property_Name_sysadmin_3536998876"></property>
					</slot>
					<slot id="a4ig4y" name="Description" unique="false">
						<property href="#Property_2Description_user_3310902697"></property>
					</slot>
					<identReport>if :Name; then :Name; else :Short name; endif</identReport>
					<roleSymbol xmlns="http://www.metacase.com/symbol">
						<rolelineGOs stroke="rgb(128,128,128)" stroke-dasharray="8,2" stroke-width="1">
							<metaInfo shouldRotate="false"></metaInfo>
						</rolelineGOs>
						<svg baseProfile="tiny" height="110" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
							<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="45" sym:characterBackgroundFill="rgb(255,255,255)" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="80" x="60" y="65">
								ReportTextSource:id
								<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</roleSymbol>
				</role>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_FaultFailure_sysadmin_3509188221"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FailureOut_sysadmin_3509188624"></role>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<port href="#Object_FailureOutPort_sysadmin_3509188783"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FaultIn_sysadmin_3509188513"></role>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<port href="#Object_FaultInPort_sysadmin_3509188722"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_FaultFailure_sysadmin_3509188221"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FailureOut_sysadmin_3509188624"></role>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<port href="#Object_FailureOutPort_sysadmin_3509188783"></port>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FaultIn_sysadmin_3509188513"></role>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_FaultFailure_sysadmin_3509188221"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FailureOut_sysadmin_3509188624"></role>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FaultIn_sysadmin_3509188513"></role>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<port href="#Object_FaultInPort_sysadmin_3509188722"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_FailureKind_sysadmin_3627561116"></role>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<object href="#Object_Operator_sysadmin_3627560660"></object>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<port href="#Object_FailureOutPort_sysadmin_3509188783"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<port href="#Object_FaultInPort_sysadmin_3509188722"></port>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<object href="#Object_Operator_sysadmin_3627560660"></object>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_ConditionTo_sysadmin_3627560810"></role>
						<object href="#Object_Operator_sysadmin_3627560660"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_reference_sysadmin_3524947284"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
					</connection>
					<connection>
						<cardinality start="0" stop="N"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
					</connection>
				</binding>
				<explosion>
					<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
					<graph href="#Graph_Mode_user_3506169209"></graph>
				</explosion>
				<explosion>
					<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
					<graph href="#Graph_Dependability_sysadmin_3509190231"></graph>
				</explosion>
				<decomposition>
					<object href="#Object_InternalFault_sysadmin_3509186672"></object>
					<graph href="#Graph_ErrorModel_sysadmin_3509186594"></graph>
				</decomposition>
				<report>
					!Check()
/* Check generator the validate the error models */
Check()
					<icon offset="41,37" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="85" version="1.2" width="89" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="41" y="45"></rect>
							<polygon fill="url(#gradient1)" points="50.3,49.5714 46,55.8571 46,62.1429 58.9,81 63.2,81 89,49.5714 89,43.2857 84.7,37 80.4,37 62.34,65.9143 54.6,49.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>
					Report '!Unconnected ports'
subreport '_translators' run
id ' &lt;' type '&gt; has following unconnected ports:' newline
foreach .ErrorModelPrototype
{
	$ports = ' '
	$found = 'F'
	$unused_ports = ''
	do #() { 
		variable 'ports' append oid ' ' close
	}
	do decompositions {
		foreach .(*Port) {
			if not $ports =~ oid%wildsp then
				variable 'unused_ports' append '- ' id ' &lt;' type '&gt;' newline close
				$found = 'T'
			endif
		}
	}
	if $found = 'T' then
		id ' &lt;' type '&gt;' newline
		$unused_ports newline
	endif
}
foreach .(*Port) {
	if not &gt;() then
		'- ' id ' &lt;' type '&gt;' newline
	endif
}

if $found &lt;&gt; 'T' then 'none' endif
endreport
					<icon offset="98,45" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="65" version="1.2" width="118" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(255,255,255)" height="20" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="20" x="98" y="45"></rect>
							<polygon fill="rgb(213,213,213)" points="102,49 102,61 114,55" stroke="rgb(128,128,128)" stroke-width="1"></polygon>
							<textArea display-align="center" fill="rgb(255,0,0)" font-family="#sans serif" font-size="22" font-style="normal" font-weight="bold" height="18" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="15" x="100.5" y="45">?</textArea>
						</svg>
					</icon>
				</report>
				<report>Check()
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

/* Checking for legal path hierarchy */
_LegalTypePath()

if $legal &lt;&gt; 'F' then
	subreport '_checkings' run 
endif

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif</report>
				<report>Report 'Compare with FunctionType'
/* Compares the differences with nominal architecture based on the selected level and expects that the same short names exist also on design function type */
_translators()
$warnings = '0'
$found = 'F'

_FindAndGetFunctionTypes()

if $found = 'T' then

	_CompareWithThisErrorType()
	if $warnings &lt;&gt; '0' then
		'Total number of differences: ' $warnings newline
	else
		'No differences found!' newline
	endif

else
	'Corresponding FunctionType ' $thisFunction ' not found.'
endif

endreport</report>
				<report>_checkings()
/* Checking generator for EAST-ADL error models */

foreach .ErrorBehavior 
{	if explosions and :FailureLogic &lt;&gt; '' then
		_reportWarnings()
		'Warning: Failure logic for error behavior ' id ' is described in a property field and in a subgraph. Remove the other.' newline
	endif
	
	if not ~referred_from~refer_to.FailureOutPort; then
		_reportWarnings()
		'Warning: ' id ' does not refer to one or more FailureOutPorts. Create a relationship between ' type ' and FailureOutPort!' newline
	endif
}

/* Checkings for Objects */
subreport '_checkings for the objects' run

/* Checkings for Roles */
subreport '_checkings for the roles' run

/* Checkings for relationships */
subreport '_checkings for the relationships' run

/* Checkings for the Model */
subreport '_checkings for the graph' run
</report>
				<report>_CompareError2FT(@Objs)
	@this = :Short name;	
	if not @Objs =~ @this%wildsp then			
		'Warning: ' :Short name; ' is not found from ' $thisFunction; newline
		$warnings++%null
	endif
</report>
				<report>_CompareWithThisErrorType()
foreach .ErrorModelPrototype {
	_CompareError2FT($FTs)
}
foreach .FaultInPort {
	_CompareError2FT($Ins)
}
foreach .FailureOutPort {
	_CompareError2FT($Outs)
}

foreach &gt;FaultFailurePropagationLink {
	local 'this' write		
		do ~FailureOut {
			do .() { :Short name '_' }
			do #() { :Short name '_' }
		}
		:Short name; '_'
		do ~FaultIn {
			do #() { :Short name '_' }
			do .() { :Short name }			
		}
	close
	if not $Rels =~ @this%wildsp then			
		'Warning: Connection ' _connectionName() ' is not found from ' $thisFunction ' between same objects and their port(s)' newline
		$warnings++%null
	endif
}
</report>
				<report>_connectionName()
If :Short name; then 
	:Short name; 
else
	:Name '&lt;' type '&gt;' 
endif</report>
				<report>_FindAndGetFunctionTypes()
$thisFunction = :Short name;
do graphs where type =~ '*FunctionType' and :FunctionName = $thisFunction {
	$found = 'T'
	variable 'FTs' write
		' '
		foreach .(*FunctionPrototype) {	:Short name; ' ' }
	close
	variable 'Ins' write
		' '
		foreach .(InFlowPort | Server) {	:Short name; ' ' }
	close	
	variable 'Outs' write
		' '
		foreach .(OutFlowPort | Client) { :Short name; ' '	}
	close
	variable 'Rels' write		
		' '
		foreach &gt;() {	
			do ~(InFlow | OutFlowPort | ClientPort | Server) {
				do .() { :Short name '_' }
				do #() { :Short name '_' }
			}
			:Short name; '_'
			do ~(OutFlow | InFlowPort | Client | ServerPort) {
				do #() { :Short name '_' }
				do .() { :Short name }			
			}
			' '
		}
	close
}</report>
				<report>Report '_stringOperators'

/* Definign the string operators */
/* 1. Split the string into two, using = as a separator, returns the left part*/
to '%namePart
/^(.*)\=(.*)/ $$1'
endto

/* 2. Split the string into two, using = as a separator, returns the right part */
to '%rest
/^(.*)\=(.*)/ $$2'
endto

/* 3. Removes all the spaces from the end of the string */
to '%removeSpacesFromEnd
/\s+$/ $'
endto

/* 4. Removes all the spaces from the beginning of the string */
to '%removeSpacesFromStart
/^ +/ $'
endto

to '%null' newline '* $' endto

/*this translator removes the CRLF*/
to '%removeCRLF
\
 $' endto

endreport</report>
				<report>_subTrace(@thisGraphOid, @prevGraphOid, @prevDFp)
do #() {
	$outport = oid
	' &gt;(out:' id ')'
}
do .() {
	' &gt; 'id ' '
	variable 'inports' oid write ' ' close 
	do decompositions {
		foreach .FailureOutPort; where oid = $outport {
			if ~(^Comment) then
				do ~FaultIn~FailureOut {
					variable oid;2 '_reportedRoles' write ' ' close /* remember roles to avoid cycles */
					_subTrace(oid;2, @thisGraphOid, oid;3)
				}
			else
				$plainType = 'T'
				foreach .ErrorModelPrototype {$plainType = 'F'}
				if $plainType = 'T' then
					foreach .FaultInPort {variable 'inports' oid;3 append oid ' ' close}
				else
					' &gt;' id ' is error source.' newline /* unconnected port */
				endif
			endif
		}
	}
	local 'reportedRoles' write variable @thisGraphOid '_reportedRoles' read close 
	variable 'inports' write variable 'inports' oid read close /* all inports */
	if $inports &lt;&gt; ' ' then
		dowhile ~FaultIn {
			if not @reportedRoles =~ oid%wildsp then /* is this role already visited to avoid looping */
				do #() {
					@legalPort = 'F'
					variable 'legalPorts' write variable 'inports' oid;2 read close
					if $legalPorts =~ oid%wildsp then
						variable @thisGraphOid '_reportedRoles' append oid;1 ' ' close 
						' &gt;(in:' id ')'
						@legalPort = 'T'
					endif
				}
				if @legalPort = 'T' then
					do ~FailureOut {
						_subTrace(@thisGraphOid, @prevGraphOid, @prevDFp)
					}
					do ~FailureOut {
						do .ErrorModelPrototype {
							/* ' &gt;(ina:' id ')' */
							variable 'inports' @prevDFp append oid ' ' close
						}
					}
				endif
			endif
			' &amp;' newline
		}
	endif
}</report>
				<report>_sym_subTrace(@thisGraphOid, @prevGraphOid, @prevDFp)
do #() {
	$outport = oid
}
do .() {
	oid '_' @thisGraphOid ' '
	variable 'inports' oid write ' ' close 
	do decompositions {
		foreach .FailureOutPort; where oid = $outport {
			if ~FaultIn; then
				do ~FaultIn~FailureOut {
					variable oid;2 '_reportedRoles' write ' ' close
					_sym_subTrace(oid;2, @thisGraphOid, oid;3)
				}
			else
				$plainType = 'T'
				foreach .ErrorModelPrototype {$plainType = 'F'}
				if $plainType = 'T' then
					foreach .FaultInPort {variable 'inports' oid;3 append oid ' ' close}
				else
					oid /* unconnected port */
				endif
			endif
		}
	}
	local 'reportedRoles' write variable @thisGraphOid '_reportedRoles' read close
	variable 'inports' write variable 'inports' oid read close
	if $inports &lt;&gt; ' ' then
		dowhile ~FaultIn {
			if not @reportedRoles =~ oid%wildsp then /* is this role already visited to avoid looping */		
				do #() {
					@legalPort = 'F'
					variable 'currentRoles' write variable 'inports' oid;2 read close 
					if $currentRoles =~ oid%wildsp then 
						variable @thisGraphOid '_reportedRoles' append oid;1 ' ' close
						@legalPort = 'T'
					endif
				}
				if @legalPort = 'T' then
					do ~FailureOut {
						_sym_subTrace(@thisGraphOid, @prevGraphOid, @prevDFp)
					}
					do ~FailureOut {
						do.() {
							oid ' '
							variable 'inports' @prevDFp append oid ' ' close
						}
					}
				endif
			endif
		}
	endif
}</report>
				<report>Report '_sym_trace'
_translators()
variable oid;1 '_reportedRoles' write ' ' close
$found = ' '  
variable 'found' write
foreach .() where :Has error? {
	oid ' ' 
	do ~FaultIn~FailureOut {
		_sym_subTrace(oid;3, oid;3, oid;3)
	}
}
close
local 'thisElem' write oid '_' oid;1 close
/* oid%wildsp */
if $found =~ @thisElem%wildsp then
	'T'
endif
endreport</report>
				<report>_Trace()
/* Does not handle yet all nested cases */
_translators()
variable oid '_reportedRoles' write ' ' close
foreach .() where :Has error? {
	id ' failed' newline
	do ~FaultIn {
		do #() {'&gt;(in:' id ')'}
		do ~FailureOut {
			_subTrace(oid;3, oid;3, oid;3)
		}
		newline
	}
	newline
}</report>
				<report>Report '_type def'
id
if decompositions; then
	': ' 
	do decompositions {id}
else
	': type undefined'
endif
endreport</report>
				<report>__LiveCheck()
_translators()
$warnings = '0'
$LiveCheck = 'T'
_checkings()

if $warnings = '0' then
	'No warnings' newline
endif</report>
				<constraints>
					<connectivity>
						<object href="#Object_Operator_sysadmin_3627560660"></object>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<max>1</max>
					</connectivity>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_ErrorBehavior_sysadmin_3509269253"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_InternalFault_sysadmin_3509186672"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_FailureOutPort_sysadmin_3509188783"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_FaultInPort_sysadmin_3509188722"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_InternalFaultPrototype_user_3548398352"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_ProcessFaultPrototype_user_3548398435"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
				<icon offset="79.5,69.5" xmlns="http://www.metacase.com/icon">
					<svg baseProfile="tiny" height="88.5" version="1.2" width="98.5" xmlns="http://www.w3.org/2000/svg">
						<ellipse cx="89" cy="79" fill="rgb(255,0,0)" rx="9.5" ry="9.5" stroke="rgb(160,0,0)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
						<line stroke="rgb(255,255,255)" stroke-width="4" x1="84.5" x2="93.5" y1="73.5" y2="84.5"></line>
						<line stroke="rgb(255,255,255)" stroke-width="4" x1="93.5" x2="84.5" y1="73.5" y2="84.5"></line>
					</svg>
				</icon>
			</graph>
			<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
		</decomposition>
		<decomposition>
			<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
			<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
		</decomposition>
		<report>
			Report '!Check'
Check()
endreport
			<icon offset="79,68" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
							<stop offset="1" stop-color="rgb(0,192,0)"></stop>
						</radialGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
					<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>Check()
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

/* Checking for legal path hierarchy */
_LegalTypePath()

_checkings()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif</report>
		<report>Report 'Item''s feature realizations'
/* reports feature realizations per item */
_translators()
foreach .Item {
	id%upper ' RELATED FEATURES AND THEIR REALIZATIONS:' newline 
	do :Features {
		'- ' id ' &lt;' type '&gt;'newline 
		do graphs; {
			foreach .(*Feature) where oid = oid;2 {
				do &gt;Realization.(^*Feature) {
				'	- is realized with ' id ' &lt;' type '&gt; in ' id;2 ' &lt;' type;2 '&gt;' newline
				}
			}
		}
	}
	newline
}
endreport</report>
		<report>Report 'Item''s feature satisfaction'
/* reports feature satisfaction per item */
_translators()
foreach .Item {
	id%upper ' &lt;' type%upper '&gt; RELATED FEATURES AND THEIR SATISFACTION' newline 
	do :Features {
		'- ' id ' &lt;' type '&gt;' newline 
		do graphs; {
			foreach .(*Feature) where oid = oid;2 {
				do &gt;Satisfy.(^*Feature) {
				'	- is satisfied by ' id ' &lt;' type '&gt; in ' id;2 ' &lt;' type;2 '&gt;' newline
				}
			}
		}
	}
	newline
}
endreport</report>
		<report>_checkings()
/* Checkings for the Dependability */
_ItemChecks()
_HazardEvent()
_Hazard()
_FeatureFlaw()
_SafetyReq()
_SafetyConstraint()
_FaultFailure()

if $extendedCheck = 'T' then
	foreach .SafetyCase
	{	do explosions { _checkings() }}
endif</report>
		<report>_elements()
_timingTranslators()
'&lt;ELEMENTS&gt;'
if (type = 'Dependability' AND (not $reported_models =~ oid%wildsp)) then
	variable 'reported_models' append oid ' ' close
	newline
	'&lt;!-- DEPENDABILITY name: ' 
	if :Name &lt;&gt; '' then
		:Name ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;DEPENDABILITY UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' endif
	_featureFlaws()
	_hazards()
	_faultFailures()
	_hazardousEvents()
	_items()
	_safetyGoals()

	'&lt;/DEPENDABILITY&gt;' newline
endif
'&lt;/ELEMENTS&gt;' newline</report>
		<report>_FaultFailure()
foreach .FaultFailure 
{	if not :FaultFailureValue; then
		_reportWarnings()
		'Warning: ' id ' does not refer to any fault failure value.' newline
	endif
}</report>
		<report>_FeatureFlaw()
foreach .FeatureFlaw 
{	/* Referred Item */
	if not ~DepFrom~ItemTo.Item; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any Item' 
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and Item!'
		endif
		newline
	endif
}</report>
		<report>_Hazard()
foreach .Hazard 
{	/* Hazard */
	if not ~Malfunction from~FeatureFlaw.FeatureFlaw; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any FeatureFlaw'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and FeatureFlaw!'
		endif
		newline
	endif
	
	/* Item */
	if not ~DepFrom~ItemTo.Item; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any Item'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and Item!'
		endif
		newline
		
	endif
}</report>
		<report>_HazardEvent()
foreach .HazardousEvent 
{	/* OperationalSituationUseCase */
	if not ~HazardousEvent~UseCase.UseCase; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to an operational situation use case'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and UseCase!'
		endif
		newline
	endif
	
	/* Hazard */
	if not ~HazardousEvent~Hazard.Hazard; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any hazard'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and Hazard!'
		endif
		newline
	endif
}
</report>
		<report>_ItemChecks()
foreach .Item 
{	if :Vehicle features; = '' then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not include any features. Create or reuse at least one VehicleFeature in the VehicleFeatures property!' newline
	endif
}
</report>
		<report>_SafetyConstraint()
foreach .(*SafetyConstraint) 
{	if not ~SafetyConstraint~Failure.FaultFailure; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not constraint any faultfailures'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and FaultFailure!'
		endif
		newline
	endif
}</report>
		<report>_SafetyReq()
foreach .SafetyGoal 
{	/* HazardousEvent */
	if not ~SafetyGoal~DerivedFrom.HazardousEvent; then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; is not derived from any HazardousEvent'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and HazardousEvent!'
		endif
		newline
	endif

	/* Requirement */	
	if not ~SafetyGoal~Requirement.(*Requirement); then
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any requirement'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and Requirement!'
		endif
		newline
	endif
}</report>
		<report>_symUserDefinedAttributeValues()

dowhile :UserAttributeValues 
{	:Short name; '=' :Value; newline }</report>
		<report>__LiveCheck()
_translators()
$warnings = '0'
$LiveCheck = 'T'

_checkings()

if $warnings = '0' then
	'No warnings' newline
endif</report>
		<constraints>
			<connectivity>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<max>1</max>
			</connectivity>
			<uniqueness>
				<object href="#Object_SafetyCase_sysadmin_3509623444"></object>
				<propertyName></propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_Feature_user_3399887361"></object>
				<propertyName>Name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_Item_sysadmin_3509259179"></object>
				<propertyName>Name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_QualityRequirement_user_3400822352"></object>
				<propertyName>Name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
				<propertyName>Name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_UseCase_user_3462616740"></object>
				<propertyName>Name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_VehicleFeature_user_3400133821"></object>
				<propertyName>Name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_Actor_user_3610197079"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_FaultFailure_sysadmin_3509192808"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_FeatureFlaw_sysadmin_3509607953"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_Hazard_sysadmin_3509606795"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_HazardousEvent_sysadmin_3509260252"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_QuantitativeSafetyConstraint_sysadmin_3509265098"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_FunctionalSafetyConcept_sysadmin_3509272774"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_SafetyConstraint_sysadmin_3509191187"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_SafetyGoal_sysadmin_3509260841"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
			<uniqueness>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<propertyName>Short name</propertyName>
			</uniqueness>
		</constraints>
		<icon offset="30,15" xmlns="http://www.metacase.com/icon">
			<svg baseProfile="tiny" height="85" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
				<polygon fill="rgb(255,255,255)" points="40.1526,15 30,29 30,71 40.1526,85 90.9158,85 100,68.8461 100,28.4614 90.9158,15" stroke="rgb(255,0,0)" stroke-width="1"></polygon>
			</svg>
		</icon>
	</graph>
	<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
	<graph type="Graph_EAXML_user_3606735688" typeName="EAXML">
		<description>The root element of an exchanged XML file which contains an EAST-ADL model.
Release 1 Feb 2016</description>
		<superType>
			<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
		</superType>
		<slot id="c7pq2k" name="Name" unique="false">
			<property type="Property_Filename_user_3606735645" typeName="Filename">
				<description>Name is mandatory</description>
				<dataType>
					<simpleType>String</simpleType>
				</dataType>
				<defaultValue></defaultValue>
				<regex>.+</regex>
				<widget>Input Field</widget>
			</property>
		</slot>
		<slot id="c8pqdh" name="Description" unique="false">
			<property href="#Property_2Description_user_3310902697"></property>
		</slot>
		<identProp slotID="c7pq2k"></identProp>
		<object id="Object_Package_sysadmin_3511526246" type="Object_Package_sysadmin_3511526246" typeName="Package">
			<description>Package is used for organization of the packageable elements in the model. Each package contains a subgraph defining the contents of the package.</description>
			<identReport>do decompositions { id }</identReport>
			<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="46.8571,30 42.2857,35 40,40 40,110 200,110 200,43 195.048,38.6667 107.239,38.6667 105.143,34 100.571,30 46.8571,30" targetPointX="120" targetPointY="70" usesGrid="true"></defaultConnectable>
				<svg baseProfile="tiny" height="113" version="1.2" width="203" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.493333" x2="0.507143" y1="0.175" y2="0.9875">
							<stop offset="0" stop-color="rgb(224,255,192)"></stop>
							<stop offset="1" stop-color="rgb(0,255,0)"></stop>
						</linearGradient>
						<linearGradient gradientUnits="objectBoundingBox" id="gradient2" sym:correctGamma="true" x1="0.5" x2="0.507143" y1="0.5" y2="0.9875">
							<stop offset="0" stop-color="rgb(253,250,197)"></stop>
							<stop offset="0.712358" stop-color="rgb(238,222,137)"></stop>
							<stop offset="1" stop-color="rgb(222,193,77)"></stop>
						</linearGradient>
					</defs>
					<polygon fill="rgb(170,170,170)" points="49.8571,33 45.2857,38 43,43 43,113 203,113 203,46 198.048,41.6667 110.239,41.6667 108.143,37 103.571,33" stroke="rgb(96,96,96)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</polygon>
					<polygon fill="url(#gradient1)" points="46.8571,30 42.2857,35 40,40 40,110 200,110 200,43 195.048,38.6667 107.239,38.6667 105.143,34 100.571,30" stroke="rgb(96,96,96)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="=" matchString="SystemModel" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions {
	type
}</displayCondition>
						</metaInfo>
					</polygon>
					<polygon fill="url(#gradient2)" points="46.8571,30 42.2857,35 40,40 40,110 200,110 200,43 195.048,38.6667 107.239,38.6667 105.143,34 100.571,30" stroke="rgb(96,96,96)" stroke-width="1">
						<metaInfo xmlns="http://www.metacase.com/symbol">
							<displayCondition conditionOperator="~=" matchString="SystemModel" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions {
	type
}</displayCondition>
						</metaInfo>
					</polygon>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="40" y="40">
						ReportTextSource:id
newline
if not decompositions then
	'submodel undefined'
else
	do decompositions {
		'(' type ')'
	}
endif
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
						<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="50,30" startDistance="0">
							<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 30,30" startDistance="20"></layoutPath>
						</pathLayout>
						<generatorNPSource>oid</generatorNPSource>
						<librarySubsymbolSource>ReportTextSource:do decompositions {
	type '_symbol'
}</librarySubsymbolSource>
						<metaInfo>
							<displayCondition conditionOperator="~=" matchString="X" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if decompositions; then
do decompositions { 
 if type = 'Package' then 
  'X' 
 endif 
}
else 'X' endif
</displayCondition>
						</metaInfo>
					</template>
				</svg>
			</objectSymbol>
		</object>
		<object href="#Object_Joker_user_3399887441"></object>
		<relationship href="#Relationship_Comment_user_3460793460"></relationship>
		<role href="#Role_Comment_user_3460793566"></role>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Package_sysadmin_3511526246"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Comment_user_3460793460"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Package_sysadmin_3511526246"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Comment_user_3460793566"></role>
				<object href="#Object_Joker_user_3399887441"></object>
			</connection>
		</binding>
		<decomposition>
			<object href="#Object_Package_sysadmin_3511526246"></object>
			<graph id="Graph_PackageModel_sysadmin_3555309892" type="Graph_PackageModel_sysadmin_3555309892" typeName="Package">
				<description>EAST-ADL version M2.1.12
Package defines the hiearachy among the model elements.</description>
				<superType>
					<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
				</superType>
				<slot id="c2h95f" name="Short name" unique="false">
					<property href="#Property_2ModelName_user_3310896462"></property>
				</slot>
				<slot id="c5bq5s" name="Name" unique="false">
					<property href="#Property_Name_sysadmin_3536998876"></property>
				</slot>
				<slot id="c3h95o" name="Description" unique="false">
					<property href="#Property_2Description_user_3310902697"></property>
				</slot>
				<identReport>_name()</identReport>
				<object href="#Object_Package_sysadmin_3511526246"></object>
				<object id="Object_SystemModel_sysadmin_3562917045" type="Object_SystemModel_sysadmin_3562917045" typeName="SystemModel">
					<description>The SystemModel represents the electrical/electronic system of the vehicle, and concepts related to the various abstraction levels.</description>
					<identReport>do decompositions { id }</identReport>
					<objectSymbol offset="16,25" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
						<defaultConnectable isSticky="true" points="16,25 179,25 179,98 16,98 16,25" targetPointX="97.5" targetPointY="61.5" usesGrid="true"></defaultConnectable>
						<svg baseProfile="tiny" height="98" version="1.2" width="179" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.50625" x2="0.512499" y1="0.257143" y2="1">
									<stop offset="0" stop-color="rgb(224,255,192)"></stop>
									<stop offset="1" stop-color="rgb(0,255,0)"></stop>
								</linearGradient>
							</defs>
							<rect fill="rgb(170,170,170)" height="70" rx="0" ry="0" stroke="rgb(96,96,96)" stroke-width="1" width="160" x="19" y="28">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<rect fill="url(#gradient1)" height="70" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="16" y="25">
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</rect>
							<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="16" y="25">
								ReportTextSource:id
newline
if not decompositions then
	'submodel undefined'
else
	do decompositions {
		'(' type ')'
	}
endif
								<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
							</textArea>
						</svg>
					</objectSymbol>
					<icon offset="50,40" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="120" version="1.2" width="170" xmlns="http://www.w3.org/2000/svg">
							<rect fill="rgb(0,255,0)" height="80" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="120" x="50" y="40"></rect>
						</svg>
					</icon>
				</object>
				<object href="#Object_EAType_sysadmin_3541158109"></object>
				<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
				<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
				<object href="#Object_EABoolean_sysadmin_3536996172"></object>
				<object href="#Object_EANumerical_sysadmin_3536996437"></object>
				<object href="#Object_EAString_sysadmin_3536996221"></object>
				<object href="#Object_Enumeration_sysadmin_3536996326"></object>
				<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
				<object href="#Object_Unit_sysadmin_3536996865"></object>
				<object href="#Object_Quantity_sysadmin_3536997304"></object>
				<object href="#Object_FunctionClientServerInterface_sysadmin_3543124691"></object>
				<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
				<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
				<object href="#Object_Joker_user_3399887441"></object>
				<relationship href="#Relationship_Comment_user_3460793460"></relationship>
				<role href="#Role_Comment_user_3460793566"></role>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
						<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
						<object href="#Object_EABoolean_sysadmin_3536996172"></object>
						<object href="#Object_EANumerical_sysadmin_3536996437"></object>
						<object href="#Object_EAString_sysadmin_3536996221"></object>
						<object href="#Object_EAType_sysadmin_3541158109"></object>
						<object href="#Object_Enumeration_sysadmin_3536996326"></object>
						<object href="#Object_Package_sysadmin_3511526246"></object>
						<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
						<object href="#Object_SystemModel_sysadmin_3562917045"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
				</binding>
				<binding>
					<relationship href="#Relationship_Comment_user_3460793460"></relationship>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_Joker_user_3399887441"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
					</connection>
					<connection>
						<cardinality start="1" stop="1"></cardinality>
						<role href="#Role_Comment_user_3460793566"></role>
						<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
						<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
						<object href="#Object_EABoolean_sysadmin_3536996172"></object>
						<object href="#Object_EANumerical_sysadmin_3536996437"></object>
						<object href="#Object_EAString_sysadmin_3536996221"></object>
						<object href="#Object_EAType_sysadmin_3541158109"></object>
						<object href="#Object_Enumeration_sysadmin_3536996326"></object>
						<object href="#Object_Package_sysadmin_3511526246"></object>
						<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
						<object href="#Object_SystemModel_sysadmin_3562917045"></object>
					</connection>
				</binding>
				<decomposition>
					<object href="#Object_EAType_sysadmin_3541158109"></object>
					<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
					<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
					<graph href="#Graph_Behavior_user_3506169134"></graph>
					<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
					<graph id="Graph_EnvironmentModel_sysadmin_3509625580" type="Graph_EnvironmentModel_sysadmin_3509625580" typeName="EnvironmentModel">
						<description>EAST-ADL version M2.1.12
The collection of the environment functional descriptions. This collection can be done across the EAST-ADL abstraction levels. An environment model can contain functionPrototypes given by either AnalysisFunction or DesignFunction. The environment model does not have abstraction levels as in the system model (e.g., analysisLevel, designLevel).</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="b62wuc" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="b9c0gd" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="b72wuu" name="Description" unique="false">
							<property href="#Property_Model_description_user_3399887679"></property>
						</slot>
						<identReport>_name()</identReport>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_Joker_user_3399887441"></object>
						<relationship href="#Relationship_ClampConnector_sysadmin_3509625807"></relationship>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<role href="#Role_ClientPort_user_3461406969"></role>
						<role href="#Role_ADLInFlowPort_user_3400497566"></role>
						<role href="#Role_InPowerPort_user_3461311200"></role>
						<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
						<role href="#Role_OutPowerPort_user_3461311212"></role>
						<role href="#Role_ServerPort_user_3461407124"></role>
						<role href="#Role_Comment_user_3460793566"></role>
						<role href="#Role_ClientPort_From_user_3463040187"></role>
						<role href="#Role_ServerPort_To_user_3463040199"></role>
						<role href="#Role_InFlow_To_user_3463040003"></role>
						<role href="#Role_PowerPortTo_user_3463037978"></role>
						<role href="#Role_OutFlow_From_user_3463040034"></role>
						<role href="#Role_PowerPortFrom_user_3463037350"></role>
						<binding>
							<relationship href="#Relationship_ClampConnector_sysadmin_3509625807"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_ClientPort_user_3461406969"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<port href="#Object_OutPortGroup_user_3463131108"></port>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_ServerPort_user_3461407124"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<port href="#Object_InPortGroup_user_3463130898"></port>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ClampConnector_sysadmin_3509625807"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_ADLOutFlowPort_user_3400497659"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
								<port href="#Object_ADLOutFlowPort_user_3402566478"></port>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_ADLInFlowPort_user_3400497566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<port href="#Object_ADLInFlowPort_user_3402566388"></port>
								<port href="#Object_InOutFlowPort_sysadmin_3609595609"></port>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ClampConnector_sysadmin_3509625807"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_OutPowerPort_user_3461311212"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<port href="#Object_OutPowerPort_user_3461402381"></port>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_InPowerPort_user_3461311200"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<port href="#Object_OutPowerPort_user_3461402381"></port>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							</connection>
						</binding>
						<decomposition>
							<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
						</decomposition>
						<report>
							Report '!Check'
/* Check generator the validate the EAST-ADL EnvironementModel */
Check()
endreport
							<icon offset="79,68" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
											<stop offset="1" stop-color="rgb(0,192,0)"></stop>
										</radialGradient>
									</defs>
									<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
									<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								</svg>
							</icon>
						</report>
						<report>Check()
_translators()
'Warnings:' newline
$warnings = '0'
$LiveCheck = 'F' /* calls reports not to run via liveCheck pane */

_checkings() 

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif</report>
						<report>Report 'Trace all functions'
/* Reports all functions of EAST-ADL and their links to other elements */
_translators()
$reported = ' '
'FUNCTIONS AND THEIR RELATIONSHIPS:' newline newline
do graphs {
	foreach .(*FunctionPrototype*) {
		if not $reported =~ oid%wildsp then
			variable 'reported' append oid ' ' close
			$objectType = type
			id ' &lt;' $objectType '&gt;' newline
			do :Description {id newline}
			do graphs {
				foreach .(*FunctionPrototype*) where oid = oid;2 {
					$graphType = type;1
					'- in ' id;1 ' &lt;' $graphType '&gt;' newline
					do &gt;() {
						dowhile ~(^Comment).() {
							if oid &lt;&gt; oid;2 then
								$objectType = type
								'	- &lt;' type;1 '&gt; relationship with ' id ' &lt;' $objectType '&gt;' newline
							endif
						}
					}
				}
			}
		newline
		endif
	}
}
endreport</report>
						<report>_checkings()
@prototypes = '0'
foreach .(*Prototype)
{ @prototypes++%null }
if @prototypes &gt; '1' then
	_reportWarnings()
	'Warning: There are more than one FunctionPrototype in ' id; ' &lt;' type '&gt;. Only one FunctionPrototype is expected!' newline
endif
</report>
						<report>_elements()
'&lt;ELEMENTS&gt;'
if type = 'EnvironmentModel' AND (not $reported_models =~ oid%wildsp) then
	variable 'reported_models' append oid ' ' close
	newline
	'&lt;!-- ENVIRONMENT name: '
	if :Name &lt;&gt; '' then
		:Name ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;ENVIRONMENT UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline endif
	_description()
	'&lt;ENVIRONMENT-MODEL&gt;' 
	foreach .(*FunctionPrototype) 
	{	newline;
		local 'type_name' write type%minus%upper	close
		local 'nameValue' write :Name%xml close
		local 'descriptionValue' write :Description%xml close 
		'&lt;!-- ' @type_name ' name: '
		if @nameValue; then
			@nameValue ' (' :Short name%var ')'
		else
			:Short name;%var
		endif
		' --&gt;' newline
		'&lt;' @type_name ' UUID="' :__UUID '"&gt;' newline	
		'&lt;SHORT-NAME&gt;' :Short name;%var '&lt;/SHORT-NAME&gt;' newline
		if @nameValue; then
			'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
		endif
		if @descriptionValue &lt;&gt; '' then
			'&lt;OWNED-COMMENTS&gt;' newline
			'&lt;COMMENT&gt;' newline
			'&lt;BODY&gt;' @descriptionValue '&lt;/BODY&gt;' newline
			'&lt;/COMMENT&gt;' newline
			'&lt;/OWNED-COMMENTS&gt;' newline
		endif
		/* Generating TYPE-TREF information */
		do decompositions 
		{	local 'function_type_name' write type;%minus%upper close
			'&lt;!-- ' @function_type_name ' name: ' :FunctionName; ' --&gt;' newline
			'&lt;TYPE-TREF TYPE="' @function_type_name '"&gt;' variable oid '_path' read '&lt;/TYPE-TREF&gt;' newline 
		}
		'&lt;/' @type_name '&gt;'
	}
	newline
	'&lt;/ENVIRONMENT-MODEL&gt;'
	'&lt;/ENVIRONMENT&gt;' newline
endif
'&lt;/ELEMENTS&gt;' newline</report>
						<report>_PartOfArchitecture()
do graphs where type = 'AnalysisFunctionType' or type = 'DesignFunctionType' or type = 'SystemModel' {
	foreach .(*Prototype) {
		if oid = oid;2 then 'Part of system architecture'
		endif
	}
}</report>
						<report>__LiveCheck()
subreport '_translators' run 

$warnings = '0'
$LiveCheck = 'T'

_checkings() 

if $warnings = '0' then
	'No warnings' newline
endif</report>
						<constraints>
							<connectivity>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<relationship href="#Relationship_Comment_user_3460793460"></relationship>
								<max>1</max>
							</connectivity>
							<uniqueness>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="35,30" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="100" version="1.2" width="105" xmlns="http://www.w3.org/2000/svg">
								<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="70" sym:width="70" sym:x="3.5e1" sym:y="3.0e1">
									<polygon fill="rgb(0,0,0)" points="105,53.3333 87.5,65 87.5,41.6667" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<polyline fill="none" points="35,65 52.5,30 70,100 78.75,53.3333 87.5,53.3333" stroke="rgb(0,0,0)" stroke-width="1"></polyline>
								</g>
							</svg>
						</icon>
					</graph>
					<graph href="#Graph_ErrorModel_sysadmin_3509186594"></graph>
					<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
				</decomposition>
				<decomposition>
					<object href="#Object_Package_sysadmin_3511526246"></object>
					<graph href="#Graph_FunctionAllocation_sysadmin_3509782531"></graph>
					<graph href="#Graph_BehaviorConstraintGraph_sysadmin_3557736543"></graph>
					<graph href="#Graph_Behavior_user_3506169134"></graph>
					<graph href="#Graph_Dependability_sysadmin_3509190231"></graph>
					<graph href="#Graph_EnvironmentModel_sysadmin_3509625580"></graph>
					<graph href="#Graph_ErrorModel_sysadmin_3509186594"></graph>
					<graph href="#Graph_PackageModel_sysadmin_3555309892"></graph>
					<graph id="Graph_RequirementsAllocation_sysadmin_3509180760" type="Graph_RequirementsAllocation_sysadmin_3509180760" typeName="RequirementsAllocation">
						<description>EAST-ADL version M2.1.12
RequirementsAllocation specifies how features, types and prototypes satisfy the named requirements.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="ayjsz2" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="b1c4kc" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="azjszm" name="Model description" unique="false">
							<property href="#Property_Model_description_user_3399887679"></property>
						</slot>
						<identReport>_name()</identReport>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<object href="#Object_EAType_sysadmin_3541158109"></object>
						<object href="#Object_Feature_user_3399887361"></object>
						<object href="#Object_VehicleFeature_user_3400133821"></object>
						<object href="#Object_UseCase_user_3462616740"></object>
						<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<decomposition>
							<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_EAType_sysadmin_3541158109"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<constraints>
							<uniqueness>
								<object href="#Object_Feature_user_3399887361"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_QualityRequirement_user_3400822352"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UseCase_user_3462616740"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="79,7" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="26" version="1.2" width="98" xmlns="http://www.w3.org/2000/svg">
								<g fill="none" stroke="rgb(0,0,0)" stroke-width="1" sym:height="19" sym:width="19" sym:x="7.9e1" sym:y="7.0e0">
									<polygon fill="rgb(213,213,213)" points="98,7 87.7297,10.2522 94.5764,16.7568" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="89.2703" x2="85.8467" y1="15.7297" y2="19.1532"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="82.4234" x2="79" y1="22.5766" y2="26"></line>
								</g>
							</svg>
						</icon>
					</graph>
					<graph id="Graph_Requirement_view_user_3401441403" type="Graph_Requirement_view_user_3401441403" typeName="RequirementsModel">
						<description>EAST-ADL version M2.1.12
The RequirementsModel is a container element for requirement-related elements.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="a0mi21" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="a3c4xa" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="a1mi2d" name="Description" unique="false">
							<property href="#Property_2Description_user_3310902697"></property>
						</slot>
						<identReport>_name()</identReport>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object id="Object_RequirementsHierarchy_sysadmin_3568032191" type="Object_RequirementsHierarchy_sysadmin_3568032191" typeName="RequirementsHierarchy">
							<description>RequirementsHierarchy represents a larger unit or module of specification information. It is used to bundle several Requirements which are semantically related to each other.</description>
							<slot id="kgc5an" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="kdmmib" name="Short name" unique="false">
								<property type="Property_Hierarchy_name_sysadmin_3568032185" typeName="Hierarchy name">
									<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="khc5aw" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="kfmmnd" name="Contained requirement" unique="false">
								<property type="Property_Requirement_sysadmin_3568032276" typeName="Requirement">
									<description></description>
									<dataType>
										<object href="#Object_ADLRequirement_user_3400763726"></object>
									</dataType>
									<dataTypeSubtype>
										<object href="#Object_QualityRequirement_user_3400822352"></object>
									</dataTypeSubtype>
								</property>
							</slot>
							<slot id="kemmm4" name="Child hierarchy" unique="false">
								<property type="Property_Hierarchy_sysadmin_3568032254" typeName="Hierarchy">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object href="#Object_RequirementsHierarchy_sysadmin_3568032191"></object>
									</contentsDataType>
								</property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="40,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="40,20 150,20 150,110 40,110 40,20" targetPointX="95" targetPointY="65" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="110" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="1" stop-color="rgb(255,255,224)"></stop>
										</radialGradient>
									</defs>
									<rect fill="url(#gradient1)" height="90" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="110" x="40" y="20">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="110" x="40" y="20">
										ReportTextSource:id; newline
@tab = ''
_translators()
_req_hierarchy(@tab)
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="22" subsymbolExtentY="22" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="150,20" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -20,20" startDistance="8"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>Hierarchy</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
								</svg>
							</objectSymbol>
							<icon offset="40,20" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="100" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="80" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="90" x="40" y="20"></rect>
									<line stroke="rgb(0,0,0)" stroke-width="4" x1="60" x2="60" y1="30" y2="90"></line>
									<line stroke="rgb(0,0,0)" stroke-width="4" x1="60" x2="110" y1="90" y2="90"></line>
									<line stroke="rgb(0,0,0)" stroke-width="4" x1="60" x2="110" y1="70" y2="70"></line>
									<line stroke="rgb(0,0,0)" stroke-width="4" x1="60" x2="110" y1="50" y2="50"></line>
								</svg>
							</icon>
						</object>
						<object id="Object_ADLRequirementContainer_user_3401012713" type="Object_ADLRequirementContainer_user_3401012713" typeName="RequirementsRelationshipGroup">
							<description>RequirementsRelationGroup represents a group of relations between Requirements.</description>
							<slot id="czc5io" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="cyr0e7" name="Short name" unique="false">
								<property type="Property_RequirementContainerName_user_3401012703" typeName="RequirementRelationshipName">
									<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="d0c5l4" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="d1nw4f" name="RequirementsLinks" unique="false">
								<property type="Property_RequirementsLinks_user_3605853103" typeName="RequirementsLinks">
									<description>RequirementsLinks field must have at least one RequirementLink specified.</description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<regex>.+</regex>
									<contentsDataType>
										<relationship href="#Relationship_ReqRelation_user_3401014914"></relationship>
									</contentsDataType>
								</property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="60,50 240,50 240,170 60,170 60,50" targetPointX="150" targetPointY="110" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="170" version="1.2" width="240" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="1" stop-color="rgb(179,255,179)"></stop>
										</radialGradient>
									</defs>
									<rect fill="rgb(0,128,0)" height="120" rx="0" ry="0" stroke="rgb(0,128,0)" stroke-width="1" width="180" x="60" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<rect fill="url(#gradient1)" height="120" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="180" x="60" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="180" x="60" y="50">
										RequirementRelations
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="180" x="60" y="50">
										ReportTextSource:newline newline newline
:Description
if decompositions; then
	'Relationships for ' newline
	do decompositions {
		@sep = ''
		foreach &gt;(^Comment) {
			@sep
			dowhile ~() {
				do .() { id } 
				'&lt;-&gt;'
			}
			@sep = ', '
			}
	}
endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="13" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="180" x="60" y="50">
										ReportTextSource:newline newline
'----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="60" y="50">
										ReportTextSource:newline
id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<rect fill="none" height="120" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="3" width="180" x="60" y="50">
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="=" matchString="T" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if decompositions; then 'T' endif</displayCondition>
										</metaInfo>
									</rect>
								</svg>
							</objectSymbol>
						</object>
						<object href="#Object_Package_sysadmin_3511526246"></object>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<object href="#Object_EAType_sysadmin_3541158109"></object>
						<object href="#Object_Feature_user_3399887361"></object>
						<object href="#Object_VehicleFeature_user_3400133821"></object>
						<object href="#Object_UseCase_user_3462616740"></object>
						<object href="#Object_Actor_user_3610197079"></object>
						<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
						<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
						<object href="#Object_UserElementType_sysadmin_3564907450"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_Joker_user_3399887441"></object>
						<relationship href="#Relationship_ADLRefine_user_3400828446"></relationship>
						<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
						<relationship href="#Relationship_ReqRelation_user_3401014914"></relationship>
						<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
						<relationship href="#Relationship_Association_sysadmin_3612005968"></relationship>
						<relationship href="#Relationship_Extend_user_3610197764"></relationship>
						<relationship href="#Relationship_Include_user_3610197879"></relationship>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<role href="#Role_Comment_user_3460793566"></role>
						<role href="#Role_Derived_user_3401339852"></role>
						<role href="#Role_DerivedFrom_user_3401339830"></role>
						<role href="#Role_RefinedBy_user_3400911140"></role>
						<role href="#Role_RefinedRequirement_user_3400911125"></role>
						<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
						<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
						<role href="#Role_Source_user_3401014933"></role>
						<role href="#Role_Target_user_3401015012"></role>
						<role href="#Role_SatisfiedUseCase_sysadmin_3509774817"></role>
						<role href="#Role_Addition_user_3610198363"></role>
						<role href="#Role_Extend_user_3610198310"></role>
						<role href="#Role_UseCase_has_user_3610198283"></role>
						<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
						<binding>
							<relationship href="#Relationship_Association_sysadmin_3612005968"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
								<object href="#Object_Actor_user_3610197079"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Association_sysadmin_3612005968"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_AssociationEnd_sysadmin_3612006035"></role>
								<object href="#Object_Actor_user_3610197079"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
								<object href="#Object_Package_sysadmin_3511526246"></object>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<object href="#Object_RequirementsHierarchy_sysadmin_3568032191"></object>
								<object href="#Object_ADLRequirementContainer_user_3401012713"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
								<object href="#Object_UserElementType_sysadmin_3564907450"></object>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
								<object href="#Object_Package_sysadmin_3511526246"></object>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<object href="#Object_RequirementsHierarchy_sysadmin_3568032191"></object>
								<object href="#Object_ADLRequirementContainer_user_3401012713"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
								<object href="#Object_UserElementType_sysadmin_3564907450"></object>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLDeriveReqt_user_3401339768"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_DerivedFrom_user_3401339830"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Derived_user_3401339852"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Extend_user_3610197764"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_UseCase_has_user_3610198283"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Extend_user_3610198310"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Include_user_3610197879"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_UseCase_has_user_3610198283"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Addition_user_3610198363"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLRefine_user_3400828446"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_RefinedBy_user_3400911140"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_RefinedRequirement_user_3400911125"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLRefine_user_3400828446"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_RefinedRequirement_user_3400911125"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_RefinedBy_user_3400911140"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ReqRelation_user_3401014914"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Source_user_3401014933"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Target_user_3401015012"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedUseCase_sysadmin_3509774817"></role>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLSatisfy_user_3400828420"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedRequirement_user_3400911596"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_SatisfiedByADLEntity_user_3400911628"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<object href="#Object_UseCase_user_3462616740"></object>
							</connection>
						</binding>
						<decomposition>
							<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
							<graph href="#Graph_BehaviorConstraint_user_3506169563"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_EAType_sysadmin_3541158109"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_Package_sysadmin_3511526246"></object>
							<graph href="#Graph_Requirement_view_user_3401441403"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_ADLRequirementContainer_user_3401012713"></object>
							<graph href="#Graph_Requirement_view_user_3401441403"></graph>
						</decomposition>
						<report>
							!Check()
/* Checking generator for EAST-ADL Requirements Models */
Check()
							<icon offset="37,32" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="80" version="1.2" width="85" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
											<stop offset="1" stop-color="rgb(0,192,0)"></stop>
										</radialGradient>
									</defs>
									<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="37" y="40"></rect>
									<polygon fill="url(#gradient1)" points="46.3,44.5714 42,50.8571 42,57.1429 54.9,76 59.2,76 85,44.5714 85,38.2857 80.7,32 76.4,32 58.34,60.9143 50.6,44.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								</svg>
							</icon>
						</report>
						<report>Check()
subreport '_translators' run
subreport '_EAST-ADL specific translators' run
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

/* Checking for legal path hierarchy */
_LegalTypePath()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif

</report>
						<report>Report 'Trace all requirements'
/* reports all requirements of EAST-ADL and their links to other elements */
_translators()
$reported = ' '
'REQUIREMENTS AND THEIR RELATIONSHIPS:' newline newline
do graphs {
	foreach .(*Requirement*) {
		if not $reported =~ oid%wildsp then
			variable 'reported' append oid ' ' close
			$objectType = type
			id ' &lt;' $objectType '&gt;' newline
			do :Description {id newline}
			do graphs {
				foreach .(*Requirement*) where oid = oid;2 {
					$graphType = type;1
					'- in ' id;1 ' &lt;' $graphType '&gt;' newline
					do &gt;() {
						dowhile ~(^Comment).() {
							if oid &lt;&gt; oid;2 then
								$objectType = type
								'	- &lt;' type;1 '&gt; relationship with ' id ' &lt;' $objectType '&gt;' newline
							endif
						}
					}
				}
			}
		newline
		endif
	}
}
endreport</report>
						<report>_elements()
_timingTranslators()
'&lt;ELEMENTS&gt;'
if type = 'RequirementsModel' AND (not $reported_models =~ oid%wildsp) then
	variable 'reported_models' append oid ' ' close
	newline
	'&lt;!-- REQUIREMENTS-MODEL name: '
		if :Name &lt;&gt; '' then
		:Name ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;REQUIREMENTS-MODEL UUID="' :__UUID; '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name &lt;&gt; '' then
		'&lt;NAME&gt;' :Name;%xml '&lt;/NAME&gt;' 
	endif
	subreport '_owned-relationships' run
	_operationalSituations() 
	newline
	'&lt;REQUIREMENTS&gt;'
	foreach .(*Requirement) { subreport '_requirement' run }
	'&lt;/REQUIREMENTS&gt;' newline
	_useCases()
	
	'&lt;/REQUIREMENTS-MODEL&gt;' newline
endif
'&lt;/ELEMENTS&gt;' newline</report>
						<constraints>
							<connectivity>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<relationship href="#Relationship_Comment_user_3460793460"></relationship>
								<max>1</max>
							</connectivity>
							<uniqueness>
								<object href="#Object_Feature_user_3399887361"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UseCase_user_3462616740"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_Actor_user_3610197079"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_BehaviorConstraintType_sysadmin_3508101298"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_RequirementsHierarchy_sysadmin_3568032191"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLRequirementContainer_user_3401012713"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="102,41" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="60" version="1.2" width="121" xmlns="http://www.w3.org/2000/svg">
								<defs>
									<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
										<stop offset="0" stop-color="rgb(255,255,255)"></stop>
										<stop offset="0.649419" stop-color="rgb(192,0,0)"></stop>
										<stop offset="1" stop-color="rgb(192,0,0)"></stop>
									</radialGradient>
								</defs>
								<polygon fill="url(#gradient1)" points="103.9,46.4286 102,49.1428 102,51.8572 107.7,60 109.6,60 121,46.4286 121,43.7143 119.1,41 117.2,41 109.22,53.4857 105.8,46.4286" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							</svg>
						</icon>
					</graph>
					<graph href="#Graph_Timing_user_3506250345"></graph>
					<graph id="Graph_Variability_sysadmin_3610110810" type="Graph_Variability_sysadmin_3610110810" typeName="Variability">
						<description>EAST-ADL version M2.1.12
Variability graph is a collection of descriptions, related feature models, and decision models. This collection can be done across the EAST-ADL abstraction levels.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="c9qejb" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="caqek1" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="cbqekr" name="Description" unique="false">
							<property href="#Property_2Description_user_3310902697"></property>
						</slot>
						<identReport>_name()</identReport>
						<object id="Object_FeatureModel_sysadmin_3610111147" type="Object_FeatureModel_sysadmin_3610111147" typeName="Feature model">
							<description>FeatureModel object refers to the subgraph specifying a feature model. </description>
							<identReport>if decompositions; then
	do decompositions  {
		id 
	}
else
	'Feature model not selected'
endif</identReport>
							<objectSymbol offset="40,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="46.8571,20 42.2857,25 40,30 40,100 200,100 200,33 195.048,28.6667 107.239,28.6667 105.143,24 100.571,20 46.8571,20" targetPointX="120" targetPointY="60" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="100" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.48125" x2="0.507143" y1="0.15" y2="0.9875">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="0.772751" stop-color="rgb(224,255,224)"></stop>
											<stop offset="1" stop-color="rgb(179,255,179)"></stop>
										</linearGradient>
									</defs>
									<polygon fill="url(#gradient1)" points="46.8571,20 42.2857,25 40,30 40,100 200,100 200,33 195.048,28.6667 107.239,28.6667 105.143,24 100.571,20" stroke="rgb(96,96,96)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol">
											<displayCondition conditionOperator="~=" matchString="SystemModel" xmlns="http://www.w3.org/2000/svg">ReportTextSource:do decompositions {
	type
}</displayCondition>
										</metaInfo>
									</polygon>
									<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="50,20" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 30,30" startDistance="20"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>VehicleFeatureRealisation_symbol</librarySubsymbolSource>
										<metaInfo>
											<displayCondition conditionOperator="~=" matchString="X" xmlns="http://www.w3.org/2000/svg">ReportTextSource:if decompositions; then
do decompositions { 
 if type = 'Package' then 
  'X' 
 endif 
}
else 'X' endif
</displayCondition>
										</metaInfo>
									</template>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="50" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="40" y="50">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
						</object>
						<object id="Object_ConfigurableContainer_sysadmin_3610112308" type="Object_ConfigurableContainer_sysadmin_3610112308" typeName="Configurable container">
							<description>ConfigurableContainer is a marker class that marks an element identified by association configurableElement as a configurable container of some variable content, i.e. VariableElements and other, lower-level ConfigurableContainers. In order to describe the contained variability to the outside world and to allow configuration of it, the ConfigurableContainer can have a public feature model and an internal configuration decision model not visible from the outside, called "internal binding".</description>
							<slot id="kiqgfv" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="kjqgiq" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="kkqgjh" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="kotfod" name="Internal binding" unique="false">
								<property type="Property_Internal_binding_user_3610181454" typeName="Internal binding">
									<description></description>
									<dataType>
										<object type="Object_Internal_binding_user_3610181366" typeName="Internal binding">
											<description>The InternalBinding is the private, internal ConfigurationDecisionModel of the ConfigurableContainer. It defines how the internal, lower-level variability of the ConfigurableContainer is bound, i.e. configured, depending on a given configuration of the ConfigurableContainer's public feature model. </description>
											<slot id="a0tppm" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="a1tpps" name="Short name" unique="false">
												<property href="#Property_2ECUName_user_3310972947"></property>
											</slot>
											<slot id="a2tpq1" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<slot id="a4tqyc" name="Configuration decision entries" unique="false">
												<property id="Property_Configuration_decision_entries_user_3610188762" type="Property_Configuration_decision_entries_user_3610188762" typeName="Configuration decision entries">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object___Configuration_entry_user_3610188109" type="Object___Configuration_entry_user_3610188109" typeName="__Configuration entry">
															<description>ConfigurationDecisionModelEntry is the abstract base class for all content of a ConfigurationDecisionModel.</description>
															<slot id="l7tpwv" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="l8tpx2" name="Short name" unique="false">
																<property href="#Property_2ECUName_user_3310972947"></property>
															</slot>
															<slot id="l9tpx8" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="lctq5n" name="IsActive" unique="false">
																<property href="#Property_IsActive_user_3400153841"></property>
															</slot>
															<slot id="latpxk" name="Description" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataType>
													<contentsDataTypeSubtype>
														<object id="Object_Configuration_decision_user_3610188409" type="Object_Configuration_decision_user_3610188409" typeName="Configuration decision">
															<description>Configuration decision represents a single, atomized rule on how to configure the target feature model(s) of the containing configuration decision model, depending on a given configuration of the source feature model(s). </description>
															<superType>
																<object href="#Object___Configuration_entry_user_3610188109"></object>
															</superType>
															<slot id="ldtqad" name="Criterion" unique="false">
																<property href="#Property_Criterion_user_3461225100"></property>
															</slot>
															<slot id="lftqqn" name="Selection criterion" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<slot id="letqcd" name="Effect" unique="false">
																<property type="Property_Effect_user_3610188366" typeName="Effect">
																	<description>States which Features are included/selected by the ConfigurationDecision in case the logical expression in 'criterion' evaluates to true.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="lgtqsp" name="Target" unique="false">
																<property href="#Property_2Description_user_3310902697"></property>
															</slot>
															<slot id="lhtqoq" name="isEquivalence" unique="false">
																<property type="Property_isEquivalence_user_3610188589" typeName="isEquivalence">
																	<description>Setting the attribute isEquivalence to true means that the features referred to in the configuration decision's effect are exclusively configured by this configuration decision.</description>
																	<dataType>
																		<simpleType>Boolean</simpleType>
																	</dataType>
																	<defaultValue>
																		<bool>false</bool>
																	</defaultValue>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataTypeSubtype>
													<contentsDataTypeSubtype>
														<object id="Object_Configuration_folder_user_3610188175" type="Object_Configuration_folder_user_3610188175" typeName="Configuration folder">
															<description>Configuration Folder represents a grouping for configuration decisions.</description>
															<superType>
																<object href="#Object___Configuration_entry_user_3610188109"></object>
															</superType>
															<slot id="lbtq1n" name="Child entries" unique="false">
																<property type="Property_Child_entries_user_3610188173" typeName="Child entries">
																	<description></description>
																	<dataType>
																		<simpleType>Collection</simpleType>
																	</dataType>
																	<contentsDataType>
																		<object href="#Object___Configuration_entry_user_3610188109"></object>
																	</contentsDataType>
																	<contentsDataTypeSubtype>
																		<object href="#Object_Configuration_decision_user_3610188409"></object>
																	</contentsDataTypeSubtype>
																	<contentsDataTypeSubtype>
																		<object href="#Object_Configuration_folder_user_3610188175"></object>
																	</contentsDataTypeSubtype>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataTypeSubtype>
												</property>
											</slot>
											<slot id="a3tpr3" name="Description" unique="false">
												<property href="#Property_2Description_user_3310902697"></property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
										</object>
									</dataType>
								</property>
							</slot>
							<slot id="knqi2f" name="Private content" unique="false">
								<property type="Property_Private_content_sysadmin_3610113019" typeName="Private content">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object type="Object_PrivateContent_sysadmin_3610112932" typeName="PrivateContent">
											<description>PrivateContent is a marker class that marks the artifact element denoted by association privateElement as private, i.e., it will not be presented to the outside of the containing ConfigurableContainer.</description>
											<slot id="knqgvc" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="koqgvs" name="Short name" unique="false">
												<property href="#Property_2ECUName_user_3310972947"></property>
											</slot>
											<slot id="kpqgw2" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<slot id="kqqgwn" name="Description" unique="false">
												<property href="#Property_2Description_user_3310902697"></property>
											</slot>
											<slot id="krqh6x" name="FunctionPrototype" unique="false">
												<property href="#Property_function_sysadmin_3548178696"></property>
											</slot>
											<slot id="ksqhlb" name="FunctionPort" unique="false">
												<property id="Property_FunctionPort_sysadmin_3610112711" type="Property_FunctionPort_sysadmin_3610112711" typeName="FunctionPort">
													<description></description>
													<dataType>
														<object href="#Object_FunctionPort_user_3463141388"></object>
													</dataType>
													<dataTypeSubtype>
														<object href="#Object_OutPowerPort_user_3461402381"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object__ClientServerPort_sysadmin_3615023373"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object__FunctionFlowPort_sysadmin_3548244399"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_OutPortGroup_user_3463131108"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_InPortGroup_user_3463130898"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_ADLInFlowPort_user_3402566388"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_InOutFlowPort_sysadmin_3609595609"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_ADLOutFlowPort_user_3402566478"></object>
													</dataTypeSubtype>
												</property>
											</slot>
											<slot id="ktqhqp" name="HardwareComponentPrototype" unique="false">
												<property id="Property_HardwareComponentPrototype_sysadmin_3610112807" type="Property_HardwareComponentPrototype_sysadmin_3610112807" typeName="HardwareComponentPrototype">
													<description></description>
													<dataType>
														<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
													</dataType>
												</property>
											</slot>
											<slot id="kuqhtu" name="HardwarePin" unique="false">
												<property id="Property_HardwarePin_sysadmin_3610112865" type="Property_HardwarePin_sysadmin_3610112865" typeName="HardwarePin">
													<description></description>
													<dataType>
														<object href="#Object_HDAPort_user_3463141315"></object>
													</dataType>
													<dataTypeSubtype>
														<object href="#Object_CommunicationHardwarePin_To_user_3461929103"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_CommunicationHardwarePinInOut_sysadmin_3609658631"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_CommunicationHardwarePin_From_user_3461928850"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_IOHardwarePin_To_user_3461931130"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_IOHardwarePinInOut_sysadmin_3609659437"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_IOHardwarePin_From_user_3461930920"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_PowerHardwarePin_To_user_3461930006"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_PowerHardwarePinInOut_sysadmin_3609658862"></object>
													</dataTypeSubtype>
													<dataTypeSubtype>
														<object href="#Object_PowerHardwarePin_From_user_3461930168"></object>
													</dataTypeSubtype>
												</property>
											</slot>
											<slot id="kvqhvs" name="ClampConnector" unique="false">
												<property id="Property_ClampConnector_sysadmin_3610112900" type="Property_ClampConnector_sysadmin_3610112900" typeName="ClampConnector">
													<description></description>
													<dataType>
														<relationship href="#Relationship_ClampConnector_sysadmin_3509625807"></relationship>
													</dataType>
												</property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif

if :FunctionPrototype; then @this = :FunctionPrototype; local 'found' append 'T' close endif
if :FunctionPort; then @this = :FunctionPort; local 'found' append 'T' close endif
if :HardwareComponentPrototype; then @this = :HardwareComponentPrototype; local 'found' append 'T' close endif
if :HardwarePin; then @this = :HardwarePin; local 'found' append 'T' close endif
if :ClampConnector; then @this = :ClampConnector; local 'found' append 'T' close endif

' ['
if @found = 'T' then 
	@this
else
	'Define one prototype/port identifiable'
endif
']'</identReport>
										</object>
									</contentsDataType>
								</property>
							</slot>
							<slot id="klqgpe" name="Public feature model" unique="false">
								<property type="Property_Public_feature_model_sysadmin_3610112137" typeName="Public feature model">
									<description></description>
									<dataType>
										<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
									</dataType>
								</property>
							</slot>
							<slot id="kpl5lm" name="ConfigurableElement" unique="false">
								<property type="Property_ConfigurableElement_sysadmin_3615027149" typeName="ConfigurableElement">
									<description></description>
									<dataType>
										<object href="#__Object"></object>
									</dataType>
								</property>
							</slot>
							<slot id="kmqgjw" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="10,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="10,30 20.7692,20 150,20 150,110 139.231,120 10,120 10,30" targetPointX="80" targetPointY="70" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="120" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(255,255,255)" points="10,30 20.7692,20 150,20 150,110 139.231,120 139.231,30" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="130" x="10" y="30">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="150" x2="140" y1="20" y2="30">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</line>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="90" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="start" width="130" x="10" y="30">
										ReportTextSource:newline newline
do decompositions {
	'Conf: ' id newline} 
if :Internal binding; then
	'Int: ' :Internal binding; newline
endif
if :Private content; then 
	do :Private content; {
	'Pri: ' id newline
	}
endif
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<polyline fill="none" points="140,120 10,120 10,30" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polyline>
									<template aligmentPointX="0" aligmentPointY="0.5" isMovable="false" revealConnectables="true" rotation="false" scaleFilter="1,0" subsymbolExtentX="120" subsymbolExtentY="20" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="75,120" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 0,-90" startDistance="0"></layoutPath>
										</pathLayout>
										<propertyNPSource source="klqgpe"></propertyNPSource>
										<librarySubsymbolSource>FeatureModel_subsymbol</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
								</svg>
							</objectSymbol>
							<icon offset="60,30" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="80" version="1.2" width="130" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="40" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="50" x="60" y="40"></rect>
									<polygon fill="rgb(255,255,255)" points="60,40 80,30 130,30 130,70 110,80 110,40" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="130" x2="110" y1="30" y2="40"></line>
								</svg>
							</icon>
						</object>
						<object id="Object_VariableElement_sysadmin_3610113954" type="Object_VariableElement_sysadmin_3610113954" typeName="Variable element">
							<description>VariableElement is a marker class that marks an artifact element denoted by association optionalElement as being optional, i.e. it will not be present in all configurations of the complete system. A typical example is an optional FunctionPrototype.</description>
							<slot id="kwqj5e" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="kxqj63" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="kyqj69" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="kzqjd2" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<slot id="l5qk9b" name="RequiredBindingTime" unique="false">
								<property href="#Property_BindingTimeKind_user_3399886739"></property>
							</slot>
							<slot id="l6qka6" name="ActualBindingTime" unique="false">
								<property href="#Property_BindingTimeKind_user_3399886739"></property>
							</slot>
							<slot id="l0qjdi" name="FunctionPrototype" unique="false">
								<property href="#Property_function_sysadmin_3548178696"></property>
							</slot>
							<slot id="l1qjdw" name="FunctionPort" unique="false">
								<property href="#Property_FunctionPort_sysadmin_3610112711"></property>
							</slot>
							<slot id="l2qjf3" name="HardwareComponentPrototype" unique="false">
								<property href="#Property_HardwareComponentPrototype_sysadmin_3610112807"></property>
							</slot>
							<slot id="l3qjgh" name="HardwarePin" unique="false">
								<property href="#Property_HardwarePin_sysadmin_3610112865"></property>
							</slot>
							<slot id="l4qji8" name="ClampConnector" unique="false">
								<property href="#Property_ClampConnector_sysadmin_3610112900"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif
</identReport>
							<objectSymbol offset="50,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="160,84 159.543,86.2961 158.243,88.2426 156.296,89.5433 154,90 55.75,90 53.4539,89.5433 51.5074,88.2426 50.2067,86.2961 49.75,84 49.75,25.75 50.2067,23.4539 51.5074,21.5074 53.4539,20.2067 55.75,19.75 154,19.75 156.296,20.2067 158.243,21.5074 159.543,23.4539 160,25.75 160,84" targetPointX="104.875" targetPointY="54.875" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="90" version="1.2" width="160" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(255,255,255)" height="70" rx="6" ry="6" stroke="rgb(128,128,128)" stroke-dasharray="4,2" stroke-width="1" width="110" x="50" y="20">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="160,90" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -30,-30" startDistance="20"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>Variable_symbol</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="110" x="50" y="20">
										ReportTextSource:id newline
' (' :ActualBindingTime; ')' newline
' ['
@sep = ''
if :FunctionPrototype; then @sep :FunctionPrototype; @sep = ', ' endif
if :FunctionPort; then @sep :FunctionPort; @sep = ', ' endif
if :HardwareComponentPrototype; then @sep :HardwareComponentPrototype; @sep = ', ' endif
if :HardwarePin; then @sep :HardwarePin; @sep = ', ' endif
if :ClampConnector; then @sep :ClampConnector; @sep = ', ' endif
if @sep = '' then 
	'Define one prototype/port identifiable'
endif
']'
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
						</object>
						<object id="Object_Feature_configuration_user_3610190170" type="Object_Feature_configuration_user_3610190170" typeName="Feature configuration">
							<description>Feature configuration defines an actual configuration of a feature model, in particular the selection or de-selection of optional features, values for selected parameterized features, and instance creations for cloned features.</description>
							<slot id="litt21" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="ljtt28" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="lktt2f" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="lltt2r" name="Configuration decision entries" unique="false">
								<property href="#Property_Configuration_decision_entries_user_3610188762"></property>
							</slot>
							<slot id="lmtt30" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="40,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="50,30 140,30 150,40 150,90 140,100 50,100 40,90 40,40 50,30" targetPointX="95" targetPointY="65" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="100" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.109091" x2="0.909091" y1="0.0142857" y2="1">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="0.633448" stop-color="rgb(224,224,255)"></stop>
											<stop offset="1" stop-color="rgb(192,192,255)"></stop>
										</linearGradient>
									</defs>
									<polygon fill="url(#gradient1)" points="50,30 140,30 150,40 150,90 140,100 50,100 40,90 40,40" stroke="rgb(128,128,255)" stroke-width="1">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
									<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="140,100" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 -30,-30" startDistance="20"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>Variable_symbol</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="bold" height="70" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="110" x="40" y="30">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<template aligmentPointX="0.5" aligmentPointY="0.5" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="0,0" subsymbolExtentX="30" subsymbolExtentY="30" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="50,100" startDistance="0">
											<layoutPath allocation="start" layoutDistance="9999" lineSegmentTable="true" points="0,0 30,-30" startDistance="20"></layoutPath>
										</pathLayout>
										<generatorNPSource>oid</generatorNPSource>
										<librarySubsymbolSource>VehicleFeatureRealisation_symbol</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
								</svg>
							</objectSymbol>
						</object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_Joker_user_3399887441"></object>
						<relationship id="Relationship_VehicleLevelBinding_sysadmin_3610111823" type="Relationship_VehicleLevelBinding_sysadmin_3610111823" typeName="VehicleLevelBinding">
							<description>Specifies a binding on the vehicle level or coming from the vehicle level with explicitly defined source and target feature models. The source feature models must be on vehicle level, but the target feature models may be located on artifact level.</description>
							<slot id="a0tss2" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="a1tssu" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="a2tst1" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="a4tsrq" name="Configuration decision entries" unique="false">
								<property href="#Property_Configuration_decision_entries_user_3610188762"></property>
							</slot>
							<slot id="a3tsth" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<relationshipSymbol offset="60,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="100" targetPointY="50" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="50" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="60" y="20">
										ReportTextSource:id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="50,20" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="70" version="1.2" width="100" xmlns="http://www.w3.org/2000/svg">
									<line stroke="rgb(0,128,0)" stroke-width="1" x1="100" x2="50" y1="20" y2="70"></line>
								</svg>
							</icon>
						</relationship>
						<relationship id="Relationship_VariationGroup_sysadmin_3610116095" type="Relationship_VariationGroup_sysadmin_3610116095" typeName="VariationGroup">
							<description>A VariationGroup defines a relation between an arbitrary number of VariableElements. It is primarily intended for defining how these VariableElements may be combined (e.g. one requires the other, alternative, etc.).</description>
							<slot id="axqmda" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="ayqmdn" name="Short name" unique="false">
								<property href="#Property_2ECUName_user_3310972947"></property>
							</slot>
							<slot id="azqmdt" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="b0qmoi" name="Constraint" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<slot id="b1qmr9" name="Kind" unique="false">
								<property href="#Property_VariabilityDependencyKind_user_3461234605"></property>
							</slot>
							<slot id="b2qmoq" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<icon offset="85,20" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="45" version="1.2" width="95" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="none" points="90,20 85,25 90,30 95,25" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="90" x2="90" y1="30" y2="45"></line>
								</svg>
							</icon>
						</relationship>
						<relationship id="Relationship_Configure_user_3610190204" type="Relationship_Configure_user_3610190204" typeName="Configure">
							<description>Configure defines the target Feature model of Feature configuration.</description>
							<relationshipSymbol offset="60,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="100" targetPointY="70" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="70" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="60" y="50">
										&lt;configures&gt;
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="60,20" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="80" version="1.2" width="120" xmlns="http://www.w3.org/2000/svg">
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="110" x2="100" y1="30" y2="40"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="90" x2="80" y1="50" y2="60"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="70" x2="60" y1="70" y2="80"></line>
									<polygon fill="rgb(255,255,255)" points="120,20 100,26.6665 113.333,40" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								</svg>
							</icon>
						</relationship>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<role id="Role_SourceVehicleFeatureModel_sysadmin_3610111869" type="Role_SourceVehicleFeatureModel_sysadmin_3610111869" typeName="SourceVehicleFeatureModel">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
							</roleSymbol>
						</role>
						<role id="Role_TargetFeatureModel_sysadmin_3610111898" type="Role_TargetFeatureModel_sysadmin_3610111898" typeName="TargetFeatureModel">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,128,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<polyline fill="none" points="135,75 150,80 135,85" stroke="rgb(0,128,0)" stroke-width="1">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polyline>
								</svg>
							</roleSymbol>
						</role>
						<role id="Role_VariationGroup_sysadmin_3610116433" type="Role_VariationGroup_sysadmin_3610116433" typeName="VariationGroup">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(255,255,255)" points="150,80 145,85 140,80 145,75" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
								</svg>
							</roleSymbol>
						</role>
						<role id="Role_VariableElement_sysadmin_3610116445" type="Role_VariableElement_sysadmin_3610116445" typeName="VariableElement">
							<description></description>
						</role>
						<role href="#Role_referred_from_sysadmin_3524947545"></role>
						<role href="#Role_refer_to_sysadmin_3524947529"></role>
						<role href="#Role_Comment_user_3460793566"></role>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
								<object href="#Object_Feature_configuration_user_3610190170"></object>
								<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
								<object href="#Object_VariableElement_sysadmin_3610113954"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
								<object href="#Object_Feature_configuration_user_3610190170"></object>
								<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
								<object href="#Object_VariableElement_sysadmin_3610113954"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Configure_user_3610190204"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_referred_from_sysadmin_3524947545"></role>
								<object href="#Object_Feature_configuration_user_3610190170"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_refer_to_sysadmin_3524947529"></role>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
								<port href="#Object_FeatureModel_sysadmin_3610111147"></port>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Configure_user_3610190204"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_referred_from_sysadmin_3524947545"></role>
								<object href="#Object_Feature_configuration_user_3610190170"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_refer_to_sysadmin_3524947529"></role>
								<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_VariationGroup_sysadmin_3610116095"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_VariationGroup_sysadmin_3610116433"></role>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="N"></cardinality>
								<role href="#Role_VariableElement_sysadmin_3610116445"></role>
								<object href="#Object_VariableElement_sysadmin_3610113954"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_VehicleLevelBinding_sysadmin_3610111823"></relationship>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_SourceVehicleFeatureModel_sysadmin_3610111869"></role>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
								<port href="#Object_FeatureModel_sysadmin_3610111147"></port>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_TargetFeatureModel_sysadmin_3610111898"></role>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
								<port href="#Object_FeatureModel_sysadmin_3610111147"></port>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_SourceVehicleFeatureModel_sysadmin_3610111869"></role>
								<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
							</connection>
							<connection>
								<cardinality start="0" stop="N"></cardinality>
								<role href="#Role_TargetFeatureModel_sysadmin_3610111898"></role>
								<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
							</connection>
						</binding>
						<decomposition>
							<object href="#Object_FeatureModel_sysadmin_3610111147"></object>
							<graph href="#Graph_FeatureModel_user_3399887714"></graph>
						</decomposition>
						<report>
							!Check()
Check()
							<icon offset="79,68" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
											<stop offset="0" stop-color="rgb(255,255,255)"></stop>
											<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
											<stop offset="1" stop-color="rgb(0,192,0)"></stop>
										</radialGradient>
									</defs>
									<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
									<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								</svg>
							</icon>
						</report>
						<report>Check()
subreport '_translators' run 
$LiveCheck = 'F' /* Check report run from toolbar/menu, not to run via liveCheck pane */
$warnings = '0'
'Warnings:' newline

_checkings()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif</report>
						<report>_checkings()
/* FeatureConfiguration must refer to one feature model */
foreach .Feature configuration 
{	if not ~referred_from; then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any feature model' 
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create a relationship between ' type ' and Feature model!'
		endif
		newline
	endif
}

/* ConfigurableContainer must refer to one ConfigurableElement */
foreach .Configurable container 
{	if :ConfigurableElement; = '' then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; does not refer to any ConfigurableElement'
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create/reuse one in ' id '''s the property dialog!'
		endif
		newline
	endif
}

/* optional element */
foreach .Variable element 
{	if :ActualBindingTime = '' then 
		_reportWarnings()
		'Warning: ' id '&lt; ' type '&gt; does not have mandatory actual binding time defined.' newline
	endif
	@found = ''
	if :FunctionPrototype; then local 'found' append 'T' close endif
	if :FunctionPort; then local 'found' append 'T' close endif
	if :HardwareComponentPrototype; then local 'found' append 'T' close endif
	if :HardwarePin; then local 'found' append 'T' close endif
	if :ClampConnector; then local 'found' append 'T' close endif
	if @found = '' then 
		_reportWarnings()
		'Warning: ' id ' &lt;' type '&gt; should refer to one optional element (Prototype, Port, Pin or ClampConnector)' 
		if $extendedCheck = 'T' then
			' in the model ' id;1 ' &lt;' type;1 '&gt;. '
		else
			'. Create/reuse one in ' id '''s the property dialog!'
		endif
		newline
	endif
}</report>
						<report>__LiveCheck()
_translators()
$warnings = '0'
$LiveCheck = 'T'

_checkings()

if $warnings = '0' then
	'No warnings' newline
endif</report>
						<constraints>
							<connectivity>
								<object href="#Object_Feature_configuration_user_3610190170"></object>
								<relationship href="#Relationship_Configure_user_3610190204"></relationship>
								<max>1</max>
							</connectivity>
							<connectivity>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<relationship href="#Relationship_Comment_user_3460793460"></relationship>
								<max>1</max>
							</connectivity>
							<uniqueness>
								<object href="#Object_ConfigurableContainer_sysadmin_3610112308"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_Feature_configuration_user_3610190170"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VariableElement_sysadmin_3610113954"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="21,32" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="52" version="1.2" width="41" xmlns="http://www.w3.org/2000/svg">
								<defs>
									<radialGradient cx="0.45" cy="0.35" gradientUnits="objectBoundingBox" id="gradient1" r="0.851469" sym:correctGamma="true" sym:fillType="PathFill">
										<stop offset="0" stop-color="rgb(0,128,0)"></stop>
										<stop offset="1" stop-color="rgb(179,255,179)"></stop>
									</radialGradient>
								</defs>
								<ellipse cx="31" cy="42" fill="url(#gradient1)" rx="10" ry="10" stroke="none" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2"></ellipse>
								<textArea display-align="center" fill="rgb(255,255,255)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="20" x="21" y="32">?</textArea>
							</svg>
						</icon>
					</graph>
					<graph href="#Graph_FeatureModel_user_3399887714"></graph>
					<graph id="Graph_FeatureAllocation_sysadmin_3509183161" type="Graph_FeatureAllocation_sysadmin_3509183161" typeName="VehicleFeatureRealisation">
						<description>EAST-ADL version M2.1.12
VehicleFeatureRealisation specifies how types and prototypes realize the named features.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="b0jx14" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="b3c7b8" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="b1jx1c" name="Model description" unique="false">
							<property href="#Property_Model_description_user_3399887679"></property>
						</slot>
						<identReport>_name()</identReport>
						<object href="#Object_Feature_user_3399887361"></object>
						<object href="#Object_VehicleFeature_user_3400133821"></object>
						<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
						<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
						<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
						<object href="#Object_EAType_sysadmin_3541158109"></object>
						<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
						<role href="#Role_2FunctionalDevice_user_3311233351"></role>
						<role href="#Role_Base_Realization_user_3400739113"></role>
						<binding>
							<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_2FunctionalDevice_user_3311233351"></role>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Base_Realization_user_3400739113"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_ADLRealization_user_3400738933"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Base_Realization_user_3400739113"></role>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<object href="#Object_EAType_sysadmin_3541158109"></object>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_2FunctionalDevice_user_3311233351"></role>
								<object href="#Object_Feature_user_3399887361"></object>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
							</connection>
						</binding>
						<decomposition>
							<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_EAType_sysadmin_3541158109"></object>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
							<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<decomposition>
							<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
							<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
						</decomposition>
						<constraints>
							<uniqueness>
								<object href="#Object_Feature_user_3399887361"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VehicleFeature_user_3400133821"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="79,70" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="89" version="1.2" width="98" xmlns="http://www.w3.org/2000/svg">
								<g fill="none" stroke="none" stroke-width="1" sym:height="19" sym:width="19" sym:x="7.9e1" sym:y="7.0e1">
									<ellipse cx="88.5" cy="79.5" fill="rgb(0,128,128)" rx="9.5" ry="9.5" stroke="rgb(0,128,128)" stroke-width="1" sym:startAngle="0.0e0" sym:sweepAngle="3.6e2"></ellipse>
									<textArea display-align="center" fill="rgb(255,255,255)" font-family="cooper black" font-size="12" font-style="normal" font-weight="normal" height="15.381" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="17.7333" x="79.6333" y="72.7143">VF</textArea>
								</g>
							</svg>
						</icon>
					</graph>
					<graph id="Graph_VerificationValidation_sysadmin_3557080813" type="Graph_VerificationValidation_sysadmin_3557080813" typeName="VerificationValidation">
						<description>EAST-ADL describes the common parts of all V&amp;V techniques, including: the results expected from the V&amp;V activities, the actual results which were obtained when applying the V&amp;V techniques, and how the V&amp;V activities are constrained. Information that is specific to an individual V&amp;V technique is not described in EAST-ADL, but a place for storing this information is provided.</description>
						<superType>
							<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
						</superType>
						<slot id="a0np72" name="Short name" unique="false">
							<property href="#Property_2ModelName_user_3310896462"></property>
						</slot>
						<slot id="a4c7g1" name="Name" unique="false">
							<property href="#Property_Name_sysadmin_3536998876"></property>
						</slot>
						<slot id="a1np7c" name="Description" unique="false">
							<property href="#Property_Model_description_user_3399887679"></property>
						</slot>
						<slot id="a2nyem" name="TestTarget" unique="false">
							<property type="Property_TestTarget_sysadmin_3557145719" typeName="TestTarget">
								<description></description>
								<dataType>
									<graph id="Graph_System_modeling_user_3461239306" type="Graph_System_modeling_user_3461239306" typeName="SystemModel">
										<description>EAST-ADL version M2.1.12
The SystemModel represents the electrical/electronic system in a vehicle and concepts related to the various abstraction levels.</description>
										<superType>
											<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
										</superType>
										<slot id="aogqmx" name="Short name" unique="false">
											<property href="#Property_2ModelName_user_3310896462"></property>
										</slot>
										<slot id="arbtro" name="Name" unique="false">
											<property href="#Property_Name_sysadmin_3536998876"></property>
										</slot>
										<slot id="apgqog" name="Description" unique="false">
											<property href="#Property_2Description_user_3310902697"></property>
										</slot>
										<identReport>_name()</identReport>
										<object id="Object_Vehicle_level_model_user_3461239496" type="Object_Vehicle_level_model_user_3461239496" typeName="Vehicle Level">
											<description>Vehicle Level represents the vehicle content from an external perspective through an arbitrary set of feature models. These contain VehicleFeatures that are organized to reflect the vehicle configuration and that have associated requirements, use cases, etc. for its definition. Submodels can be defined for FeatureModels.</description>
											<slot id="a199c1" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="a0hczj" name="Short name" unique="false">
												<property type="Property_Short_name_sysadmin_3536565917" typeName="Short-name">
													<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="a299dn" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
											<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="250,96 249.372,97.5307 247.585,98.8284 244.909,99.6955 241.753,100 37.9965,100 34.8407,99.6955 32.1653,98.8284 30.3777,97.5307 29.75,96 29.75,23.75 30.3777,22.2193 32.1653,20.9216 34.8407,20.0545 37.9965,19.75 241.753,19.75 244.909,20.0545 247.585,20.9216 249.372,22.2193 250,23.75 250,96" targetPointX="138.672" targetPointY="59" usesGrid="true"></defaultConnectable>
												<svg baseProfile="tiny" height="102" version="1.2" width="252" xmlns="http://www.w3.org/2000/svg">
													<defs>
														<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
															<stop offset="0" stop-color="rgb(255,255,255)"></stop>
															<stop offset="1" stop-color="rgb(249,218,187)"></stop>
														</radialGradient>
													</defs>
													<rect fill="rgb(213,213,213)" height="79" rx="6" ry="4" stroke="rgb(213,213,213)" stroke-width="1" width="219" x="33" y="23">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<rect fill="url(#gradient1)" height="80" rx="6" ry="4" stroke="rgb(0,0,0)" stroke-width="1" width="220" x="30" y="20">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="220" x="30" y="20">
														ReportTextSource:newline newline
if explosions then
	do explosions { 
		id ' &lt;FeatureModel&gt;' newline
	}
else 'no submodel defined!'
endif

														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="30" y="20">
														ReportTextSource:'Vehicle Level ' newline
id
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
												</svg>
											</objectSymbol>
											<icon offset="20,30" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="110" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
													<defs>
														<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
															<stop offset="0" stop-color="rgb(255,255,255)"></stop>
															<stop offset="1" stop-color="rgb(249,218,187)"></stop>
														</radialGradient>
													</defs>
													<rect fill="url(#gradient1)" height="80" rx="18" ry="14" stroke="rgb(0,0,0)" stroke-width="1" width="90" x="20" y="30"></rect>
													<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="56" font-style="normal" font-weight="bold" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="20" y="30">VL</textArea>
												</svg>
											</icon>
										</object>
										<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
										<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
										<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
										<object id="Object_Allocations_sysadmin_3555931511" type="Object_Allocations_sysadmin_3555931511" typeName="Allocations">
											<description>Allocations links to different allocation specifications via submodels.</description>
											<slot id="jv99li" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="ju7wk1" name="Short name" unique="false">
												<property href="#Property_Allocation_name_user_3492975434"></property>
											</slot>
											<slot id="jw99mg" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
											<objectSymbol offset="8.25,29.25" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
												<defaultConnectable isSticky="true" points="228.25,105.25 227.622,106.781 225.835,108.078 223.159,108.946 220.004,109.25 16.2465,109.25 13.0907,108.946 10.4153,108.078 8.62773,106.781 8,105.25 8,33 8.62773,31.4693 10.4153,30.1716 13.0907,29.3045 16.2465,29 220.004,29 223.159,29.3045 225.835,30.1716 227.622,31.4693 228.25,33 228.25,105.25" targetPointX="116.922" targetPointY="68.25" usesGrid="true"></defaultConnectable>
												<svg baseProfile="tiny" height="111.25" version="1.2" width="231.25" xmlns="http://www.w3.org/2000/svg">
													<defs>
														<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
															<stop offset="0" stop-color="rgb(255,255,255)"></stop>
															<stop offset="1" stop-color="rgb(197,225,225)"></stop>
														</radialGradient>
													</defs>
													<rect fill="rgb(213,213,213)" height="79" rx="6" ry="4" stroke="rgb(213,213,213)" stroke-width="1" width="219" x="12.25" y="32.25">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<rect fill="url(#gradient1)" height="80" rx="6" ry="4" stroke="rgb(0,0,0)" stroke-width="1" width="220" x="8.25" y="29.25">
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</rect>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="220" x="8.25" y="29.25">
														ReportTextSource:newline; newline
if explosions then
	do explosions  { 
		id; ': ' type newline
	}
else 'allocations undefined!'
endif
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
													<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="220" x="8.25" y="29.25">
														ReportTextSource:'Design Level ' newline 
id
														<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
													</textArea>
												</svg>
											</objectSymbol>
											<icon offset="19,19" xmlns="http://www.metacase.com/icon">
												<svg baseProfile="tiny" height="99" version="1.2" width="109" xmlns="http://www.w3.org/2000/svg">
													<defs>
														<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.707107" sym:correctGamma="true" sym:fillType="PathFill">
															<stop offset="0" stop-color="rgb(255,255,255)"></stop>
															<stop offset="1" stop-color="rgb(223,255,255)"></stop>
														</radialGradient>
													</defs>
													<rect fill="url(#gradient1)" height="80" rx="18" ry="14" stroke="rgb(0,0,0)" stroke-width="1" width="90" x="19" y="19"></rect>
													<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="40" font-style="normal" font-weight="bold" height="80" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="90" x="19" y="19">Alloc</textArea>
												</svg>
											</icon>
										</object>
										<object href="#Object_Joker_user_3399887441"></object>
										<relationship href="#Relationship_Comment_user_3460793460"></relationship>
										<role href="#Role_Comment_user_3460793566"></role>
										<binding>
											<relationship href="#Relationship_Comment_user_3460793460"></relationship>
											<connection>
												<cardinality start="1" stop="1"></cardinality>
												<role href="#Role_Comment_user_3460793566"></role>
												<object href="#Object_Allocations_sysadmin_3555931511"></object>
												<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
												<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
												<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
												<object href="#Object_Vehicle_level_model_user_3461239496"></object>
											</connection>
											<connection>
												<cardinality start="1" stop="1"></cardinality>
												<role href="#Role_Comment_user_3460793566"></role>
												<object href="#Object_Joker_user_3399887441"></object>
											</connection>
										</binding>
										<binding>
											<relationship href="#Relationship_Comment_user_3460793460"></relationship>
											<connection>
												<cardinality start="1" stop="1"></cardinality>
												<role href="#Role_Comment_user_3460793566"></role>
												<object href="#Object_Joker_user_3399887441"></object>
											</connection>
											<connection>
												<cardinality start="1" stop="1"></cardinality>
												<role href="#Role_Comment_user_3460793566"></role>
												<object href="#Object_Allocations_sysadmin_3555931511"></object>
												<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
												<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
												<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
												<object href="#Object_Vehicle_level_model_user_3461239496"></object>
											</connection>
										</binding>
										<explosion>
											<object href="#Object_Allocations_sysadmin_3555931511"></object>
											<graph href="#Graph_Allocation_Matrix_user_3492975668"></graph>
										</explosion>
										<explosion>
											<object href="#Object_Vehicle_level_model_user_3461239496"></object>
											<graph href="#Graph_FeatureModel_user_3399887714"></graph>
										</explosion>
										<decomposition>
											<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
											<graph href="#Graph_FunctionalAnalysisArchitecture_user_3483271256"></graph>
										</decomposition>
										<decomposition>
											<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
											<graph href="#Graph_FunctionalAnalysisArchitecture_user_3399893275"></graph>
										</decomposition>
										<decomposition>
											<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
											<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
										</decomposition>
										<report>_checkingsForPrototypes()
foreach .(AnalysisFunctionPrototype | DesignFunctionPrototype | HardwareComponentPrototype)
{	do decompositions 
	{	if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			
			/* All prototypes handled in the same report */
			_checkingsForFunctionAndHardwarePrototypes()
			
			/* Relationships */
			subreport '_checkings for the relationships' run
		endif
	}
}

</report>
										<report>_elements()
$modeloid = oid
variable oid '_data-types_content' read 

local 'designlevel_element_found' write 'F' close
local 'allocations' write 'F' close

/* Report the systemmodel level elements */
foreach .(AnalysisFunctionPrototype | DesignFunctionPrototype | HardwareComponentPrototype | Allocations | Vehicle Level) { 
	$systemmodel_element_found = 'T' 
	if (type = 'DesignFunctionPrototype') or (type = 'HardwareComponentPrototype') or (type = 'Allocations') then
		@designlevel_element_found = 'T' 
		if type = 'Allocations' then
			@allocations = 'T' 
		endif
	endif
}
if $systemmodel_element_found = 'T' then
	newline
	local 'nameValue' write :Name;%xml close
	'&lt;!-- SYSTEM-MODEL name: ' 
	if @nameValue &lt;&gt; '' then
		@nameValue ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!--  path: ' variable oid;1 '_path' read ' --&gt;' newline
	'&lt;SYSTEM-MODEL UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if @nameValue &lt;&gt; '' then
		'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
	endif
	subreport '_description' run
endif

foreach .Vehicle Level {
	'&lt;!-- VEHICLE-LEVEL name: VehicleLevel --&gt;' newline
	'&lt;VEHICLE-LEVEL UUID ="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name;'&lt;/SHORT-NAME&gt;' newline
	if :Name &lt;&gt; '' then
		'&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;'
	endif
	'&lt;TECHNICAL-FEATURE-MODELS&gt;'
	do explosions 
	{	_featureModelInSystemModel()
		/* VFM information is generated fully from the Package structure */
		/* subreport '_VehicleFeatureModel with package structure' run */
		
	}
	newline
	'&lt;/TECHNICAL-FEATURE-MODELS&gt;' newline
	'&lt;/VEHICLE-LEVEL&gt;' newline
}

foreach .AnalysisFunctionPrototype {
	'&lt;!-- ANALYSIS-LEVEL name: AnalysisLevel --&gt;' newline
	'&lt;ANALYSIS-LEVEL UUID ="AL' oid;1 '"&gt;' newline
	'&lt;SHORT-NAME&gt;AnalysisLevel&lt;/SHORT-NAME&gt;'
	if :Name &lt;&gt; '' then
		'&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;'
	endif
	do decompositions { subreport '_AnalysisLevel with package structure' run }
	'&lt;/ANALYSIS-LEVEL&gt;' newline
}

if @designlevel_element_found = 'T' then
	'&lt;!-- DESIGN-LEVEL name: DesignLevel --&gt;' newline
	'&lt;DESIGN-LEVEL UUID ="DL' oid '"&gt;' newline
	'&lt;SHORT-NAME&gt;DesignLevel&lt;/SHORT-NAME&gt;'
	if @allocations = 'T' then
		newline
		'&lt;!-- Allocations section is under development, currently only the allocations between the prototypes are reported --&gt;' newline
		'&lt;ALLOCATIONS&gt;'
		foreach .Allocations {
			do explosions { subreport '_DesignLevel with package structure' run }
		}
		'&lt;/ALLOCATIONS&gt;'
	endif
	
	foreach .(DesignFunctionPrototype | HardwareComponentPrototype) {
		if type = 'DesignFunctionPrototype' then
			do decompositions { subreport '_DesignLevel with package structure' run	}
		endif
		if type = 'HardwareComponentPrototype' then
			do decompositions { subreport '_DesignLevel with package structure' run	}
		endif
	}
	newline
	'&lt;/DESIGN-LEVEL&gt;' newline
endif

if $systemmodel_element_found = 'T' then 
	'&lt;/SYSTEM-MODEL&gt;' 
endif
if not $reported_models =~ oid%wildsp then
	variable 'reported_models' append oid ' ' close
endif
</report>
										<report>Report '__LiveCheck'
_translators()
_checkingShortNameUniqueness()
'VehicleLevel: - ' 
foreach .Vehicle Level {
	@sep = ''
	dowhile explosions { 
		@sep; id ' &lt;FeatureModel&gt;'  @sep = ', '
	}  
}
newline
'AnalysisLevel: - ' 
foreach .AnalysisFunctionPrototype; {
	id; ' &lt;AnalysisFunction&gt;'
}
newline
@sep = ''
'DesignLevel: - ' 
foreach .DesignFunctionPrototype { 
	id ' &lt;DesignFunction&gt;' 
	@sep = ', '
}
foreach .HardwareComponentPrototype { 
	@sep id ' &lt;HardwareComponent&gt;' 
	@sep = ', '
}
foreach .Allocations {
	dowhile explosions { 
		@sep	id  ' &lt;Allocation&gt;'  @sep = ', '
	}  
}
endreport</report>
										<constraints>
											<occurrence>
												<object href="#Object_Allocations_sysadmin_3555931511"></object>
												<max>1</max>
											</occurrence>
											<occurrence>
												<object href="#Object_AnalysisFunctionPrototype_user_3483271371"></object>
												<max>1</max>
											</occurrence>
											<occurrence>
												<object href="#Object_ADLFunctionPrototype_user_3401001387"></object>
												<max>1</max>
											</occurrence>
											<occurrence>
												<object href="#Object_HardwareComponentPrototype_sysadmin_3537086313"></object>
												<max>1</max>
											</occurrence>
											<occurrence>
												<object href="#Object_Vehicle_level_model_user_3461239496"></object>
												<max>1</max>
											</occurrence>
										</constraints>
										<icon offset="15,50" xmlns="http://www.metacase.com/icon">
											<svg baseProfile="tiny" height="95" version="1.2" width="85" xmlns="http://www.w3.org/2000/svg">
												<rect fill="rgb(0,255,0)" height="45" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="70" x="15" y="50"></rect>
											</svg>
										</icon>
									</graph>
								</dataType>
							</property>
						</slot>
						<identReport>_name()</identReport>
						<object id="Object_VVCase_sysadmin_3557077880" type="Object_VVCase_sysadmin_3557077880" typeName="VVCase">
							<description>VVCase is a grouping element for a set of VVProcedures that together makes up a concrete Verification/Validation effort.</description>
							<slot id="a5c7k3" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="a3npef" name="Short name" unique="false">
								<property type="Property_VVCaseName_sysadmin_3557139883" typeName="VVCaseName">
									<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="a6c7kc" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<slot id="a2l678" name="AbstractVVCase" unique="false">
								<property type="Property_AbstractVVCase_sysadmin_3557080785" typeName="AbstractVVCase">
									<description></description>
									<dataType>
										<object href="#Object_VVCase_sysadmin_3557077880"></object>
									</dataType>
								</property>
							</slot>
							<slot id="a1l53c" name="Procedure" unique="false">
								<property type="Property_Procedure_sysadmin_3557080068" typeName="Procedure">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object id="Object_VVProcedure_sysadmin_3557079975" type="Object_VVProcedure_sysadmin_3557079975" typeName="VVProcedure">
											<description>VVProcedure represents an individual task in a Verifcation/Validation effort.</description>
											<slot id="a4c7nq" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="a3npmk" name="Short name" unique="false">
												<property type="Property_VVProcedureName_sysadmin_3557140030" typeName="VVProcedureName">
													<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="a5c7p1" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<slot id="a0l50b" name="AbstractVVProcedure" unique="false">
												<property type="Property_AbstractVVProcedure_sysadmin_3557080013" typeName="AbstractVVProcedure">
													<description></description>
													<dataType>
														<object href="#Object_VVProcedure_sysadmin_3557079975"></object>
													</dataType>
												</property>
											</slot>
											<slot id="a1l5sq" name="Stimuli" unique="false">
												<property type="Property_Stimuli_sysadmin_3557080525" typeName="Stimuli">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object type="Object_VVStimuli_sysadmin_3557080299" typeName="VVStimuli">
															<description>VVStimuli represents the concrete input values used for a VVProcedure during a Verification/Validation effort of a VVTarget.</description>
															<slot id="a1c7so" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="a0npni" name="Short name" unique="false">
																<property type="Property_VVStimuliName_sysadmin_3557140047" typeName="VVStimuliName">
																	<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a2c7t0" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="a2l5vt" name="VVIntendedOutcome" unique="false">
												<property type="Property_VVIntendedOutcome_sysadmin_3557080580" typeName="VVIntendedOutcome">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object id="Object_VVIntendedOutcome_sysadmin_3557080279" type="Object_VVIntendedOutcome_sysadmin_3557080279" typeName="VVIntendedOutcome">
															<description>VVIntendedOutcome represents the expected output of a Verification/Validation effort.</description>
															<slot id="a1c7uc" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="a0npir" name="Short name" unique="false">
																<property type="Property_VVIntendedOutcomeName_sysadmin_3557139961" typeName="VVIntendedOutcomeName">
																	<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a2c7wh" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
										</object>
									</contentsDataType>
								</property>
							</slot>
							<slot id="a0l4qx" name="Log" unique="false">
								<property type="Property_Log_sysadmin_3557079844" typeName="Log">
									<description></description>
									<dataType>
										<simpleType>Collection</simpleType>
									</dataType>
									<contentsDataType>
										<object type="Object_VVLog_sysadmin_3557079783" typeName="VVLog">
											<description>VVLog captures an execution of a ConcreteVVCase.</description>
											<slot id="jzc7y9" name="__UUID" unique="false">
												<property href="#Property___UUID_sysadmin_3604668056"></property>
											</slot>
											<slot id="jynpga" name="Short name" unique="false">
												<property type="Property_VVLogName_sysadmin_3557139917" typeName="VVLogName">
													<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue>
														<string></string>
													</defaultValue>
													<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="k0c7zr" name="Name" unique="false">
												<property href="#Property_Name_sysadmin_3536998876"></property>
											</slot>
											<slot id="jwl4sg" name="Date" unique="false">
												<property type="Property_Date_sysadmin_3557079872" typeName="Date">
													<description></description>
													<dataType>
														<simpleType>String</simpleType>
													</dataType>
													<defaultValue></defaultValue>
													<widget>Input Field</widget>
												</property>
											</slot>
											<slot id="jvl4mz" name="ActualOutcomes" unique="false">
												<property type="Property_ActualOutcomes_sysadmin_3557079773" typeName="ActualOutcomes">
													<description></description>
													<dataType>
														<simpleType>Collection</simpleType>
													</dataType>
													<contentsDataType>
														<object type="Object_VVActualOutcome_sysadmin_3557079668" typeName="VVActualOutcome">
															<description>VVActualOutcome represents the actual output of a verification effort as defined by the V and V elements.</description>
															<slot id="a2c80x" name="__UUID" unique="false">
																<property href="#Property___UUID_sysadmin_3604668056"></property>
															</slot>
															<slot id="a1npjy" name="Short name" unique="false">
																<property type="Property_VVActualOutcome_sysadmin_3557139983" typeName="VVActualOutcomeName">
																	<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
																	<dataType>
																		<simpleType>String</simpleType>
																	</dataType>
																	<defaultValue>
																		<string></string>
																	</defaultValue>
																	<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
																	<widget>Input Field</widget>
																</property>
															</slot>
															<slot id="a3c82a" name="Name" unique="false">
																<property href="#Property_Name_sysadmin_3536998876"></property>
															</slot>
															<slot id="a0l62p" name="IntendedOutcome" unique="false">
																<property type="Property_IntendedOutcome_sysadmin_3557080704" typeName="IntendedOutcome">
																	<description></description>
																	<dataType>
																		<object href="#Object_VVIntendedOutcome_sysadmin_3557080279"></object>
																	</dataType>
																</property>
															</slot>
															<identReport>if :Name; then :Name; else :Short name; endif</identReport>
														</object>
													</contentsDataType>
												</property>
											</slot>
											<slot id="jxl5zi" name="PerformedProcedure" unique="false">
												<property type="Property_PerformedProcedure_sysadmin_3557080647" typeName="PerformedProcedure">
													<description></description>
													<dataType>
														<object href="#Object_VVProcedure_sysadmin_3557079975"></object>
													</dataType>
												</property>
											</slot>
											<identReport>if :Name; then :Name; else :Short name; endif</identReport>
										</object>
									</contentsDataType>
								</property>
							</slot>
							<slot id="a4npf2" name="Description" unique="false">
								<property href="#Property_2Description_user_3310902697"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="30,10" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="135,126 134.772,127.531 134.121,128.828 133.148,129.696 132,130 32.75,130 31.6019,129.696 30.6287,128.828 29.9784,127.531 29.75,126 29.75,13.75 29.9784,12.2193 30.6287,10.9216 31.6019,10.0545 32.75,9.75 132,9.75 133.148,10.0545 134.121,10.9216 134.772,12.2193 135,13.75 135,126" targetPointX="82.375" targetPointY="69.875" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="130" version="1.2" width="135" xmlns="http://www.w3.org/2000/svg">
									<defs>
										<linearGradient gradientUnits="objectBoundingBox" id="gradient1" sym:correctGamma="true" x1="0.0142857" x2="0.990476" y1="0.483333" y2="0.483334">
											<stop offset="0" stop-color="rgb(255,255,242)"></stop>
											<stop offset="0.476903" stop-color="rgb(255,255,238)"></stop>
											<stop offset="1" stop-color="rgb(255,245,235)"></stop>
										</linearGradient>
									</defs>
									<rect fill="url(#gradient1)" height="120" rx="3" ry="4" stroke="rgb(128,0,0)" stroke-width="1" width="105" x="30" y="10">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="105" x="30" y="10">
										ReportTextSource:'VVCase'
newline;
id
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
									<template aligmentPointX="0" aligmentPointY="1" isMovable="false" revealConnectables="false" rotation="false" scaleFilter="1,0" subsymbolExtentX="105" subsymbolExtentY="15" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="30,10" startDistance="0">
											<layoutPath allocation="start" lastSelectedSegment="1" layoutDistance="15" lineSegmentTable="true" points="0,0 0,105" startDistance="30"></layoutPath>
										</pathLayout>
										<generatorNPSource>do :Procedure { type newline }
do :Log { type newline }</generatorNPSource>
										<librarySubsymbolSource>ReportTextSource:type '_symbol'</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
									<template aligmentPointX="0" aligmentPointY="1" isMovable="false" revealConnectables="true" rotation="false" scaleFilter="1,0" subsymbolExtentX="105" subsymbolExtentY="15" useTargetpoint="false" width="1" xmlns="http://www.metacase.com/symbol">
										<pathLayout allocation="start" layoutDistance="40" lineSegmentTable="" points="30,10" startDistance="0">
											<layoutPath allocation="start" lastSelectedSegment="1" layoutDistance="15" lineSegmentTable="true" points="0,0 0,105" startDistance="30"></layoutPath>
										</pathLayout>
										<generatorNPSource>do :Procedure { type newline }</generatorNPSource>
										<librarySubsymbolSource>VVProcedure_fullSymbol</librarySubsymbolSource>
										<metaInfo></metaInfo>
									</template>
								</svg>
							</objectSymbol>
						</object>
						<object id="Object_VVTarget_sysadmin_3557077994" type="Object_VVTarget_sysadmin_3557077994" typeName="VVTarget">
							<description>VVTarget represents a concrete testing environment in which a particular Verifcation/Validation activity is performed.</description>
							<slot id="a1c883" name="__UUID" unique="false">
								<property href="#Property___UUID_sysadmin_3604668056"></property>
							</slot>
							<slot id="a0nprf" name="Short name" unique="false">
								<property type="Property_VVTargetName_sysadmin_3557140117" typeName="VVTargetName">
									<description>Short name is mandatory and must start with an alphabetical character. It may contain characters, numbers or underscores.</description>
									<dataType>
										<simpleType>String</simpleType>
									</dataType>
									<defaultValue>
										<string></string>
									</defaultValue>
									<regex>[a-zA-Z]([a-zA-Z0-9]|_[a-zA-Z0-9])*_?</regex>
									<widget>Input Field</widget>
								</property>
							</slot>
							<slot id="a2c88l" name="Name" unique="false">
								<property href="#Property_Name_sysadmin_3536998876"></property>
							</slot>
							<identReport>if :Name; then :Name; else :Short name; endif</identReport>
							<objectSymbol offset="42,21" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="152,55 151.543,57.2961 150.243,59.2426 148.296,60.5433 146,61 47.75,61 45.4539,60.5433 43.5074,59.2426 42.2067,57.2961 41.75,55 41.75,26.75 42.2067,24.4539 43.5074,22.5074 45.4539,21.2067 47.75,20.75 146,20.75 148.296,21.2067 150.243,22.5074 151.543,24.4539 152,26.75 152,55" targetPointX="96.875" targetPointY="40.875" usesGrid="true"></defaultConnectable>
								<svg baseProfile="tiny" height="63" version="1.2" width="154" xmlns="http://www.w3.org/2000/svg">
									<rect fill="rgb(0,0,128)" height="40" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="110" x="44" y="23">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<rect fill="rgb(255,239,224)" height="40" rx="6" ry="6" stroke="rgb(0,0,0)" stroke-width="1" width="110" x="42" y="21">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</rect>
									<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="40" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="110" x="42" y="21">
										ReportTextSource:'VVTarget' newline
id 
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</objectSymbol>
						</object>
						<object href="#Object_ADLRequirement_user_3400763726"></object>
						<object href="#Object_QualityRequirement_user_3400822352"></object>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
						<object href="#Object_Joker_user_3399887441"></object>
						<relationship id="Relationship_Verify_sysadmin_3557077337" type="Relationship_Verify_sysadmin_3557077337" typeName="Verify">
							<description>Verify signifies a refined requirement/verified by relationship between a Requirement and a VVCase, where the modification of the supplier Requirement may impact the verifying client VVCase and optional abstract VVProcedure. Verify implies that the semantics of the verifying client VVCase is not complete, without the supplier Requirement. </description>
							<relationshipSymbol offset="80,35" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" targetPointX="120" targetPointY="50" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="50" version="1.2" width="160" xmlns="http://www.w3.org/2000/svg">
									<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="15" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="80" x="80" y="35">
										ReportTextSource:_Cycle() 'Verify'
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</textArea>
								</svg>
							</relationshipSymbol>
							<icon offset="35,22" xmlns="http://www.metacase.com/icon">
								<svg baseProfile="tiny" height="59" version="1.2" width="72" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(0,0,0)" points="72,22 52,28.3333 65.333,41" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="55" x2="48.333" y1="39" y2="45.6667"></line>
									<line stroke="rgb(0,0,0)" stroke-width="1" x1="41.6667" x2="35" y1="52.3333" y2="59"></line>
								</svg>
							</icon>
						</relationship>
						<relationship id="Relationship_Target_sysadmin_3557386267" type="Relationship_Target_sysadmin_3557386267" typeName="Target">
							<description>Points to VVTargets for this VVCase.</description>
							<relationshipSymbol offset="50,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
								<defaultConnectable isSticky="true" points="70.5,40 69.791,36.207 67.7596,32.9262 64.6802,30.6008 60.9688,29.5448 57.1265,29.9008 53.6723,31.6208 51.0727,34.4725 49.6788,38.0706 49.6788,41.9294 51.0727,45.5275 53.6723,48.3792 57.1265,50.0992 60.9688,50.4552 64.6802,49.3992 67.7596,47.0738 69.791,43.793 70.5,40" targetPointX="60.0894" targetPointY="40" usesGrid="false"></defaultConnectable>
								<svg baseProfile="tiny" height="50" version="1.2" width="70" xmlns="http://www.w3.org/2000/svg">
									<ellipse cx="60" cy="40" fill="rgb(255,0,0)" rx="10" ry="10" stroke="none" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<ellipse cx="60" cy="40" fill="rgb(255,255,255)" rx="6.66667" ry="6.66667" stroke="none" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
									<ellipse cx="60" cy="40" fill="rgb(255,0,0)" rx="3.33333" ry="3.33333" stroke="none" stroke-width="1" sym:startAngle="3.6e2" sym:sweepAngle="-3.6e2">
										<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
									</ellipse>
								</svg>
							</relationshipSymbol>
						</relationship>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<role id="Role_Verify_sysadmin_3557077526" type="Role_Verify_sysadmin_3557077526" typeName="Verify">
							<description></description>
							<roleSymbol xmlns="http://www.metacase.com/symbol">
								<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
									<metaInfo shouldRotate="false"></metaInfo>
								</rolelineGOs>
								<svg baseProfile="tiny" height="85" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
									<polygon fill="rgb(0,0,0)" points="150,80 130,85 130,75" stroke="rgb(0,0,0)" stroke-width="1">
										<metaInfo shouldRotate="true" xmlns="http://www.metacase.com/symbol"></metaInfo>
									</polygon>
								</svg>
							</roleSymbol>
						</role>
						<role id="Role_VerifiedBy_sysadmin_3557077542" type="Role_VerifiedBy_sysadmin_3557077542" typeName="VerifiedBy">
							<description></description>
						</role>
						<role href="#Role_Comment_user_3460793566"></role>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_QualityRequirement_user_3400822352"></object>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
								<object href="#Object_VVTarget_sysadmin_3557077994"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Comment_user_3460793460"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_QualityRequirement_user_3400822352"></object>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
								<object href="#Object_VVTarget_sysadmin_3557077994"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Comment_user_3460793566"></role>
								<object href="#Object_Joker_user_3399887441"></object>
								<object href="#Object_GenericConstraint_sysadmin_3564392202"></object>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Target_sysadmin_3557386267"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_VerifiedBy_sysadmin_3557077542"></role>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Verify_sysadmin_3557077526"></role>
								<object href="#Object_VVTarget_sysadmin_3557077994"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Verify_sysadmin_3557077337"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_VerifiedBy_sysadmin_3557077542"></role>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Verify_sysadmin_3557077526"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
							</connection>
						</binding>
						<binding>
							<relationship href="#Relationship_Verify_sysadmin_3557077337"></relationship>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_VerifiedBy_sysadmin_3557077542"></role>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
								<port href="#Object_VVProcedure_sysadmin_3557079975"></port>
							</connection>
							<connection>
								<cardinality start="1" stop="1"></cardinality>
								<role href="#Role_Verify_sysadmin_3557077526"></role>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
							</connection>
						</binding>
						<report>_elements()
'&lt;ELEMENTS&gt;'
if type = 'VerificationValidation' AND (not $reported_models =~ oid%wildsp) then
	variable 'reported_models' append oid ' ' close
	newline
	'&lt;!-- VERIFICATION-VALIDATION name: ' 
	if :Name &lt;&gt; '' then
		:Name ' (' :Short name; ')'
	else
		:Short name;
	endif
	' --&gt;' newline
	'&lt;!-- path: ' variable oid '_path' read ' --&gt;' newline
	'&lt;VERIFICATION-VALIDATION UUID="' :__UUID '"&gt;' newline
	'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
	if :Name; then '&lt;NAME&gt;' :Name%xml '&lt;/NAME&gt;' newline endif
	'&lt;/VERIFICATION-VALIDATION&gt;' newline
endif
'&lt;/ELEMENTS&gt;' newline</report>
						<constraints>
							<connectivity>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<relationship href="#Relationship_Comment_user_3460793460"></relationship>
								<max>1</max>
							</connectivity>
							<uniqueness>
								<object href="#Object_QualityRequirement_user_3400822352"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_ADLRequirement_user_3400763726"></object>
								<propertyName>Name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VVCase_sysadmin_3557077880"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
							<uniqueness>
								<object href="#Object_VVTarget_sysadmin_3557077994"></object>
								<propertyName>Short name</propertyName>
							</uniqueness>
						</constraints>
						<icon offset="126,88" xmlns="http://www.metacase.com/icon">
							<svg baseProfile="tiny" height="107" version="1.2" width="145" xmlns="http://www.w3.org/2000/svg">
								<defs>
									<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
										<stop offset="0" stop-color="rgb(255,255,255)"></stop>
										<stop offset="0.649419" stop-color="rgb(0,0,255)"></stop>
										<stop offset="1" stop-color="rgb(0,0,128)"></stop>
									</radialGradient>
									<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient2" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
										<stop offset="0" stop-color="rgb(255,255,255)"></stop>
										<stop offset="0.649419" stop-color="rgb(0,0,255)"></stop>
										<stop offset="1" stop-color="rgb(0,0,128)"></stop>
									</radialGradient>
								</defs>
								<polygon fill="url(#gradient1)" points="127.5,88 126.5,88 126,88.8572 130.35,107 131.3,107 137,93.4286 137,90.7143 136.05,88 135.1,88 131.11,100.486 129.4,93.4286" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
								<polygon fill="url(#gradient2)" points="135.5,88 134.5,88 134,88.8572 138.35,107 139.3,107 145,93.4286 145,90.7143 144.05,88 143.1,88 139.11,100.486 137.4,93.4286" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
							</svg>
						</icon>
					</graph>
				</decomposition>
				<decomposition>
					<object href="#Object_SystemModel_sysadmin_3562917045"></object>
					<graph href="#Graph_System_modeling_user_3461239306"></graph>
				</decomposition>
				<report>
					!Check()
/* Checking report */
$warnings = '0'
$reported_objects = ' '
subreport '_translators' run
subreport '_EAST-ADL specific translators' run 
variable 'reported_models' append ' ' oid ' ' close
variable 'visited' write ' ' oid ' ' close
$LiveCheck = 'F'
$extendedCheck = 'T'

_OneOwner()

_LegalTypePath()

_checkingShortNameUniqueness()

_checkingsForDatatypes()

_checkingsForPackageStructure()

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif
					<icon offset="79,68" xmlns="http://www.metacase.com/icon">
						<svg baseProfile="tiny" height="116" version="1.2" width="127" xmlns="http://www.w3.org/2000/svg">
							<defs>
								<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
									<stop offset="0" stop-color="rgb(255,255,255)"></stop>
									<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
									<stop offset="1" stop-color="rgb(0,192,0)"></stop>
								</radialGradient>
							</defs>
							<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="79" y="76"></rect>
							<polygon fill="url(#gradient1)" points="88.3,80.5714 84,86.8571 84,93.1429 96.9,112 101.2,112 127,80.5714 127,74.2857 122.7,68 118.4,68 100.34,96.9143 92.6,80.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
						</svg>
					</icon>
				</report>
				<report>TypeUsage()
_translators()
@reported = ' '
do graphs where type = 'AnalysisFunctionType' or type = 'DesignFunctionType' or type = 'HardwareComponentType' 
{	id ' based prototypes: '
	@sep = ''
	do graphs 
	{	foreach .(*Prototype) 
		{	do decompositions 
			{	if oid = oid;3 then
					if not $reported =~ oid;1%wildsp then
						variable 'reported' append oid;1 ' ' close
						@sep id;1 
						if :Type;1 then ' &lt;' :Type;1 '&gt;' endif
						@sep = ', '
					endif
				endif
			}
		}
	}
	newline		
}
</report>
				<report>_checkingsForDatatypes()
/* Objects will be reported only in case they have not been reported earlier (if they are they are included in the reported_objects variable */
foreach .() 
{	if not $reported_objects =~ oid%wildsp; then
		variable 'reported_objects' append oid ' ' close 

		/* Checking for the data-types */
		_validateDataTypes()
		/* extended check is T when Check button is pressed from the toolbar */
		if $extendedCheck = 'T' And type = 'Package'; then
			do decompositions { _checkingsForDatatypes()	}
		endif
	endif
}
</report>
				<report>_checkingsForEATypes()
/* Checking that the Package or EAType is only in one package */
if not $packagesToBeChecked =~ oid%wildsp; then
	variable 'packagesToBeChecked' append oid ' ' close
	foreach .(Package | EAType) 
	{	if type = 'Package' then
			do decompositions { _checkingsForEATypes() }
		endif
		if type = 'EAType' then 
			if not $EAtypes =~ oid%wildsp then
				variable 'EAtypes' append oid ' ' close
			else
				_reportWarnings()
				'Warning: Type ' id ' exists in several packages. Open Info... for it' newline
			endif
		endif
	}
endif</report>
				<report>_checkingsForPackageStructure()
/* Goes through the Package hiearchy */
foreach .(Package | SystemModel | EAType)
{	if type = 'EAType' And not decompositions then
		_reportWarnings()
		'Warning: ' type; ' in model ' id;1 ' &lt;' type; 1 '&gt; does not have a subgraph containing the type definition.'
		if $extendedCheck &lt;&gt; 'T' then
			' You may add it by Ctrl + double click the ' type
		endif
		newline
	endif

	if type = 'Package' And not decompositions then
		_reportWarnings()
		'Warning: ' type ' in model ' id;1 ' &lt;' type; 1 '&gt; does not have a subgraph containing the package structure.'
		if $extendedCheck &lt;&gt; 'T' then
			' You may add it by Ctrl + double click the ' type
		endif
		newline
	endif
	
	do decompositions 
	{ 	if not $visited =~ oid%wildsp then
			variable 'visited' append oid ' ' close
			if type = 'Package'; then 
				_checkingsForPackageStructure() 
			else
				if type = 'AnalysisFunctionType' or type = 'DesignFunctionType' or type = 'HardwareComponentType' then
					_validateFunctionsAndHardwareComponents()
					_checkings()
				else
					if type = 'SystemModel'; then 
						_checkingsForPrototypes()
					else
						if type = 'TimingModel' or type = 'Dependability' or type = 'BehaviorGraph' or type = 'EnvironmentModel' or type = 'SafetyCase' or type = 'Variability' then
							_checkings()
						endif
					endif
				endif
			endif
		endif
	}
}
</report>
				<report>_create\ type\ content\ for\ levels()
foreach .(Package | SystemModel)
{	if type = 'SystemModel' then
		variable oid;1 '_UsedTypesGenerated' write 'T' close
	endif
	do decompositions 
	{ subreport '_create type content for levels' run }
}</report>
				<report>_EATypes()
foreach .EAType 
{	do decompositions 
	{	if type = 'AnalysisFunctionType' then
			if $packaged_types =~ oid%wildsp then 
				subreport '_AnalysisFunctionType' run
			endif
		endif
		if type = 'DesignFunctionType' then
			if $packaged_types =~ oid%wildsp then 
				subreport '_DesignFunctionType' run
			endif
		endif
		if type = 'HardwareComponentType' then
			if $packaged_types =~ oid%wildsp then 
				subreport '_HardwareComponentType' run 
			endif
		endif
		if type = 'BehaviorConstraintType' then
			if $packaged_types =~ oid%wildsp then 
				subreport '_BehaviorConstraintType' run 
			endif
		endif
	}
}</report>
				<report>_elements()
$modeloid = oid
'&lt;ELEMENTS&gt;'
local 'temp' write variable oid '_data-types_content' read close

if @temp; then newline
	variable oid '_data-types_content' read
endif

_EATypes();
_genericConstraints();

foreach .SystemModel 
{	variable 'systemmodel_element_found' write 'T' close
	do decompositions { _elements(); newline }
}
'&lt;/ELEMENTS&gt;' newline

if not $reported_models =~ oid%wildsp then
	variable 'reported_models' append oid ' ' close
endif</report>
				<report>_subpackages()
/* Generation of subpackages */
@package_found = 'F'
foreach .(Package) 
{	@package_found = 'T' }
		
if @package_found = 'T'; then
	'&lt;SUB-PACKAGES&gt;'
	foreach .Package 
	{	do decompositions 
		{	local 'nameValue' write :Name;%xml close 
			newline
			'&lt;!-- EA-PACKAGE name: ' 
			if @nameValue; then
				@nameValue ' (' :Short name; ')'
			else
				:Short name;
			endif
			' --&gt;' newline

			'&lt;EA-PACKAGE UUID="' :__UUID '"&gt;' newline 
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
			if @nameValue; then
				'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
			endif
			_description()
			_subpackages();
			_elements();
			'&lt;/EA-PACKAGE&gt;'
		}
	}
	_usedTypesGenerated()
	newline
	'&lt;/SUB-PACKAGES&gt;' newline
endif</report>
				<report>Report '_usedTypesGenerated'
local 'usedTypesNeeded' write variable oid '_UsedTypesGenerated' read close
if @usedTypesNeeded = 'T' then
	foreach .SystemModel 
	{	do decompositions 
		{	foreach .(*Prototype) 
			{	/* Generating the path information for the SystemModels prototypes */
				@revStack = @sep = ''
				do stack 
				{	if (type = 'Package') and (metatype = 'Graph') then 
						@revStack = __(id @sep @revStack)
		            @sep = '/'
					endif
					if type =~ '*Prototype' then 
						local 'myName' write :Short name; close
						@revStack = __(@myName @sep @revStack)
		            @sep = '/'
					endif
				}
				local 'packageName' write :Short name; close
				'&lt;!-- EA-PACKAGE name: ' @packageName ' --&gt;' newline
				'&lt;!-- Path: /' @revStack ' --&gt;' newline
				'&lt;EA-PACKAGE UUID="' :__UUID '"&gt;' newline 
				'&lt;SHORT-NAME&gt;' @packageName '&lt;/SHORT-NAME&gt;' newline
				'&lt;ELEMENTS&gt;' 
				/* Here we report all the objects listed in typesAccessedFromLevels */
				subreport '_create type content for levels' run
				/* Data-types defined in this model */
				variable oid '_data-types_content' read 
				newline
				'&lt;/ELEMENTS&gt;' newline
				'&lt;/EA-PACKAGE&gt;' newline
			}
		}
	}
endif	
endreport</report>
				<report>__LiveCheck()
$warnings = '0'
$reported_models = ' '
$reported_objects = ' '

$LiveCheck = 'T'

subreport '_translators' run 
variable 'reported_models' append oid ' ' close

_checkingShortNameUniqueness()

_checkingsForDatatypes()

if $warnings = '0' then
	'No warnings' newline
endif</report>
				<constraints>
					<connectivity>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<relationship href="#Relationship_Comment_user_3460793460"></relationship>
						<max>1</max>
					</connectivity>
					<uniqueness>
						<object href="#Object_ArrayDatatype_sysadmin_3536999064"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_CompositeDatatype_sysadmin_3536998574"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_EABoolean_sysadmin_3536996172"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_EANumerical_sysadmin_3536996437"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_EAString_sysadmin_3536996221"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_Enumeration_sysadmin_3536996326"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_RangeableValueType_sysadmin_3536997383"></object>
						<propertyName>Name</propertyName>
					</uniqueness>
					<uniqueness>
						<object href="#Object_UserAttributedElement_sysadmin_3564907839"></object>
						<propertyName>Short name</propertyName>
					</uniqueness>
				</constraints>
			</graph>
		</decomposition>
		<report>
			!Check()
/* Checking report */
$warnings = '0'
$reported_objects = ' '
subreport '_translators' run
subreport '_EAST-ADL specific translators' run  
variable 'reported_models' append ' ' oid ' ' close
variable 'visited' write ' ' oid ' ' close
$LiveCheck = 'F'
$extendedCheck = 'T'
$functionPrototypesDefinedInThisHierarchy = ' '
$functionTypesDefinedInThisHierarchy = ' '
$eventChains = ' '
$modes = ' '
$events = ' '
$datatypes = ' '
$flowports = $cs_ports = ' '
$featureflaws = $faultfailures = ' '
$features = ' '
$requirementsInThisPackageHiearchy = ' '

_OneOwner()

/* Checks that type-prototype path with package hierarchy is not cyclic */
_LegalTypePath()

/* Creates a variable listing all the packaged requirements */
_collectAllPackagedRequirements()

foreach .Package {
	if not decompositions then
		_reportWarnings()
		'Warning: ' type ' in model ' id;1 ' does not have a subgraph containing the package structure. You may add it by Ctrl + double click the ' type newline
	endif

	do decompositions 
	{	_checkingShortNameUniqueness()

		_checkingsForDatatypes()
		
		_checkingsForPackageStructure()
	}
}

/* Goes through all the graphs in this hierarchy and sets the variables for the checkings */
do graphs 
{	if $visited =~ oid%wildsp; then
		
		/* FunctionPrototypes */
		foreach .(*FunctionPrototype) 
		{	if not $functionPrototypesDefinedInThisHierarchy =~ oid%wildsp then
				variable 'functionPrototypesDefinedInThisHierarchy' append oid ' ' close
			endif
		}

		/* FunctionTypes */
		if type =~ '*FunctionType' and not $functionTypesDefinedInThisHierarchy =~ oid%wildsp then
			variable 'functionTypesDefinedInThisHierarchy' append oid ' ' close
		endif

		/* EventChains */
		foreach .(EventChain) 
		{	if not $eventChains =~ oid%wildsp then
				variable 'eventChains' append oid ' ' close
			endif
		}

		/* Modes */
		foreach .(ModeGroup) 
		{	do :Mode 
			{	if not $eventChains =~ oid%wildsp then
					variable 'modes' append oid ' ' close
				endif
			}
		}

		/* Events */
		foreach .(Event* | *Event) 
		{	if not $events =~ oid%wildsp then
				variable 'events' append oid ' ' close
			endif
		}

		/* Datatypes */
		foreach .(*Datatype | EA* | Enumeration | RangeableValueType | ^EAType) 		
		{	if not $datatypes =~ oid%wildsp then
				variable 'datatypes' append oid ' ' close
			endif
		}
		
		/* FlowPorts */
		foreach .(*FlowPort) 		
		{	if not $flowports =~ oid%wildsp then
				variable 'flowports' append oid ' ' close
			endif
		}
		
		/* ClientServerPorts */
		foreach .(ServerPort | ClientPort) 		
		{	if not $cs_ports =~ oid%wildsp then
				variable 'cs_ports' append oid ' ' close
			endif
		}
		
		/* FeatureFlaws and FaultFailures */
		foreach .(FeatureFlaw | FaultFailure) 		
		{	if type = 'FeatureFlaw' then 
				if not $featureflaws =~ oid%wildsp then
					variable 'featureflaws' append oid ' ' close
				endif
			endif
			if type = 'FaultFailure' then 
				if not $faultfailures =~ oid%wildsp then
					variable 'faultfailures' append oid ' ' close
				endif
			endif
		}
		
		/* VehicleFeatures and Features */
		foreach .(*Feature) 		
		{	if not $features =~ oid%wildsp then
				variable 'features' append oid ' ' close
			endif
		}

	endif
}

foreach .Package 
{	do decompositions { _checkTimingAndBehaviorModelsForEAXML() }}

if $warnings &lt;&gt; '0' then
	'Total number of warnings: ' $warnings newline
else
	'No warnings found!' newline
endif
			<icon offset="49,28" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="76" version="1.2" width="97" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.37" cy="0.642857" gradientUnits="objectBoundingBox" id="gradient1" r="0.715508" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="0.649419" stop-color="rgb(0,192,0)"></stop>
							<stop offset="1" stop-color="rgb(0,192,0)"></stop>
						</radialGradient>
					</defs>
					<rect fill="rgb(255,255,255)" height="40" rx="5" ry="7" stroke="rgb(0,128,0)" stroke-width="1" width="40" x="49" y="36"></rect>
					<polygon fill="url(#gradient1)" points="58.3,40.5714 54,46.8571 54,53.1429 66.9,72 71.2,72 97,40.5714 97,34.2857 92.7,28 88.4,28 70.34,56.9143 62.6,40.5714" stroke="rgb(0,0,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>
			Report '!Export to EAXML'
/* EAXML export from a package hierarchy */ 
subreport 'Export to EAXML' run
endreport
			<icon offset="35,37" xmlns="http://www.metacase.com/icon">
				<svg baseProfile="tiny" height="57" version="1.2" width="56" xmlns="http://www.w3.org/2000/svg">
					<image height="17" ns:href="Graph_EAXML_user_3606735688-!Export to EAXML-Icon-1.png" sym:scale="1,1" width="18" x="35" y="37"></image>
					<polygon fill="rgb(132,232,114)" points="48.2593,46 45,49.1731 49.4815,53.8269 46.2222,57 56,57 56,47.4808 52.7407,50.6538" stroke="rgb(0,96,0)" stroke-width="1"></polygon>
				</svg>
			</icon>
		</report>
		<report>Export\ to\ EAXML()
/* Generating the EAXML based on the package structure */
/* Translators */
subreport '_translators' run 
subreport '_EAST-ADL specific translators' run 

/* Validating the EAXML export validity; if legal = F (EAXML wont be generated), if legal = T (EAXML can be generated), by default it is set as legal = T */
$legal = 'T'
_EAXMLExportValidity()

if $legal = 'T' then
	$reported_models = ' '
	$reported_elements = ' '
	$data-types_content = ''
	$rest_of_the_data-types_content = ''
	$packaged_types = ' '
	$typesAccessedFromLevels = ' '
	$data-types_modeled = ' '
	
	/* Collects all oids of the packaged types into EAXMLoids variable */
	_collectAllTypesInThisEAXML()

	/* Create paths for all types */
	_createTypePathsInThisHierarchy()
	_createTypePaths() 
	
	filename subreport '_default directory' run :Name%file '.eaxml' encoding 'UTF-8' write
	subreport '_XML document definitions' run
	variable 'reported_models' append oid ' ' close
	'&lt;!-- Stored in MetaEdit project: ' project ' --&gt;' newline
	'&lt;TOP-LEVEL-PACKAGES&gt;' newline

	/* Collecting all EATypes (types, prototypes, pins/ports) into packaged_types variable */
	subreport '_find packaged types' run

	/* Create Data-types */
	_create_data-types()
	
	/* Reporting packages on the top level */
	foreach .Package {
		do decompositions {
			local 'nameValue' write :Name;%xml close 
			'&lt;!-- EA-PACKAGE name: ' :Short name;	' --&gt;' newline
			'&lt;EA-PACKAGE UUID="' :__UUID '"&gt;' newline 
			'&lt;SHORT-NAME&gt;' :Short name; '&lt;/SHORT-NAME&gt;' newline
			if @nameValue &lt;&gt; '' then
				'&lt;NAME&gt;' @nameValue '&lt;/NAME&gt;' newline
			endif
			subreport '_description' run
			_subpackages();
			_elements();
			'&lt;/EA-PACKAGE&gt;' newline
		}
	}
	'&lt;/TOP-LEVEL-PACKAGES&gt;' newline
	'&lt;/EAXML&gt;' newline
	close
	external '"' subreport '_default directory' run :Name;%file '.eaxml"' execute
else
	'EAXML export is not done. Check the warnings above or run ''Check'' report from toolbar' newline
endif
</report>
		<report>_EAXMLExportValidity()
/* Checking to validate the content of EAXML export */
$packages_visited = ' '
if not $visited =~ oid%wildsp then
	variable 'visited' write ' ' oid ' ' close
endif

/* Collecting all the types accessed via the EAType into EATypesGraphs variable */
$EATypeGraphs = ' '
$packages_in_cycle = ' '
$EAtypes = ' '
$packagesToBeChecked = ' '
foreach .Package 
{	do decompositions { _collectEATypes() }}

/* Checks that type-prototype path with package hierarchy is not cyclic */
_LegalTypePath()

/* Checks that EAType is only in one package */
foreach .Package 
{	do decompositions 
	{	_checkingsForEATypes() }
}

if $legal = 'T' then
	/* Checks that package structure forms a tree */
	_validatePackageForEAXML()
	
	/* Validating that the package structure is a tree */
	do graphs where (type = 'Package' or type = 'EAXML') and (not $packages_visited =~ oid%wildsp) 
	{	foreach .Package 
		{	do decompositions 
			{	if $packages_visited =~ oid%wildsp then
					_reportWarnings()
					'Warning: Package ' id;1 ' in ' id;2 ' outside this EAXML hiearchy refer to ' id ' package too. Package hierachy must form a tree' newline
				endif
			}
		}
	}

	/* Checks that all types are defined in package path structure for EAXML */
	_validateTypePathsForEAXML()
	
endif</report>
		<icon offset="40,15" xmlns="http://www.metacase.com/icon">
			<svg baseProfile="tiny" height="85" version="1.2" width="110" xmlns="http://www.w3.org/2000/svg">
				<rect fill="rgb(255,255,255)" height="45" rx="0" ry="0" stroke="rgb(0,0,128)" stroke-width="1" width="55" x="40" y="25"></rect>
				<rect fill="rgb(0,0,128)" height="11" rx="0" ry="0" stroke="rgb(0,0,0)" stroke-width="1" width="55" x="40" y="15"></rect>
				<polygon fill="rgb(132,232,114)" points="81.852,45 70,56.5385 86.2964,73.4615 74.4444,85 110,85 110,50.3847 98.148,61.9229" stroke="rgb(0,96,0)" stroke-width="1"></polygon>
			</svg>
		</icon>
	</graph>
	<graph href="#Graph_EnvironmentModel_sysadmin_3509625580"></graph>
	<graph href="#Graph_ErrorModel_sysadmin_3509186594"></graph>
	<graph href="#Graph_HardwareDesignArchitecture_user_3400132575"></graph>
	<graph href="#Graph_PackageModel_sysadmin_3555309892"></graph>
	<graph href="#Graph_RequirementsAllocation_sysadmin_3509180760"></graph>
	<graph href="#Graph_Requirement_view_user_3401441403"></graph>
	<graph href="#Graph_SafetyCase_sysadmin_3619079777"></graph>
	<graph type="Graph_SAM_061218_sysadmin_3721553581" typeName="SAM">
		<description></description>
		<slot id="a0uke8" name="Name" unique="false">
			<property type="Property_Name_sysadmin_3718454651" typeName="Name">
				<description></description>
				<dataType>
					<simpleType>String</simpleType>
				</dataType>
				<defaultValue>
					<string></string>
				</defaultValue>
				<widget>Input Field</widget>
			</property>
		</slot>
		<slot id="a1ukeq" name="Model description" unique="false">
			<property href="#Property_Model_description_user_3399887679"></property>
		</slot>
		<identProp slotID="a0uke8"></identProp>
		<object id="Object_Adversary_sysadmin_3718889113" type="Object_Adversary_sysadmin_3718889113" typeName="Adversary">
			<description>Attacks are performed by either an individual or the system’s environment. Either way, adversaries are derivates of the system environment because they are not part of the main systems model and interact from the outside.
</description>
			<slot id="a1yfl2" name="Name" unique="false">
				<property type="Property_AdversaryName_sysadmin_3719473075" typeName="AdversaryName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<identProp slotID="a1yfl2"></identProp>
			<objectSymbol offset="50,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="50,50 210,50 210,150 50,150 50,50" targetPointX="130" targetPointY="100" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="150" version="1.2" width="210" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="100" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="50" y="50">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="60" y="50">
						Adversary
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="50" y="50">
						ReportTextSource:newline
:Name;
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="160" x="50" y="50">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_Attack_sysadmin_3718888403" type="Object_Attack_sysadmin_3718888403" typeName="Attack">
			<description>Represents a cyber-physical attack on the sys- tem described by an attack vector. An attack vector is a path or means by which an adversary can gain unauthorized access to a target system
</description>
			<slot id="kv9cvb" name="Name" unique="false">
				<property href="#Property_Name_sysadmin_3536998876"></property>
			</slot>
			<slot id="l7c79o" name="userInteraction" unique="false">
				<property type="Property_userInteraction_sysadmin_3745828326" typeName="userInteraction">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(N)one</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(N)one</string>
						<string>(R)equired</string>
					</listValues>
				</property>
			</slot>
			<slot id="l8c77i" name="privilegesRequired" unique="false">
				<property type="Property_privilegesRequired_sysadmin_3745828287" typeName="privilegesRequired">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(N)one</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(N)one</string>
						<string>(L)ow</string>
						<string>(H)igh</string>
					</listValues>
				</property>
			</slot>
			<slot id="l6c6i6" name="accessRequired" unique="false">
				<property type="Property_accessRequired_sysadmin_3745827831" typeName="accessRequired">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(N)etwork</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(N)etwork</string>
						<string>(A)djacent</string>
						<string>(L)ocal</string>
						<string>(P)hysical</string>
					</listValues>
				</property>
			</slot>
			<identProp slotID="kv9cvb"></identProp>
			<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="30,30 230,30 230,140 30,140 30,30" targetPointX="130" targetPointY="85" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="140" version="1.2" width="230" xmlns="http://www.w3.org/2000/svg">
					<defs>
						<radialGradient cx="0.5" cy="0.5" gradientUnits="objectBoundingBox" id="gradient1" r="0.70711" sym:correctGamma="true" sym:fillType="PathFill">
							<stop offset="0" stop-color="rgb(255,255,255)"></stop>
							<stop offset="1" stop-color="rgb(255,224,224)"></stop>
						</radialGradient>
					</defs>
					<rect fill="url(#gradient1)" height="110" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="200" x="30" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="180" x="40" y="30">
						Attack
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(128,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="200" x="30" y="30">
						ReportTextSource:newline
:Name;
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#fixed" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="false" text-anchor="start" width="200" x="30" y="30">
						ReportTextSource:newline
newline
newline

do :userInteraction {'userInteraction:   ' id newline}

do :privilegesRequired {'privilegesRequired:' id newline }

do :accessRequired {'accessRequired:    ' id newline }


						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="110" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="200" x="30" y="30">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_AttackableProperty_sysadmin_3718886755" type="Object_AttackableProperty_sysadmin_3718886755" typeName="AttackableProperty">
			<description>AttackableProperties are certain properties or characteristics an adversary searches / needs for his attack to succeed.
</description>
			<slot id="kmydmb" name="Name" unique="false">
				<property type="Property_AttackablePropertyName_sysadmin_3719471801" typeName="AttackablePropertyName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="kncaj1" name="conditionPrerequisiteComplexity" unique="false">
				<property type="Property_conditionPrerequisiteComplexity_sysadmin_3745830438" typeName="conditionPrerequisiteComplexity">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(L)ow</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(L)ow</string>
						<string>(H)igh</string>
					</listValues>
				</property>
			</slot>
			<identProp slotID="kmydmb"></identProp>
			<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="30,30 190,30 190,130 30,130 30,30" targetPointX="110" targetPointY="80" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="130" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="100" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="30" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="40" y="30">
						AttackableProperty
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="30" y="30">
						ReportTextSource:newline
:Name;
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#fixed" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="false" text-anchor="start" width="160" x="30" y="30">
						ReportTextSource:newline
newline
newline
do :conditionPrerequisiteComplexity {'conditionPrerequisiteComplexity	' _levelColoring() newline }


						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="160" x="30" y="30">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_FinancialGain_sysadmin_3718887415" type="Object_FinancialGain_sysadmin_3718887415" typeName="FinancialGain">
			<description></description>
			<slot id="a1yd5r" name="Name" unique="false">
				<property type="Property_FinancialGainName_sysadmin_3719471503" typeName="FinancialGainName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="a3ca7a" name="availabilityImpact" unique="false">
				<property id="Property_availabilityImpact_sysadmin_3745830227" type="Property_availabilityImpact_sysadmin_3745830227" typeName="availabilityImpact">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(N)one</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(N)one</string>
						<string>(L)ow</string>
						<string>(H)igh</string>
					</listValues>
				</property>
			</slot>
			<slot id="a4ca5q" name="integrityImpact" unique="false">
				<property id="Property_integrityImpact_sysadmin_3745830199" type="Property_integrityImpact_sysadmin_3745830199" typeName="integrityImpact">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(N)one</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(N)one</string>
						<string>(L)ow</string>
						<string>(H)igh</string>
					</listValues>
				</property>
			</slot>
			<slot id="a5ca3z" name="confidentialityImpact" unique="false">
				<property id="Property_confidentialityImpact_sysadmin_3745830167" type="Property_confidentialityImpact_sysadmin_3745830167" typeName="confidentialityImpact">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(N)one</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(N)one</string>
						<string>(L)ow</string>
						<string>(H)igh</string>
					</listValues>
				</property>
			</slot>
			<slot id="a27klh" name="breaksSecurityGoals" unique="false">
				<property id="Property_breaksSecurityGoals_sysadmin_3721553847" type="Property_breaksSecurityGoals_sysadmin_3721553847" typeName="breaksSecurityGoals">
					<description></description>
					<dataType>
						<simpleType>Collection</simpleType>
					</dataType>
					<contentsDataType>
						<simpleType>String</simpleType>
					</contentsDataType>
				</property>
			</slot>
			<identProp slotID="a1yd5r"></identProp>
			<objectSymbol offset="19,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="180,155.596 179.392,161.108 177.662,165.781 175.072,168.904 172.016,170 27.9834,170 24.9283,168.904 22.3383,165.781 20.6077,161.108 20,155.596 20,54.4044 20.6077,48.8921 22.3383,44.2189 24.9283,41.0964 27.9834,40 172.016,40 175.072,41.0964 177.662,44.2189 179.392,48.8921 180,54.4044 180,155.596" targetPointX="100" targetPointY="105" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="170" version="1.2" width="180" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="130" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="20" y="40">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="20" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="20" y="50">
						PropertyTextSource:a1yd5r
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="10" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="30" y="40">
						FinancialGain
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="20" x2="180" y1="80" y2="80">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</line>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="20" y="80">
						breaksSecurityGoals:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="80" y="80">
						PropertyTextSource:a27klh
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="22" y="104">
						confidentialityImpact
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="82" y="104">
						PropertyTextSource:a5ca3z
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="19" y="126">
						integrityImpact:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="79" y="126">
						PropertyTextSource:a4ca5q
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="22" y="144">
						availabilityImpact:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="82" y="144">
						PropertyTextSource:a3ca7a
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_Harm_sysadmin_3718887288" type="Object_Harm_sysadmin_3718887288" typeName="Harm">
			<description>A threat by an attack meant to actively or passively harm passengers and other road users.
</description>
			<slot id="a1ydba" name="Name" unique="false">
				<property type="Property_HarmName_sysadmin_3719471603" typeName="HarmName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="a2fn16" name="breaksSecurityGoals" unique="false">
				<property href="#Property_breaksSecurityGoals_sysadmin_3721553847"></property>
			</slot>
			<slot id="a3cabn" name="availabilityImpact" unique="false">
				<property href="#Property_availabilityImpact_sysadmin_3745830227"></property>
			</slot>
			<slot id="a4caak" name="integrityImpact" unique="false">
				<property href="#Property_integrityImpact_sysadmin_3745830199"></property>
			</slot>
			<slot id="a5ca9w" name="confidentialityImpact" unique="false">
				<property href="#Property_confidentialityImpact_sysadmin_3745830167"></property>
			</slot>
			<identProp slotID="a1ydba"></identProp>
			<objectSymbol offset="36,50" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="200,156.704 199.392,161.792 197.662,166.106 195.072,168.988 192.016,170 47.9834,170 44.9283,168.988 42.3383,166.106 40.6077,161.792 40,156.704 40,63.2964 40.6077,58.2081 42.3383,53.8944 44.9283,51.0121 47.9834,50 192.016,50 195.072,51.0121 197.662,53.8944 199.392,58.2081 200,63.2964 200,156.704" targetPointX="120" targetPointY="110" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="170" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="120" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="40" y="50">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="20" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="40" y="60">
						PropertyTextSource:a1ydba
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="10" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="50" y="50">
						Harm
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="40" x2="200" y1="90" y2="90">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</line>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="40" y="90">
						breaksSecurityGoals:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="100" y="90">
						PropertyTextSource:a2fn16
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="39" y="108">
						confidentialityImpact
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="99" y="108">
						PropertyTextSource:a5ca9w
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="36" y="130">
						integrityImpact:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="96" y="130">
						PropertyTextSource:a4caak
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="39" y="148">
						availabilityImpact:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="99" y="148">
						PropertyTextSource:a3cabn
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object id="Object_InformationRetrieval_sysadmin_3718887376" type="Object_InformationRetrieval_sysadmin_3718887376" typeName="InformationRetrieval">
			<description></description>
			<slot id="ksyd86" name="Name" unique="false">
				<property type="Property_InformationRetrievalName_sysadmin_3719471547" typeName="InformationRetrievalName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="ktfn5q" name="breaksSecurityGoals" unique="false">
				<property href="#Property_breaksSecurityGoals_sysadmin_3721553847"></property>
			</slot>
			<slot id="kucack" name="confidentialityImpact" unique="false">
				<property href="#Property_confidentialityImpact_sysadmin_3745830167"></property>
			</slot>
			<slot id="kvcad0" name="integrityImpact" unique="false">
				<property href="#Property_integrityImpact_sysadmin_3745830199"></property>
			</slot>
			<slot id="kwcadf" name="availabilityImpact" unique="false">
				<property href="#Property_availabilityImpact_sysadmin_3745830227"></property>
			</slot>
			<identProp slotID="ksyd86"></identProp>
			<objectSymbol offset="48,60" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="210,166.704 209.392,171.792 207.662,176.106 205.072,178.988 202.016,180 57.9834,180 54.9283,178.988 52.3383,176.106 50.6077,171.792 50,166.704 50,73.2964 50.6077,68.2081 52.3383,63.8944 54.9283,61.0121 57.9834,60 202.016,60 205.072,61.0121 207.662,63.8944 209.392,68.2081 210,73.2964 210,166.704" targetPointX="130" targetPointY="120" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="180" version="1.2" width="210" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="120" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="50" y="60">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="after" fill="rgb(0,0,0)" font-family="#sans serif" font-size="20" font-style="normal" font-weight="normal" height="30" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="50" y="70">
						PropertyTextSource:ksyd86
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="10" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="60" y="60">
						InformationRetrieval
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<line stroke="rgb(0,0,0)" stroke-width="1" x1="50" x2="210" y1="100" y2="100">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</line>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="50" y="100">
						breaksSecurityGoals:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="110" y="100">
						PropertyTextSource:ktfn5q
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="51" y="116">
						confidentialityImpact
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="111" y="116">
						PropertyTextSource:kucack
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="48" y="138">
						integrityImpact:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="108" y="138">
						PropertyTextSource:kvcad0
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="60" x="51" y="156">
						availabilityImpact:
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="start" width="30" x="111" y="156">
						PropertyTextSource:kwcadf
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object href="#Object_Item_sysadmin_3509259179"></object>
		<object id="Object_ProductModification_sysadmin_3718887531" type="Object_ProductModification_sysadmin_3718887531" typeName="ProductModification">
			<description></description>
			<slot id="a1ycz7" name="Name" unique="false">
				<property type="Property_ProductModificationName_sysadmin_3719471385" typeName="ProductModificationName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="a2fnez" name="breaksSecurityGoals" unique="false">
				<property href="#Property_breaksSecurityGoals_sysadmin_3721553847"></property>
			</slot>
			<slot id="a3caea" name="confidentialityImpact" unique="false">
				<property href="#Property_confidentialityImpact_sysadmin_3745830167"></property>
			</slot>
			<slot id="a4caer" name="integrityImpact" unique="false">
				<property href="#Property_integrityImpact_sysadmin_3745830199"></property>
			</slot>
			<slot id="a5caf5" name="availabilityImpact" unique="false">
				<property href="#Property_availabilityImpact_sysadmin_3745830227"></property>
			</slot>
			<identProp slotID="a1ycz7"></identProp>
			<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="190,140 189.543,143.827 188.243,147.071 186.296,149.239 184,150 35.75,150 33.4539,149.239 31.5074,147.071 30.2067,143.827 29.75,140 29.75,39.75 30.2067,35.9232 31.5074,32.6789 33.4539,30.5112 35.75,29.75 184,29.75 186.296,30.5112 188.243,32.6789 189.543,35.9232 190,39.75 190,140" targetPointX="110" targetPointY="90" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="153" version="1.2" width="193" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(213,213,213)" height="120" rx="6" ry="10" stroke="none" stroke-width="1" width="160" x="33" y="33">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<rect fill="rgb(255,224,192)" height="120" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="30" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="30" y="30">
						ReportTextSource:newline
:Name;
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="12" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="30" y="30">
						ProductModification
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#fixed" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="false" text-anchor="start" width="160" x="30" y="30">
						ReportTextSource:newline
newline
newline
@sep = 'breaksSecurityGoals:   '
do :breaksSecurityGoals {@sep id newline @sep = '                       '}

do :confidentialityImpact {'confidentialityImpact:' _levelColoring() newline }

do :integrityImpact {'integrityImpact:      ' _levelColoring() newline }

do :availabilityImpact {'availabilityImpact:   ' _levelColoring() }


						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="160" x="30" y="30">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object href="#Object_ADLRequirement_user_3400763726"></object>
		<object href="#Object_VehicleFeature_user_3400133821"></object>
		<object id="Object_Vulnerability_sysadmin_3718887241" type="Object_Vulnerability_sysadmin_3718887241" typeName="Vulnerability">
			<description>In order to represent the weak spots in the system architecture, Vulnerability describes the weakness and affiliation to one or more Items.
</description>
			<slot id="krydg5" name="Name" unique="false">
				<property type="Property_VulnerabilityName_sysadmin_3719471690" typeName="VulnerabilityName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<slot id="kscann" name="scope" unique="false">
				<property type="Property_scope_sysadmin_3745830521" typeName="scope">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(U)nchanged</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(C)hanged</string>
						<string>(U)nchanged</string>
					</listValues>
				</property>
			</slot>
			<slot id="ktcata" name="exploitCodeMaturity" unique="false">
				<property type="Property_exploitCodeMaturity_sysadmin_3745830623" typeName="exploitCodeMaturity">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(X) Not Defined</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(X) Not Defined</string>
						<string>(U)nproven</string>
						<string>(P)roof-of-Concept</string>
						<string>(F)unctional</string>
						<string>(H)igh</string>
					</listValues>
				</property>
			</slot>
			<slot id="kucaxa" name="remediationLevel" unique="false">
				<property type="Property_remediationLevel_sysadmin_3745830695" typeName="remediationLevel">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(X) Not Defined</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(X) Not Defined</string>
						<string>(O)fficial Fix</string>
						<string>(T)emporary Fix</string>
						<string>(W)orkaround</string>
						<string>(U)navailable</string>
					</listValues>
				</property>
			</slot>
			<slot id="kvcazb" name="reportConfidence" unique="false">
				<property type="Property_reportConfidence_sysadmin_3745830731" typeName="reportConfidence">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>(X) Not Defined</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>(X) Not Defined</string>
						<string>(U)nknown</string>
						<string>(R)easonable</string>
						<string>(C)onfirmed</string>
					</listValues>
				</property>
			</slot>
			<identProp slotID="krydg5"></identProp>
			<objectSymbol offset="40,40" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="40,40 200,40 200,160 40,160 40,40" targetPointX="120" targetPointY="100" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="160" version="1.2" width="200" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="120" rx="6" ry="10" stroke="rgb(128,0,0)" stroke-width="2" width="160" x="40" y="40">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="50" y="40">
						Vulnerability
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="40" y="40">
						ReportTextSource:newline
:Name;
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#fixed" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="false" text-anchor="start" width="160" x="40" y="40">
						ReportTextSource:newline
newline
newline

do :scope {						'scope:              'id newline }

do :exploitCodeMaturity {	'exploitCodeMaturity:' id newline }

do :remediationLevel {     'remediationLevel:   ' id newline }

do :reportConfidence {     'reportConfidence:   ' id  }


						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="120" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="160" x="40" y="40">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object href="#Object_UseCase_user_3462616740"></object>
		<object id="Object_Score_sysadmin_3745830848" type="Object_Score_sysadmin_3745830848" typeName="Score">
			<description></description>
			<slot id="mbcb5i" name="value" unique="false">
				<property type="Property_value_sysadmin_3745830843" typeName="value">
					<description></description>
					<dataType>
						<simpleType>Number</simpleType>
					</dataType>
					<defaultValue>
						<int>1</int>
					</defaultValue>
				</property>
			</slot>
			<slot id="mccb3a" name="ScoreName" unique="false">
				<property type="Property_ScoreName_sysadmin_3745830803" typeName="ScoreName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<identProp slotID="mccb3a"></identProp>
			<objectSymbol offset="30,20" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="30,20 190,20 190,121 30,121 30,20" targetPointX="110" targetPointY="71" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="121" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(240,240,240)" height="100" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="30" y="20">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="101" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="40" y="20">
						Score
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="30" y="20">
						ReportTextSource:newline
:ScoreName;
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="false" text-anchor="start" width="160" x="30" y="20">
						ReportTextSource:newline
newline
newline
'value: ' :value



						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="160" x="30" y="20">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
		<object id="Object_SecurityConcept_sysadmin_3745832015" type="Object_SecurityConcept_sysadmin_3745832015" typeName="SecurityConcept">
			<description></description>
			<slot id="a0cd17" name="motivatedBy" unique="false">
				<property type="Property_motivatedBy_sysadmin_3745832061" typeName="motivatedBy">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string>standard</string>
					</defaultValue>
					<widget>Fixed List</widget>
					<listValues>
						<string>standard</string>
						<string>certification</string>
						<string>documentedAttacks</string>
					</listValues>
				</property>
			</slot>
			<slot id="a1cgcz" name="SecurityConceptName" unique="false">
				<property type="Property_SecurityConceptName_sysadmin_3745834217" typeName="SecurityConceptName">
					<description></description>
					<dataType>
						<simpleType>String</simpleType>
					</dataType>
					<defaultValue>
						<string></string>
					</defaultValue>
					<widget>Input Field</widget>
				</property>
			</slot>
			<identProp slotID="a1cgcz"></identProp>
			<objectSymbol offset="30,30" scaleFilter="1,1" xmlns="http://www.metacase.com/symbol">
				<defaultConnectable isSticky="true" points="30,30 190,30 190,130 30,130 30,30" targetPointX="110" targetPointY="80" usesGrid="false"></defaultConnectable>
				<svg baseProfile="tiny" height="130" version="1.2" width="190" xmlns="http://www.w3.org/2000/svg">
					<rect fill="rgb(255,224,192)" height="100" rx="6" ry="10" stroke="rgb(0,0,0)" stroke-width="1" width="160" x="30" y="30">
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</rect>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="11" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="140" x="40" y="30">
						SecurityConcept
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="16" font-style="normal" font-weight="bold" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="160" x="30" y="30">
						ReportTextSource:newline
:SecurityConceptName
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="3" sym:wordWrap="false" text-anchor="start" width="160" x="30" y="30">
						ReportTextSource:newline
newline
newline
'motivatedBy:	'
do :motivatedBy {id }

						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
					<textArea display-align="before" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="100" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="false" text-anchor="middle" width="160" x="30" y="30">
						ReportTextSource:newline; newline; 
'_______________________________________________________________________________________________________________________________________________'
						<metaInfo xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</objectSymbol>
		</object>
		<relationship id="Relationship_Association_sysadmin_3719758098" type="Relationship_Association_sysadmin_3719758098" typeName="Association">
			<description></description>
		</relationship>
		<role id="Role_operationalSituationUseCase_sysadmin_3719752696" type="Role_operationalSituationUseCase_sysadmin_3719752696" typeName="operationalSituationUseCase">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="150" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="150" x="0" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_attackFrom_sysadmin_3719755018" type="Role_attackFrom_sysadmin_3719755018" typeName="attack">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="middle" width="130" x="10" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_Mode_sysadmin_3509604357" type="Role_Mode_sysadmin_3509604357" typeName="operatingMode">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="130" x="10" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_subAttacks_sysadmin_3719753425" type="Role_subAttacks_sysadmin_3719753425" typeName="subAttacks">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="130" x="10" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_mode_sysadmin_3719753575" type="Role_mode_sysadmin_3719753575" typeName="mode">
			<description>The mode where this requirement is valid.</description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="130" x="10" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_nonFulfilledRequirement_sysadmin_3719752909" type="Role_nonFulfilledRequirement_sysadmin_3719752909" typeName="nonFulfilledRequirement">
			<description>Identifies the requirements that are not fulfilled.</description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="130" x="10" y="60">
						ReportTextSource:type
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_derived_sysadmin_3719753631" type="Role_derived_sysadmin_3719753631" typeName="derived">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="130" x="10" y="60">
						
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_vehicleFeature_sysadmin_3719754145" type="Role_vehicleFeature_sysadmin_3719754145" typeName="vehicleFeature">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="80" version="1.2" width="140" xmlns="http://www.w3.org/2000/svg">
					<textArea display-align="center" fill="rgb(0,0,0)" font-family="#sans serif" font-size="14" font-style="normal" font-weight="normal" height="20" sym:characterBackgroundFill="none" sym:textboxFill="none" sym:textboxStroke="none" sym:textboxStroke-width="1" sym:wordWrap="true" text-anchor="end" width="130" x="10" y="60">
						
						<metaInfo shouldRotate="false" xmlns="http://www.metacase.com/symbol"></metaInfo>
					</textArea>
				</svg>
			</roleSymbol>
		</role>
		<role id="Role_Attack_Motivation_sysadmin_3721997780" type="Role_Attack_Motivation_sysadmin_3721997780" typeName="attackMotivation">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_AttackableProperty_sysadmin_3719760707" type="Role_AttackableProperty_sysadmin_3719760707" typeName="attackableProperty">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_Item_sysadmin_3719760555" type="Role_Item_sysadmin_3719760555" typeName="item">
			<description></description>
			<roleSymbol xmlns="http://www.metacase.com/symbol">
				<rolelineGOs stroke="rgb(0,0,0)" stroke-width="1">
					<metaInfo shouldRotate="false"></metaInfo>
				</rolelineGOs>
				<svg baseProfile="tiny" height="0" version="1.2" width="0" xmlns="http://www.w3.org/2000/svg"></svg>
			</roleSymbol>
		</role>
		<role id="Role_attackOwner_sysadmin_3723882296" type="Role_attackOwner_sysadmin_3723882296" typeName="attack_from">
			<description></description>
		</role>
		<role id="Role_attackablePropertyOwner_sysadmin_3723882311" type="Role_attackablePropertyOwner_sysadmin_3723882311" typeName="attackableProperty_from">
			<description></description>
		</role>
		<role id="Role_attackMotivationOwner_sysadmin_3723882324" type="Role_attackMotivationOwner_sysadmin_3723882324" typeName="attackMotivation_from">
			<description></description>
		</role>
		<role id="Role_derivedOwner_sysadmin_3723882339" type="Role_derivedOwner_sysadmin_3723882339" typeName="derived_from">
			<description></description>
		</role>
		<role id="Role_item_from_sysadmin_3723882583" type="Role_item_from_sysadmin_3723882583" typeName="item_from">
			<description></description>
		</role>
		<role id="Role_mode_from_sysadmin_3723882589" type="Role_mode_from_sysadmin_3723882589" typeName="mode_from">
			<description></description>
		</role>
		<role id="Role_nonFulfilledRequirement_from_sysadmin_3723882605" type="Role_nonFulfilledRequirement_from_sysadmin_3723882605" typeName="nonFulfilledRequirement_from">
			<description></description>
		</role>
		<role id="Role_operatingMode_from_sysadmin_3723882618" type="Role_operatingMode_from_sysadmin_3723882618" typeName="operatingMode_from">
			<description></description>
		</role>
		<role id="Role_operationalSituationUseCase_from_sysadmin_3723882638" type="Role_operationalSituationUseCase_from_sysadmin_3723882638" typeName="operationalSituationUseCase_from">
			<description></description>
		</role>
		<role id="Role_subAttacks_from_sysadmin_3723882661" type="Role_subAttacks_from_sysadmin_3723882661" typeName="subAttacks_from">
			<description></description>
		</role>
		<role id="Role_vehicleFeature_from_sysadmin_3723882672" type="Role_vehicleFeature_from_sysadmin_3723882672" typeName="vehicleFeature_from">
			<description></description>
		</role>
		<role id="Role_vulnerability_from_sysadmin_3723886223" type="Role_vulnerability_from_sysadmin_3723886223" typeName="vulnerability_from">
			<description></description>
		</role>
		<role id="Role_vulnerability_sysadmin_3723886255" type="Role_vulnerability_sysadmin_3723886255" typeName="vulnerability">
			<description></description>
		</role>
		<role id="Role__score_sysadmin_3745830875" type="Role__score_sysadmin_3745830875" typeName="score">
			<description></description>
		</role>
		<role id="Role_score_from_sysadmin_3746280042" type="Role_score_from_sysadmin_3746280042" typeName="score_from">
			<description></description>
		</role>
		<role id="Role_concept_from_sysadmin_3746282210" type="Role_concept_from_sysadmin_3746282210" typeName="concept_from">
			<description></description>
		</role>
		<role id="Role_concept_sysadmin_3746282328" type="Role_concept_sysadmin_3746282328" typeName="concept">
			<description></description>
		</role>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackFrom_sysadmin_3719755018"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackOwner_sysadmin_3723882296"></role>
				<object href="#Object_Adversary_sysadmin_3718889113"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_AttackableProperty_sysadmin_3719760707"></role>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackablePropertyOwner_sysadmin_3723882311"></role>
				<object href="#Object_FinancialGain_sysadmin_3718887415"></object>
				<object href="#Object_Harm_sysadmin_3718887288"></object>
				<object href="#Object_InformationRetrieval_sysadmin_3718887376"></object>
				<object href="#Object_ProductModification_sysadmin_3718887531"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackablePropertyOwner_sysadmin_3723882311"></role>
				<object href="#Object_FinancialGain_sysadmin_3718887415"></object>
				<object href="#Object_Harm_sysadmin_3718887288"></object>
				<object href="#Object_InformationRetrieval_sysadmin_3718887376"></object>
				<object href="#Object_ProductModification_sysadmin_3718887531"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_AttackableProperty_sysadmin_3719760707"></role>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Attack_Motivation_sysadmin_3721997780"></role>
				<object href="#Object_FinancialGain_sysadmin_3718887415"></object>
				<object href="#Object_Harm_sysadmin_3718887288"></object>
				<object href="#Object_InformationRetrieval_sysadmin_3718887376"></object>
				<object href="#Object_ProductModification_sysadmin_3718887531"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackMotivationOwner_sysadmin_3723882324"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackMotivationOwner_sysadmin_3723882324"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Attack_Motivation_sysadmin_3721997780"></role>
				<object href="#Object_FinancialGain_sysadmin_3718887415"></object>
				<object href="#Object_Harm_sysadmin_3718887288"></object>
				<object href="#Object_InformationRetrieval_sysadmin_3718887376"></object>
				<object href="#Object_ProductModification_sysadmin_3718887531"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackOwner_sysadmin_3723882296"></role>
				<object href="#Object_Adversary_sysadmin_3718889113"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_attackFrom_sysadmin_3719755018"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_sysadmin_3746282328"></role>
				<object href="#Object_SecurityConcept_sysadmin_3745832015"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_from_sysadmin_3746282210"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_sysadmin_3746282328"></role>
				<object href="#Object_SecurityConcept_sysadmin_3745832015"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_from_sysadmin_3746282210"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_from_sysadmin_3746282210"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_sysadmin_3746282328"></role>
				<object href="#Object_SecurityConcept_sysadmin_3745832015"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_from_sysadmin_3746282210"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_concept_sysadmin_3746282328"></role>
				<object href="#Object_SecurityConcept_sysadmin_3745832015"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_derived_sysadmin_3719753631"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_derivedOwner_sysadmin_3723882339"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_derivedOwner_sysadmin_3723882339"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_derived_sysadmin_3719753631"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Item_sysadmin_3719760555"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_item_from_sysadmin_3723882583"></role>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_item_from_sysadmin_3723882583"></role>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Item_sysadmin_3719760555"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_mode_sysadmin_3719753575"></role>
				<object href="#Object_Mode_sysadmin_3509262593"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_mode_from_sysadmin_3723882589"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_mode_from_sysadmin_3723882589"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_mode_sysadmin_3719753575"></role>
				<object href="#Object_Mode_sysadmin_3509262593"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_nonFulfilledRequirement_sysadmin_3719752909"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_nonFulfilledRequirement_from_sysadmin_3723882605"></role>
				<object href="#Object_Vulnerability_sysadmin_3718887241"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_nonFulfilledRequirement_from_sysadmin_3723882605"></role>
				<object href="#Object_Vulnerability_sysadmin_3718887241"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_nonFulfilledRequirement_sysadmin_3719752909"></role>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Mode_sysadmin_3509604357"></role>
				<object href="#Object_Mode_sysadmin_3509262593"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operatingMode_from_sysadmin_3723882618"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Mode_sysadmin_3509604357"></role>
				<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operatingMode_from_sysadmin_3723882618"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operatingMode_from_sysadmin_3723882618"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_Mode_sysadmin_3509604357"></role>
				<object href="#Object_Mode_sysadmin_3509262593"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operationalSituationUseCase_sysadmin_3719752696"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operationalSituationUseCase_from_sysadmin_3723882638"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operationalSituationUseCase_from_sysadmin_3723882638"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_operationalSituationUseCase_sysadmin_3719752696"></role>
				<object href="#Object_UseCase_user_3462616740"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role__score_sysadmin_3745830875"></role>
				<object href="#Object_Score_sysadmin_3745830848"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_score_from_sysadmin_3746280042"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_score_from_sysadmin_3746280042"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role__score_sysadmin_3745830875"></role>
				<object href="#Object_Score_sysadmin_3745830848"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_subAttacks_from_sysadmin_3723882661"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_subAttacks_sysadmin_3719753425"></role>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vehicleFeature_sysadmin_3719754145"></role>
				<object href="#Object_VehicleFeature_user_3400133821"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vehicleFeature_from_sysadmin_3723882672"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vehicleFeature_from_sysadmin_3723882672"></role>
				<object href="#Object_Item_sysadmin_3509259179"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vehicleFeature_sysadmin_3719754145"></role>
				<object href="#Object_VehicleFeature_user_3400133821"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vulnerability_sysadmin_3723886255"></role>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vulnerability_from_sysadmin_3723886223"></role>
				<object href="#Object_Vulnerability_sysadmin_3718887241"></object>
			</connection>
		</binding>
		<binding>
			<relationship href="#Relationship_Association_sysadmin_3719758098"></relationship>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vulnerability_from_sysadmin_3723886223"></role>
				<object href="#Object_Vulnerability_sysadmin_3718887241"></object>
			</connection>
			<connection>
				<cardinality start="1" stop="1"></cardinality>
				<role href="#Role_vulnerability_sysadmin_3723886255"></role>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
			</connection>
		</binding>
		<report>_levelColoring()
/* can be:
(N)one
(L)ow
(H)igh
*/

if id = '(L)ow' then 
	id
else
	if id = '(H)igh' then
		id
	else
		id
	endif
endif</report>
		<report>__LiveCheck()
/* checks modeling rules */

/* every item needs at least one connction */
foreach .Item; where not ~() {
'Warning: ' type ' ' id ' is not connected to any security element' newline
}</report>
		<constraints>
			<connectivity>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
				<role href="#Role_attackMotivationOwner_sysadmin_3723882324"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
				<role href="#Role_operatingMode_from_sysadmin_3723882618"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
				<role href="#Role_operationalSituationUseCase_from_sysadmin_3723882638"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Attack_sysadmin_3718888403"></object>
				<role href="#Role_subAttacks_from_sysadmin_3723882661"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_AttackableProperty_sysadmin_3718886755"></object>
				<role href="#Role_AttackableProperty_sysadmin_3719760707"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_FinancialGain_sysadmin_3718887415"></object>
				<role href="#Role_Attack_Motivation_sysadmin_3721997780"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Harm_sysadmin_3718887288"></object>
				<role href="#Role_Attack_Motivation_sysadmin_3721997780"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_InformationRetrieval_sysadmin_3718887376"></object>
				<role href="#Role_Attack_Motivation_sysadmin_3721997780"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Item_sysadmin_3509259179"></object>
				<role href="#Role_vehicleFeature_from_sysadmin_3723882672"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_OperationalSituation_sysadmin_3509602770"></object>
				<role href="#Role_attackFrom_sysadmin_3719755018"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_ProductModification_sysadmin_3718887531"></object>
				<role href="#Role_Attack_Motivation_sysadmin_3721997780"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_ADLRequirement_user_3400763726"></object>
				<role href="#Role_mode_from_sysadmin_3723882589"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Vulnerability_sysadmin_3718887241"></object>
				<role href="#Role_nonFulfilledRequirement_from_sysadmin_3723882605"></role>
				<max>1</max>
			</connectivity>
			<connectivity>
				<object href="#Object_Vulnerability_sysadmin_3718887241"></object>
				<role href="#Role_vulnerability_from_sysadmin_3723886223"></role>
				<max>1</max>
			</connectivity>
		</constraints>
	</graph>
	<graph href="#Graph_System_modeling_user_3461239306"></graph>
	<graph href="#Graph_Timing_user_3506250345"></graph>
	<graph href="#Graph_Variability_sysadmin_3610110810"></graph>
	<graph href="#Graph_FeatureModel_user_3399887714"></graph>
	<graph href="#Graph_FeatureAllocation_sysadmin_3509183161"></graph>
	<graph href="#Graph_VerificationValidation_sysadmin_3557080813"></graph>
	<graph href="#Graph__EAST_ADL_sysadmin_3576828277"></graph>
</gxl>